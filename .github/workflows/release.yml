name: Release
on:
  workflow_call:
    inputs:
      environment:
        description: "Release to environment"
        default: "staging"
        required: false
        type: string

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    concurrency: release
    environment: ${{ inputs.environment }}
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_ID }}
          private_key: ${{ secrets.BOT_PRIVATE }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm ci

      - name: Verify signatures for installed dependencies
        run: npm audit signatures

      - name: Semantic Release
        uses: codfish/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
      
      - name: Create Sentry release
        # only run an action if a new version was created.
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: getsentry/action-release@v1
        with:
          environment: ${{ inputs.environment }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
