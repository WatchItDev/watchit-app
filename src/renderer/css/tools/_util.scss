/* Floats and Blocks */
@use "_mixins";
@use "_vars";
$property: border;
$position_list: bottom top right left;
$margin_padding: margin padding;
$width_height: height width;
$m-width_height: max-height max-width min-height min-width;


//Generate padding, margin
@for $i from 0 through 100 {

  @each $m_p in $margin_padding {
    .#{$m_p}-#{$i} {
      #{$m_p}: (0px + $i) !important;
    }
  }

  @each $l in $position_list {
    @each $m_p in $margin_padding {
      .#{$m_p}-#{$l}-#{$i} {
        #{$m_p}-#{$l}: (0px + $i) !important;
      }
    }

    @each $m_p in $margin_padding {
      .#{$m_p}-#{$l}-#{$i}-#{"p"} {
        #{$m_p}-#{$l}: (0% + $i) !important;
      }
    }

    @each $m_p in $margin_padding {
      .#{$m_p}-#{$l}-#{$i}-#{"vh"} {
        #{$m_p}-#{$l}: $i+vh !important;
      }
    }

    @each $m_p in $margin_padding {
      .#{$m_p}-#{$l}-#{$i}-#{"vw"} {
        #{$m_p}-#{$l}: $i+vw !important;
      }
    }

    @each $m_p in $margin_padding {
      .#{$m_p}-#{$l}-#{$i}-#{"rem"} {
        #{$m_p}-#{$l}: $i+rem !important;
      }
    }
  }
}

//Generate positions
@for $i from 0 through 100 {
  @each $l in $position_list {
    .#{$l}-#{$i} {
      #{$l}: 0px+$i !important;
    }

    .#{$l}-#{$i}-#{"p"} {
      #{$l}: 0%+$i !important;
    }

    .#{$l}-#{$i}-#{"vh"} {
      #{$l}: $i+vh !important;
    }

    .#{$l}-#{$i}-#{"vw"} {
      #{$l}: $i+vw !important;
    }

    .#{$l}-#{$i}-#{"rem"} {
      #{$l}: $i+rem !important;
    }
  }
}

//z-index
@for $i from 0 through 1000 {
  .z-index-#{$i} {
    z-index: 0 + $i !important;
  }
}

//Generate size
@for $i from 0 through 1000 {
  @each $l in $width_height {
    .#{$l}-#{$i} {
      #{$l}: 0px + $i !important;
    }
  }

  @each $l in $width_height {
    .#{$l}-#{$i}-#{"p"} {
      #{$l}: 0% + $i !important;
    }
  }

  @each $l in $width_height {
    .#{$l}-#{$i}-#{"vh"} {
      #{$l}: (0 + $i)+vh !important;
    }

    .#{$l}-#{$i}-#{"vw"} {
      #{$l}: (0 + $i)+vw !important;
    }

    .#{$l}-#{$i}-#{"rem"} {
      #{$l}:  $i+rem !important;
    }

  }
}


//Generate size
@for $i from 0 through 1000 {
  @each $l in $m-width_height {
    .#{$l}-#{$i} {
      #{$l}: 0px + $i !important;
    }
    .#{$l}-#{$i}-#{"vw"} {
      #{$l}: (0 + $i)+vw !important;
    }

    .#{$l}-#{$i}-#{"vh"} {
      #{$l}: (0 + $i)+vh !important;
    }

    .#{$l}-#{$i}-#{"rem"} {
      #{$l}: (0 + $i)+rem !important;
    }

  }
}

.clearfix {
  @include mixins.clearfix;
}

.center-block {
  display: block !important;
  float: none !important;
  margin-left: auto !important;
  margin-right: auto !important;
  clear: both;
}

.inline-block {
  display: inline-block;
}

.float-right {
  float: right !important;
}

.float-left {
  float: left !important;
}

/****** Position ******/

.no-left {
  left: 0;
}

.no-right {
  right: 0;
}

.no-top {
  top: 0;
}

.fixed {
  position: fixed !important;
}

.absolute {
  position: absolute !important;
}

.relative {
  position: relative !important;
}

/****** Struct ******/
.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

.vertical-padding {
  padding-top: (vars.$grid-gutter-height * 0.5) !important;
  padding-bottom: (vars.$grid-gutter-height * 0.5) !important;
}

.horizontal-padding {
  padding-left: (vars.$grid-gutter-width * 0.5) !important;
  padding-right: (vars.$grid-gutter-width * 0.5) !important;
}

/***** Out styles *****/
.no-padding {
  padding: 0 !important;
}

.no-margin {
  margin: 0 !important;
}

.no-border {
  border: none !important;
}

.no-float {
  float: none !important;
}

/***** Util ******/
.hide {
  display: none !important;
}

.show {
  display: block !important;
}

.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
}

.hidden {
  display: none !important;
  visibility: hidden !important;
}

.clear {
  clear: both;
  width: 0;
  height: 0;
}