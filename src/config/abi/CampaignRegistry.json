{
  "abi": [
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "authority",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "createCampaign",
      "inputs": [
        { "name": "template", "type": "address", "internalType": "address" },
        { "name": "policy", "type": "address", "internalType": "address" },
        { "name": "expiration", "type": "uint256", "internalType": "uint256" },
        { "name": "description", "type": "string", "internalType": "string" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getCampaign",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "policy", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "accessManager",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isConsumingScheduledOp",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setAuthority",
      "inputs": [
        { "name": "newAuthority", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "AuthorityUpdated",
      "inputs": [
        {
          "name": "authority",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CampaignRegistered",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "policy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "expireAt",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "campaign",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "scopeId",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "description",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessManagedInvalidAuthority",
      "inputs": [
        { "name": "authority", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AccessManagedRequiredDelay",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "delay", "type": "uint32", "internalType": "uint32" }
      ]
    },
    {
      "type": "error",
      "name": "AccessManagedUnauthorized",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    {
      "type": "error",
      "name": "ErrorDuringCampaignSetup",
      "inputs": [
        { "name": "campaign", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    { "type": "error", "name": "FailedDeployment", "inputs": [] },
    {
      "type": "error",
      "name": "InsufficientBalance",
      "inputs": [
        { "name": "balance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidCampaignContract",
      "inputs": [
        { "name": "campaign", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    { "type": "error", "name": "InvalidInput", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidUnauthorizedOperation",
      "inputs": [{ "name": "", "type": "string", "internalType": "string" }]
    },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    { "type": "error", "name": "Unauthorized", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60a08060405234602957306080526114bc908161002e8239608051818181610720015261083f0152f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c8063401e173814610c495780634f1ef2861461079857806352d1902d146106db5780637a9e5e4b146105e65780638fb3603714610535578063ad3cb1cc14610483578063bf7e214f14610413578063c4d66de8146100f35763fd72f76d1461007c575f80fd5b346100ef5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef576100c46100b661117e565b6100be6111a1565b90611346565b5f525f602052602073ffffffffffffffffffffffffffffffffffffffff60405f205416604051908152f35b5f80fd5b346100ef5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5761012a61117e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16159167ffffffffffffffff82168015908161040b575b6001149081610401575b1590816103f8575b506103d057818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005561037b575b506101ed611396565b6101f5611396565b6101fd611396565b610205611396565b61020e8161129b565b610216611396565b16801561031d577fffffffffffffffffffffffff00000000000000000000000000000000000000007fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005416177fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005561028a57005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b60646040517f6317e35f00000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e76616c696420617574686f7269747920616464726573732e0000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055836101e4565b7ff92ee8a9000000000000000000000000000000000000000000000000000000005f5260045ffd5b9050158461017b565b303b159150610173565b849150610169565b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef57602073ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416604051908152f35b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5760408051906104c081836111c4565b6005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef577ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005460a01c60ff16156105de5760207f8fb36037000000000000000000000000000000000000000000000000000000005b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b60205f6105b4565b346100ef5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5761061d61117e565b73ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00541633036106af57803b1561066d5761066b9061129b565b005b73ffffffffffffffffffffffffffffffffffffffff907fc2f31e5e000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b7f068ca9d8000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036107705760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b7fe07c8dba000000000000000000000000000000000000000000000000000000005f5260045ffd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef576107ca61117e565b6024359067ffffffffffffffff82116100ef57366023830112156100ef578160040135906107f782611232565b9161080560405193846111c4565b808352602083019336602483830101116100ef57815f9260246020930187378401015273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803014908115610c07575b50610770576044604073ffffffffffffffffffffffffffffffffffffffff7fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa0054168151928380927fd1f856ee0000000000000000000000000000000000000000000000000000000082525f60048301523360248301525afa8015610bfc575f915f91610bab575b5081610b9c575b5015610b185773ffffffffffffffffffffffffffffffffffffffff8116926040517f52d1902d000000000000000000000000000000000000000000000000000000008152602081600481885afa5f9181610ae4575b5061097e57847f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc869203610ab95750823b15610a8e57807fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610a5c575f809161066b945190845af4610a5661126c565b916113ed565b50505034610a6657005b7fb398979f000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faa1d49a4000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091506020813d602011610b10575b81610b00602093836111c4565b810103126100ef5751908661094d565b3d9150610af3565b60846040517f6317e35f00000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201527f6f6e2e00000000000000000000000000000000000000000000000000000000006064820152fd5b63ffffffff91501615846108f8565b9150506040813d604011610bf4575b81610bc7604093836111c4565b810103126100ef5780519081151582036100ef57602001519063ffffffff821682036100ef5790856108f1565b3d9150610bba565b6040513d5f823e3d90fd5b905073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614158461086a565b346100ef5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef57610c8061117e565b610c886111a1565b906044359060643567ffffffffffffffff81116100ef57366023820112156100ef5780600401359267ffffffffffffffff84116100ef5736602485840101116100ef5760205f604051828101907f01ffc9a70000000000000000000000000000000000000000000000000000000082527f01ffc9a700000000000000000000000000000000000000000000000000000000602482015260248152610d2d6044826111c4565b519086617530fa5f513d82611172575b5081611168575b50806110d1575b8061103b575b15610ff957610e108110610fd157420191824211610fa4576e5af43d82803e903d91602b57fd5bf360405160208101903360601b82527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008460601b16603482015285604882015260488152610dc76068826111c4565b51902091763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c16175f5260781b17602052603760095ff59273ffffffffffffffffffffffffffffffffffffffff8416938415610f7c575f80916040518260208201917f8dac9bbc00000000000000000000000000000000000000000000000000000000835233602482015288604482015260448152610e656064826111c4565b51925af1610e7161126c565b5015610f50577fdcfe08ac848974049eab4f0b767f687fb801bf4225c8c656ce89a688a13cb31e73ffffffffffffffffffffffffffffffffffffffff86836024610ebd60209a33611346565b96875f525f8b5260405f208a7fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051978a89528b890152606060408901528260608901520160808701375f6080858701015216926080817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f339601168101030190a4604051908152f35b837f778fa859000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fb06ebf3d000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7fb4fa3fb3000000000000000000000000000000000000000000000000000000005f5260045ffd5b73ffffffffffffffffffffffffffffffffffffffff837f31cfaed1000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b5060205f604051828101907f01ffc9a70000000000000000000000000000000000000000000000000000000082527ffc38aaef0000000000000000000000000000000000000000000000000000000060248201526024815261109e6044826111c4565b519086617530fa5f513d826110c5575b50816110bb575b50610d51565b90501515866110b5565b602011159150876110ae565b5060205f604051828101907f01ffc9a70000000000000000000000000000000000000000000000000000000082527fffffffff000000000000000000000000000000000000000000000000000000006024820152602481526111346044826111c4565b519086617530fa5f513d8261115c575b5081611152575b5015610d4b565b905015158661114b565b60201115915087611144565b9050151586610d44565b60201115915087610d3d565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100ef57565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036100ef57565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761120557604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161120557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b3d15611296573d9061127d82611232565b9161128b60405193846111c4565b82523d5f602084013e565b606090565b602073ffffffffffffffffffffffffffffffffffffffff7f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9216807fffffffffffffffffffffffff00000000000000000000000000000000000000007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416177ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a0055604051908152a1565b907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006040519181602084019460601b16845260601b166034820152602881526113906048826111c4565b51902090565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c16156113c557565b7fd7e6bcf8000000000000000000000000000000000000000000000000000000005f5260045ffd5b9061142a575080511561140257805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f5260045ffd5b8151158061147d575b61143b575090565b73ffffffffffffffffffffffffffffffffffffffff907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b1561143356fea2646970667358221220a3d2efa03c592b7a49e295a36a24704e3371c83619b84b098dc0ab9cd83bae4264736f6c634300081a0033",
    "sourceMap": "995:6470:3:-:0;;;;;;;1171:4:28;1163:13;;995:6470:3;;;;;;1163:13:28;995:6470:3;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c8063401e173814610c495780634f1ef2861461079857806352d1902d146106db5780637a9e5e4b146105e65780638fb3603714610535578063ad3cb1cc14610483578063bf7e214f14610413578063c4d66de8146100f35763fd72f76d1461007c575f80fd5b346100ef5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef576100c46100b661117e565b6100be6111a1565b90611346565b5f525f602052602073ffffffffffffffffffffffffffffffffffffffff60405f205416604051908152f35b5f80fd5b346100ef5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5761012a61117e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16159167ffffffffffffffff82168015908161040b575b6001149081610401575b1590816103f8575b506103d057818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005561037b575b506101ed611396565b6101f5611396565b6101fd611396565b610205611396565b61020e8161129b565b610216611396565b16801561031d577fffffffffffffffffffffffff00000000000000000000000000000000000000007fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005416177fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005561028a57005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b60646040517f6317e35f00000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e76616c696420617574686f7269747920616464726573732e0000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055836101e4565b7ff92ee8a9000000000000000000000000000000000000000000000000000000005f5260045ffd5b9050158461017b565b303b159150610173565b849150610169565b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef57602073ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416604051908152f35b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5760408051906104c081836111c4565b6005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef577ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005460a01c60ff16156105de5760207f8fb36037000000000000000000000000000000000000000000000000000000005b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b60205f6105b4565b346100ef5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5761061d61117e565b73ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00541633036106af57803b1561066d5761066b9061129b565b005b73ffffffffffffffffffffffffffffffffffffffff907fc2f31e5e000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b7f068ca9d8000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b346100ef575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036107705760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b7fe07c8dba000000000000000000000000000000000000000000000000000000005f5260045ffd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef576107ca61117e565b6024359067ffffffffffffffff82116100ef57366023830112156100ef578160040135906107f782611232565b9161080560405193846111c4565b808352602083019336602483830101116100ef57815f9260246020930187378401015273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803014908115610c07575b50610770576044604073ffffffffffffffffffffffffffffffffffffffff7fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa0054168151928380927fd1f856ee0000000000000000000000000000000000000000000000000000000082525f60048301523360248301525afa8015610bfc575f915f91610bab575b5081610b9c575b5015610b185773ffffffffffffffffffffffffffffffffffffffff8116926040517f52d1902d000000000000000000000000000000000000000000000000000000008152602081600481885afa5f9181610ae4575b5061097e57847f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc869203610ab95750823b15610a8e57807fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610a5c575f809161066b945190845af4610a5661126c565b916113ed565b50505034610a6657005b7fb398979f000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faa1d49a4000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091506020813d602011610b10575b81610b00602093836111c4565b810103126100ef5751908661094d565b3d9150610af3565b60846040517f6317e35f00000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201527f6f6e2e00000000000000000000000000000000000000000000000000000000006064820152fd5b63ffffffff91501615846108f8565b9150506040813d604011610bf4575b81610bc7604093836111c4565b810103126100ef5780519081151582036100ef57602001519063ffffffff821682036100ef5790856108f1565b3d9150610bba565b6040513d5f823e3d90fd5b905073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614158461086a565b346100ef5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ef57610c8061117e565b610c886111a1565b906044359060643567ffffffffffffffff81116100ef57366023820112156100ef5780600401359267ffffffffffffffff84116100ef5736602485840101116100ef5760205f604051828101907f01ffc9a70000000000000000000000000000000000000000000000000000000082527f01ffc9a700000000000000000000000000000000000000000000000000000000602482015260248152610d2d6044826111c4565b519086617530fa5f513d82611172575b5081611168575b50806110d1575b8061103b575b15610ff957610e108110610fd157420191824211610fa4576e5af43d82803e903d91602b57fd5bf360405160208101903360601b82527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008460601b16603482015285604882015260488152610dc76068826111c4565b51902091763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c16175f5260781b17602052603760095ff59273ffffffffffffffffffffffffffffffffffffffff8416938415610f7c575f80916040518260208201917f8dac9bbc00000000000000000000000000000000000000000000000000000000835233602482015288604482015260448152610e656064826111c4565b51925af1610e7161126c565b5015610f50577fdcfe08ac848974049eab4f0b767f687fb801bf4225c8c656ce89a688a13cb31e73ffffffffffffffffffffffffffffffffffffffff86836024610ebd60209a33611346565b96875f525f8b5260405f208a7fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051978a89528b890152606060408901528260608901520160808701375f6080858701015216926080817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f339601168101030190a4604051908152f35b837f778fa859000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fb06ebf3d000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7fb4fa3fb3000000000000000000000000000000000000000000000000000000005f5260045ffd5b73ffffffffffffffffffffffffffffffffffffffff837f31cfaed1000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b5060205f604051828101907f01ffc9a70000000000000000000000000000000000000000000000000000000082527ffc38aaef0000000000000000000000000000000000000000000000000000000060248201526024815261109e6044826111c4565b519086617530fa5f513d826110c5575b50816110bb575b50610d51565b90501515866110b5565b602011159150876110ae565b5060205f604051828101907f01ffc9a70000000000000000000000000000000000000000000000000000000082527fffffffff000000000000000000000000000000000000000000000000000000006024820152602481526111346044826111c4565b519086617530fa5f513d8261115c575b5081611152575b5015610d4b565b905015158661114b565b60201115915087611144565b9050151586610d44565b60201115915087610d3d565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100ef57565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036100ef57565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761120557604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161120557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b3d15611296573d9061127d82611232565b9161128b60405193846111c4565b82523d5f602084013e565b606090565b602073ffffffffffffffffffffffffffffffffffffffff7f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9216807fffffffffffffffffffffffff00000000000000000000000000000000000000007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416177ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a0055604051908152a1565b907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006040519181602084019460601b16845260601b166034820152602881526113906048826111c4565b51902090565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c16156113c557565b7fd7e6bcf8000000000000000000000000000000000000000000000000000000005f5260045ffd5b9061142a575080511561140257805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f5260045ffd5b8151158061147d575b61143b575090565b73ffffffffffffffffffffffffffffffffffffffff907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b1561143356fea2646970667358221220a3d2efa03c592b7a49e295a36a24704e3371c83619b84b098dc0ab9cd83bae4264736f6c634300081a0033",
    "sourceMap": "995:6470:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3747:36;995:6470;;:::i;:::-;;;:::i;:::-;3747:36;;:::i;:::-;995:6470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8837:64:27;995:6470:3;;;;;;4301:16:27;995:6470:3;;;;4726:16:27;;:34;;;;995:6470:3;4805:1:27;4790:16;:50;;;;995:6470:3;4855:13:27;:30;;;;995:6470:3;4851:91:27;;;995:6470:3;;4805:1:27;995:6470:3;;;;;8837:64:27;995:6470:3;4979:67:27;;995:6470:3;6893:76:27;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;2222:16:26;;;:::i;:::-;6893:76:27;;:::i;:::-;995:6470:3;2957:27:83;;2953:123;;995:6470:3;3994:62:83;995:6470:3;;;3994:62:83;995:6470:3;5066:101:27;;995:6470:3;5066:101:27;995:6470:3;8837:64:27;995:6470:3;;8837:64:27;995:6470:3;5142:14:27;995:6470:3;;;4805:1:27;995:6470:3;;5142:14:27;995:6470:3;2953:123:83;3007:58;995:6470:3;;3007:58:83;;;995:6470:3;;3007:58:83;;995:6470:3;;;;;;;;;;;3007:58:83;4979:67:27;995:6470:3;;;;8837:64:27;995:6470:3;4979:67:27;;;4851:91;4908:23;995:6470:3;4908:23:27;995:6470:3;;4908:23:27;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:27;;4726:34;;;-1:-1:-1;4726:34:27;;995:6470:3;;;;;;;;;;;;;1782:71:26;995:6470:3;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:71:26;995:6470:3;;;;;4698:71:26;;;995:6470:3;;4698:71:26;995:6470:3;;;;;;;;4698:71:26;995:6470:3;;4698:71:26;;995:6470:3;;;;;;;;;;;;;:::i;:::-;;1782:71:26;995:6470:3;;966:10:29;4258:21:26;4254:92;;4359:24;;:29;4355:110;;4488:12;;;:::i;:::-;995:6470:3;4355:110:26;995:6470:3;4411:43:26;;995:6470:3;4411:43:26;995:6470:3;;;;;4411:43:26;4254:92;4302:33;995:6470:3;4302:33:26;966:10:29;995:6470:3;;;;4302:33:26;995:6470:3;;;;;;;;;;;;5115:6:28;995:6470:3;5106:4:28;5098:23;5094:145;;995:6470:3;;;811:66:42;995:6470:3;;;5094:145:28;5199:29;995:6470:3;5199:29:28;995:6470:3;;5199:29:28;995:6470:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4692:6:28;995:6470:3;4683:4:28;;4675:23;:120;;;;;995:6470:3;4658:251:28;;;3685:30:83;995:6470:3;;3994:62:83;995:6470:3;;;;3685:30:83;;;;995:6470:3;3685:30:83;;995:6470:3;;3685:30:83;;995:6470:3;1900:10:83;995:6470:3;;;;3685:30:83;;;;;;995:6470:3;;;3685:30:83;;;995:6470:3;3732:31:83;;;;995:6470:3;1876:35:83;;1872:140;;995:6470:3;;;;;;;6156:52:28;;995:6470:3;6156:52:28;995:6470:3;6156:52:28;;;;995:6470:3;;6156:52:28;;;995:6470:3;-1:-1:-1;6152:437:28;;6518:60;;995:6470:3;6518:60:28;995:6470:3;;;;6518:60:28;6152:437;6250:40;811:66:42;6250:40:28;;;6246:120;;1748:29:42;;;:34;1744:119;;995:6470:3;;811:66:42;995:6470:3;;;811:66:42;995:6470:3;2407:36:42;995:6470:3;2407:36:42;;995:6470:3;;2458:15:42;:11;;995:6470:3;4049:25:49;;4091:55;4049:25;;;;;;;;:::i;:::-;4091:55;;:::i;2454:148:42:-;6163:9;;;;6159:70;;995:6470:3;6159:70:42;6199:19;995:6470:3;6199:19:42;995:6470:3;;6199:19:42;1744:119;1805:47;995:6470:3;1805:47:42;995:6470:3;;;;1805:47:42;6246:120:28;6317:34;995:6470:3;6317:34:28;995:6470:3;;;;6317:34:28;6156:52;;;;995:6470:3;6156:52:28;;995:6470:3;6156:52:28;;;;;;995:6470:3;6156:52:28;;;:::i;:::-;;;995:6470:3;;;;;6156:52:28;;;;;;;-1:-1:-1;6156:52:28;;1872:140:83;1934:67;995:6470:3;;1934:67:83;;;995:6470:3;;1934:67:83;;528:1:81;995:6470:3;;528:1:81;;995:6470:3;528:1:81;3685:30:83;995:6470:3;;528:1:81;;;;;;1934:67:83;3732:31;995:6470:3;;;;3744:19:83;3732:31;;;3685:30;;;;995:6470:3;3685:30:83;;995:6470:3;3685:30:83;;;;;;995:6470:3;3685:30:83;;;:::i;:::-;;;995:6470:3;;;;;;1430:27;;;;995:6470;;;;;;;;;;;;;;;3685:30:83;;;;;;;-1:-1:-1;3685:30:83;;;995:6470:3;;;;;;;;;4675:120:28;995:6470:3;;;811:66:42;995:6470:3;;4753:42:28;;4675:120;;;995:6470:3;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4574:56:55;;;;1033:25;4574:56;;1033:25;995:6470:3;4574:56:55;;995:6470:3;;4574:56:55;;;995:6470:3;4574:56:55;;:::i;:::-;4751:228;;;;;995:6470:3;4751:228:55;;4996:29;;;995:6470:3;4996:48:55;;;;995:6470:3;4989:55:55;991:148;;;995:6470:3;1559:81:55;;;995:6470:3;2458:47;2454:118;;1253:7;4540:26;;4536:78;;4640:15;1253:7;4640:15;;;1253:7;;;3673:585:40;995:6470:3;;;6884:48;;6901:10;;995:6470;;;;;;;;;;;;;;;;;;;6884:48;;;;;;:::i;:::-;995:6470;6874:59;;3673:585:40;;;;;;;;995:6470:3;3673:585:40;;;;995:6470:3;3673:585:40;;;995:6470:3;3673:585:40;995:6470:3;;;;4271:22:40;;;4267:85;;995:6470:3;;;;;5661:83;995:6470;5661:83;;;;;;6901:10;995:6470;5661:83;;995:6470;;;;;;;5661:83;;;995:6470;5661:83;;:::i;:::-;5773:23;;;;;;:::i;:::-;;5810:8;5806:55;;4981:80;995:6470;6901:10;;995:6470;6526:34;995:6470;6901:10;;6526:34;:::i;:::-;995:6470;;;;;;;;;;;;;;;;;;;;;;;;1253:7;;;995:6470;;;1253:7;;;;995:6470;1253:7;;995:6470;;;;;;;;;;;;;;6901:10;995:6470;6901:10;4574:56:55;995:6470:3;6901:10;995:6470;;;1253:7;;4981:80;;;;995:6470;;;;;;5806:55;5827:34;;995:6470;5827:34;995:6470;;;;5827:34;4267:85:40;4316:25;995:6470:3;4316:25:40;995:6470:3;;4316:25:40;1253:7:3;;995:6470;1253:7;;995:6470;1253:7;995:6470;;1253:7;4536:78;4589:14;995:6470;4589:14;995:6470;;4589:14;2454:118;995:6470;2528:33;;995:6470;2528:33;995:6470;;;;;2528:33;1559:81:55;1586:54;995:6470:3;;;;4574:56:55;;;;1033:25;4574:56;;1430:27:3;995:6470;4574:56:55;;995:6470:3;;4574:56:55;;;995:6470:3;4574:56:55;;:::i;:::-;4751:228;;;;;995:6470:3;4751:228:55;;4996:29;;;1559:81;4996:48;;;;1559:81;4989:55;1559:81;;4996:48;5029:15;;;;4996:48;;;:29;995:6470:3;-1:-1:-1;5007:18:55;;-1:-1:-1;4996:29:55;;;991:148;1076:63;995:6470:3;;;;4574:56:55;;;;1033:25;4574:56;;995:6470:3;;4574:56:55;;995:6470:3;;4574:56:55;;;995:6470:3;4574:56:55;;:::i;:::-;4751:228;;;;;995:6470:3;4751:228:55;;4996:29;;;991:148;4996:48;;;;991:148;4989:55;1075:64;991:148;;4996:48;5029:15;;;;4996:48;;;:29;995:6470:3;-1:-1:-1;5007:18:55;;-1:-1:-1;4996:29:55;;;:48;5029:15;;;;4996:48;;;:29;995:6470:3;-1:-1:-1;5007:18:55;;-1:-1:-1;4996:29:55;;;995:6470:3;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;995:6470:3;;;;;-1:-1:-1;995:6470:3;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;995:6470:3;;;;:::o;:::-;;;:::o;4964:220:26:-;995:6470:3;;5147:30:26;4964:220;995:6470:3;;;1782:71:26;995:6470:3;;;1782:71:26;995:6470:3;;;;;;5147:30:26;4964:220::o;7304:159:3:-;;995:6470;;;7423:32;;;;;995:6470;;;;;;;;;;;;;7423:32;;;;;;;:::i;:::-;995:6470;7413:43;;7304:159;:::o;7084:141:27:-;995:6470:3;8837:64:27;995:6470:3;;;;7150:18:27;7146:73;;7084:141::o;7146:73::-;7191:17;-1:-1:-1;7191:17:27;;-1:-1:-1;7191:17:27;4421:582:49;;4593:8;;-1:-1:-1;995:6470:3;;5674:21:49;:17;;5799:158;;;;;;5670:354;5994:19;5694:1;5994:19;;5694:1;5994:19;4589:408;995:6470:3;;4841:22:49;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;995:6470:3;4917:24:49;;4862:1;4917:24;995:6470:3;4917:24:49;995:6470:3;;4862:1:49;4917:24;4841:49;4867:18;;;:23;4841:49;",
    "linkReferences": {},
    "immutableReferences": {
      "38268": [
        { "start": 1824, "length": 32 },
        { "start": 2111, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "authority()": "bf7e214f",
    "createCampaign(address,address,uint256,string)": "401e1738",
    "getCampaign(address,address)": "fd72f76d",
    "initialize(address)": "c4d66de8",
    "isConsumingScheduledOp()": "8fb36037",
    "proxiableUUID()": "52d1902d",
    "setAuthority(address)": "7a9e5e4b",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaign\",\"type\":\"address\"}],\"name\":\"ErrorDuringCampaignSetup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaign\",\"type\":\"address\"}],\"name\":\"InvalidCampaignContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInput\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"InvalidUnauthorizedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"campaign\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"scopeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"CampaignRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"template\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"}],\"name\":\"getCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accessManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Supports upgradeability via UUPS and integrates with an access control system.      Uses ERC165 to verify that contracts implement the required campaign interface.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidUnauthorizedOperation(string)\":[{\"details\":\"Error thrown when an unauthorized operation is attempted.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"authority()\":{\"details\":\"Returns the current authority.\"},\"createCampaign(address,address,uint256,string)\":{\"details\":\"The provided template must be a valid campaign contract.\",\"params\":{\"description\":\"A brief description of the campaign.\",\"expiration\":\"The timestamp when the campaign expires.\",\"policy\":\"The policy the campaign is linked to.\",\"template\":\"The address of the campaign contract to clone.\"},\"returns\":{\"_0\":\"The address of the newly created campaign.\"}},\"getCampaign(address,address)\":{\"details\":\"Computes a unique identifier (`scopeId`) based on the account and policy address.      If a campaign is registered under this identifier, it returns the campaign address;      otherwise, it returns `address(0)`.\",\"params\":{\"account\":\"The address of the account (holder) making the query.\",\"policy\":\"The address of the policy contract associated with the campaign.\"},\"returns\":{\"_0\":\"The address of the associated campaign if found, otherwise `address(0)`.\"}},\"initialize(address)\":{\"details\":\"Sets up initial roles and dependencies for upgradeability and access management.\",\"params\":{\"accessManager\":\"The address of the access control manager contract.\"}},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"INTERFACE_CAMPAIGN\":{\"details\":\"The interface ID for ICampaign, used to verify that a campaign contract implements the correct interface.\"},\"_scopes\":{\"details\":\"Maps a campaign reference to its associated scope, which defines the entity the campaign operates on.\"}},\"title\":\"CampaignRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"ErrorDuringCampaignSetup(address)\":[{\"notice\":\"Custom error when a campaign setup fails.\"}],\"InvalidCampaignContract(address)\":[{\"notice\":\"Custom error for invalid campaign contracts.\"}],\"InvalidInput()\":[{\"notice\":\"Custom error when invalid input is provided.\"}],\"Unauthorized()\":[{\"notice\":\"Custom error when an unauthorized action is attempted.\"}]},\"events\":{\"CampaignRegistered(address,address,uint256,address,bytes32,string)\":{\"notice\":\"Event emitted when a new campaign is registered.\"}},\"kind\":\"user\",\"methods\":{\"createCampaign(address,address,uint256,string)\":{\"notice\":\"Creates and registers a new campaign by cloning a given template contract.\"},\"getCampaign(address,address)\":{\"notice\":\"Retrieves the campaign associated with a given account and policy.\"},\"initialize(address)\":{\"notice\":\"Initializes the contract with access control.\"}},\"notice\":\"Manages campaign contract registrations, allowing users to deploy and track campaigns.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/incentives/campaigns/CampaignRegistry.sol\":\"CampaignRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@account-abstraction/=node_modules/@account-abstraction/\",\":@ethereum-attestation-service/=node_modules/@ethereum-attestation-service/\",\":@ethsign/=node_modules/@ethsign/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@synaps3/=node_modules/@synaps3/protocol/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"contracts/incentives/campaigns/CampaignRegistry.sol\":{\"keccak256\":\"0x7a9692e466394498313741a16fd1a353ed24396199ca2ded41fa17a377947883\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8281e9e4722eb4443577e122904355922c8ffc496cdda243a577ada6d90f3d1\",\"dweb:/ipfs/Qmezz79Bvm4C43fpdKawSgtbeEDUUte7kA7pqLZBYgmcqF\"]},\"contracts/interfaces/ICampaign.sol\":{\"keccak256\":\"0x92e40442cfe05ef56a4404cdf623114590729bd19f1e6c319af82f3ac8043167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd1b8636b395eee3bef0b277463bce38bd902a8c7a00d4e5230ac9b2505ce81a\",\"dweb:/ipfs/QmdyrgQv3ZRqd5ULFxzx5qbF3S9Mb5RCVXSQaE36Cn46ue\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\":{\"keccak256\":\"0x89017bb026363fdc9fdc4b7c995aaf83e4c5af5c022eafa2e96352f843297373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dff6e61ba53c87ad06cbdddb9ff36dec215a41beff91746a80f4a9a32d37f447\",\"dweb:/ipfs/QmUm6hznJTihCTaRx7TXHXKbgyuDEEgehyRzi7TAs8GLvB\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0x9be2d08a326515805bc9cf6315b7953f8d1ebe88abf48c2d645fb1fa8211a0e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e750d656e37efaefbb2300051ec2c4c725db266c5ff89bc985f7ecb8d214c4f4\",\"dweb:/ipfs/QmT51FsZes2n2nrLLh3d8YkBYKY43CtwScZxixcLGzL9r6\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"node_modules/@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x27c3c648062924bd44cd6f38541c78e6de145dd49515ee62321e42fc1b72e5c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cce2ebc0392b5a96f5c7bbaaf5c3d23c0e7190e64cfa05a49978badc1496141\",\"dweb:/ipfs/QmYQC1U12igR1osVyjRHaHiiTgYYuPjncAxwmjbZ452dCL\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"node_modules/@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"node_modules/@synaps3/protocol/contracts/core/interfaces/access/IAccessManager.sol\":{\"keccak256\":\"0x3fca11b171d83b9e9d4105377375548dcc9e35b6b321888cbddde041761ea3a7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://11adde1c1df11fd0bf6c2569715f9d8ebe928c5b1bca69baa195af025b32d7a3\",\"dweb:/ipfs/QmTVdD9v3WvXkbnTswWsU45qaWp5YuzwSqw21msdVALULj\"]},\"node_modules/@synaps3/protocol/contracts/core/primitives/Constants.sol\":{\"keccak256\":\"0x61f038a108a20c52262b4b82b9fb77138073e7d1132d61c44d2ec6a12a933fbb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68833549202603f5ffd8b76c163c27e580c9108e03ad6478ba4b836ee35b277b\",\"dweb:/ipfs/QmaUSQYneH1yg6GNypJ7L2sJ1rtp6Tf6RS7YmgBPpbNoHd\"]},\"node_modules/@synaps3/protocol/contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol\":{\"keccak256\":\"0x3287bc31303bd74f3a2c200a6633a1042edc372730337db050a790e875b77f69\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f9277942bb4aa2eea9df912c252d1e77a8c058c0ebbfea3f18320527fb422abe\",\"dweb:/ipfs/QmPSqnu3ZnYibNbrpYxdxSSzjiYpBRvB75WDVErA8BKihB\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authority",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AccessManagedInvalidAuthority"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "uint32", "name": "delay", "type": "uint32" }
          ],
          "type": "error",
          "name": "AccessManagedRequiredDelay"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "AccessManagedUnauthorized"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        {
          "inputs": [
            { "internalType": "address", "name": "campaign", "type": "address" }
          ],
          "type": "error",
          "name": "ErrorDuringCampaignSetup"
        },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        { "inputs": [], "type": "error", "name": "FailedDeployment" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "balance", "type": "uint256" },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "campaign", "type": "address" }
          ],
          "type": "error",
          "name": "InvalidCampaignContract"
        },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        { "inputs": [], "type": "error", "name": "InvalidInput" },
        {
          "inputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ],
          "type": "error",
          "name": "InvalidUnauthorizedOperation"
        },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        { "inputs": [], "type": "error", "name": "Unauthorized" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authority",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "policy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "expireAt",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "campaign",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "scopeId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CampaignRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "template",
              "type": "address"
            },
            { "internalType": "address", "name": "policy", "type": "address" },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createCampaign",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "address", "name": "policy", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCampaign",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "accessManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isConsumingScheduledOp",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authority()": { "details": "Returns the current authority." },
          "createCampaign(address,address,uint256,string)": {
            "details": "The provided template must be a valid campaign contract.",
            "params": {
              "description": "A brief description of the campaign.",
              "expiration": "The timestamp when the campaign expires.",
              "policy": "The policy the campaign is linked to.",
              "template": "The address of the campaign contract to clone."
            },
            "returns": { "_0": "The address of the newly created campaign." }
          },
          "getCampaign(address,address)": {
            "details": "Computes a unique identifier (`scopeId`) based on the account and policy address.      If a campaign is registered under this identifier, it returns the campaign address;      otherwise, it returns `address(0)`.",
            "params": {
              "account": "The address of the account (holder) making the query.",
              "policy": "The address of the policy contract associated with the campaign."
            },
            "returns": {
              "_0": "The address of the associated campaign if found, otherwise `address(0)`."
            }
          },
          "initialize(address)": {
            "details": "Sets up initial roles and dependencies for upgradeability and access management.",
            "params": {
              "accessManager": "The address of the access control manager contract."
            }
          },
          "isConsumingScheduledOp()": {
            "details": "Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "setAuthority(address)": {
            "details": "Transfers control to a new authority. The caller must be the current authority."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createCampaign(address,address,uint256,string)": {
            "notice": "Creates and registers a new campaign by cloning a given template contract."
          },
          "getCampaign(address,address)": {
            "notice": "Retrieves the campaign associated with a given account and policy."
          },
          "initialize(address)": {
            "notice": "Initializes the contract with access control."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@account-abstraction/=node_modules/@account-abstraction/",
        "@ethereum-attestation-service/=node_modules/@ethereum-attestation-service/",
        "@ethsign/=node_modules/@ethsign/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@synaps3/=node_modules/@synaps3/protocol/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solady/=lib/solady/src/"
      ],
      "optimizer": { "enabled": true, "runs": 20000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "contracts/incentives/campaigns/CampaignRegistry.sol": "CampaignRegistry"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/incentives/campaigns/CampaignRegistry.sol": {
        "keccak256": "0x7a9692e466394498313741a16fd1a353ed24396199ca2ded41fa17a377947883",
        "urls": [
          "bzz-raw://f8281e9e4722eb4443577e122904355922c8ffc496cdda243a577ada6d90f3d1",
          "dweb:/ipfs/Qmezz79Bvm4C43fpdKawSgtbeEDUUte7kA7pqLZBYgmcqF"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ICampaign.sol": {
        "keccak256": "0x92e40442cfe05ef56a4404cdf623114590729bd19f1e6c319af82f3ac8043167",
        "urls": [
          "bzz-raw://fd1b8636b395eee3bef0b277463bce38bd902a8c7a00d4e5230ac9b2505ce81a",
          "dweb:/ipfs/QmdyrgQv3ZRqd5ULFxzx5qbF3S9Mb5RCVXSQaE36Cn46ue"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol": {
        "keccak256": "0x89017bb026363fdc9fdc4b7c995aaf83e4c5af5c022eafa2e96352f843297373",
        "urls": [
          "bzz-raw://dff6e61ba53c87ad06cbdddb9ff36dec215a41beff91746a80f4a9a32d37f447",
          "dweb:/ipfs/QmUm6hznJTihCTaRx7TXHXKbgyuDEEgehyRzi7TAs8GLvB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27",
        "urls": [
          "bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e",
          "dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/AuthorityUtils.sol": {
        "keccak256": "0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4",
        "urls": [
          "bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e",
          "dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol": {
        "keccak256": "0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6",
        "urls": [
          "bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694",
          "dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol": {
        "keccak256": "0x9be2d08a326515805bc9cf6315b7953f8d1ebe88abf48c2d645fb1fa8211a0e2",
        "urls": [
          "bzz-raw://e750d656e37efaefbb2300051ec2c4c725db266c5ff89bc985f7ecb8d214c4f4",
          "dweb:/ipfs/QmT51FsZes2n2nrLLh3d8YkBYKY43CtwScZxixcLGzL9r6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAuthority.sol": {
        "keccak256": "0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030",
        "urls": [
          "bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c",
          "dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Clones.sol": {
        "keccak256": "0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae",
        "urls": [
          "bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0",
          "dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06",
        "urls": [
          "bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c",
          "dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
        "urls": [
          "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
          "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x27c3c648062924bd44cd6f38541c78e6de145dd49515ee62321e42fc1b72e5c2",
        "urls": [
          "bzz-raw://1cce2ebc0392b5a96f5c7bbaaf5c3d23c0e7190e64cfa05a49978badc1496141",
          "dweb:/ipfs/QmYQC1U12igR1osVyjRHaHiiTgYYuPjncAxwmjbZ452dCL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
        "urls": [
          "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
          "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212",
        "urls": [
          "bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f",
          "dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/types/Time.sol": {
        "keccak256": "0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc",
        "urls": [
          "bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6",
          "dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/protocol/contracts/core/interfaces/access/IAccessManager.sol": {
        "keccak256": "0x3fca11b171d83b9e9d4105377375548dcc9e35b6b321888cbddde041761ea3a7",
        "urls": [
          "bzz-raw://11adde1c1df11fd0bf6c2569715f9d8ebe928c5b1bca69baa195af025b32d7a3",
          "dweb:/ipfs/QmTVdD9v3WvXkbnTswWsU45qaWp5YuzwSqw21msdVALULj"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@synaps3/protocol/contracts/core/primitives/Constants.sol": {
        "keccak256": "0x61f038a108a20c52262b4b82b9fb77138073e7d1132d61c44d2ec6a12a933fbb",
        "urls": [
          "bzz-raw://68833549202603f5ffd8b76c163c27e580c9108e03ad6478ba4b836ee35b277b",
          "dweb:/ipfs/QmaUSQYneH1yg6GNypJ7L2sJ1rtp6Tf6RS7YmgBPpbNoHd"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@synaps3/protocol/contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol": {
        "keccak256": "0x3287bc31303bd74f3a2c200a6633a1042edc372730337db050a790e875b77f69",
        "urls": [
          "bzz-raw://f9277942bb4aa2eea9df912c252d1e77a8c058c0ebbfea3f18320527fb422abe",
          "dweb:/ipfs/QmPSqnu3ZnYibNbrpYxdxSSzjiYpBRvB75WDVErA8BKihB"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1070,
        "contract": "contracts/incentives/campaigns/CampaignRegistry.sol:CampaignRegistry",
        "label": "_scopes",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  },
  "ast": {
    "absolutePath": "contracts/incentives/campaigns/CampaignRegistry.sol",
    "id": 1345,
    "exportedSymbols": {
      "AccessControlledUpgradeable": [46942],
      "CampaignRegistry": [1344],
      "Clones": [39506],
      "ERC165Checker": [41514],
      "EnumerableSet": [45654],
      "ICampaign": [1390],
      "Initializable": [38248],
      "UUPSUpgradeable": [38430]
    },
    "nodeType": "SourceUnit",
    "src": "32:7434:3",
    "nodes": [
      {
        "id": 1024,
        "nodeType": "PragmaDirective",
        "src": "32:23:3",
        "nodes": [],
        "literals": ["solidity", "0.8", ".26"]
      },
      {
        "id": 1026,
        "nodeType": "ImportDirective",
        "src": "57:66:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1345,
        "sourceUnit": 39507,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1025,
              "name": "Clones",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39506,
              "src": "66:6:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1028,
        "nodeType": "ImportDirective",
        "src": "124:88:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1345,
        "sourceUnit": 45655,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1027,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45654,
              "src": "133:13:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1030,
        "nodeType": "ImportDirective",
        "src": "213:94:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1345,
        "sourceUnit": 41515,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1029,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41514,
              "src": "222:13:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1032,
        "nodeType": "ImportDirective",
        "src": "308:98:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1345,
        "sourceUnit": 38249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1031,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38248,
              "src": "317:13:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1034,
        "nodeType": "ImportDirective",
        "src": "407:102:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1345,
        "sourceUnit": 38431,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1033,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38430,
              "src": "416:15:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1036,
        "nodeType": "ImportDirective",
        "src": "510:115:3",
        "nodes": [],
        "absolutePath": "node_modules/@synaps3/protocol/contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol",
        "file": "@synaps3/core/primitives/upgradeable/AccessControlledUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1345,
        "sourceUnit": 46943,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1035,
              "name": "AccessControlledUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46942,
              "src": "519:27:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1038,
        "nodeType": "ImportDirective",
        "src": "626:63:3",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ICampaign.sol",
        "file": "contracts/interfaces/ICampaign.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1345,
        "sourceUnit": 1391,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1037,
              "name": "ICampaign",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1390,
              "src": "635:9:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1344,
        "nodeType": "ContractDefinition",
        "src": "995:6470:3",
        "nodes": [
          {
            "id": 1048,
            "nodeType": "UsingForDirective",
            "src": "1090:25:3",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1046,
              "name": "Clones",
              "nameLocations": ["1096:6:3"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39506,
              "src": "1096:6:3"
            },
            "typeName": {
              "id": 1047,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1107:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1051,
            "nodeType": "UsingForDirective",
            "src": "1120:32:3",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1049,
              "name": "ERC165Checker",
              "nameLocations": ["1126:13:3"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41514,
              "src": "1126:13:3"
            },
            "typeName": {
              "id": 1050,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1144:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1055,
            "nodeType": "UsingForDirective",
            "src": "1157:49:3",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1052,
              "name": "EnumerableSet",
              "nameLocations": ["1163:13:3"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45654,
              "src": "1163:13:3"
            },
            "typeName": {
              "id": 1054,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1053,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": ["1181:13:3", "1195:10:3"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45367,
                "src": "1181:24:3"
              },
              "referencedDeclaration": 45367,
              "src": "1181:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$45367_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 1058,
            "nodeType": "VariableDeclaration",
            "src": "1212:48:3",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MIN_EXPIRE_AT",
            "nameLocation": "1237:13:3",
            "scope": 1344,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1056,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1212:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1057,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1253:7:3",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3600_by_1",
                "typeString": "int_const 3600"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 1065,
            "nodeType": "VariableDeclaration",
            "src": "1385:72:3",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 1059,
              "nodeType": "StructuredDocumentation",
              "src": "1266:114:3",
              "text": "@dev The interface ID for ICampaign, used to verify that a campaign contract implements the correct interface."
            },
            "mutability": "constant",
            "name": "INTERFACE_CAMPAIGN",
            "nameLocation": "1409:18:3",
            "scope": 1344,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1060,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1385:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 1062,
                    "name": "ICampaign",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1390,
                    "src": "1435:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_ICampaign_$1390_$",
                      "typeString": "type(contract ICampaign)"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_contract$_ICampaign_$1390_$",
                      "typeString": "type(contract ICampaign)"
                    }
                  ],
                  "id": 1061,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1430:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 1063,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1430:15:3",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_contract$_ICampaign_$1390",
                  "typeString": "type(contract ICampaign)"
                }
              },
              "id": 1064,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberLocation": "1446:11:3",
              "memberName": "interfaceId",
              "nodeType": "MemberAccess",
              "src": "1430:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "id": 1070,
            "nodeType": "VariableDeclaration",
            "src": "1578:43:3",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1066,
              "nodeType": "StructuredDocumentation",
              "src": "1463:110:3",
              "text": "@dev Maps a campaign reference to its associated scope, which defines the entity the campaign operates on."
            },
            "mutability": "mutable",
            "name": "_scopes",
            "nameLocation": "1614:7:3",
            "scope": 1344,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 1069,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1067,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1586:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1578:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1068,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1597:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 1085,
            "nodeType": "EventDefinition",
            "src": "1693:207:3",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 1071,
              "nodeType": "StructuredDocumentation",
              "src": "1628:60:3",
              "text": "@notice Event emitted when a new campaign is registered."
            },
            "eventSelector": "dcfe08ac848974049eab4f0b767f687fb801bf4225c8c656ce89a688a13cb31e",
            "name": "CampaignRegistered",
            "nameLocation": "1699:18:3",
            "parameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1073,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1743:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "1727:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1075,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "1774:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "1758:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1758:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1077,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "expireAt",
                  "nameLocation": "1806:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "1790:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1079,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "campaign",
                  "nameLocation": "1832:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "1824:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1081,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scopeId",
                  "nameLocation": "1858:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "1850:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1083,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1882:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "1875:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1875:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:182:3"
            }
          },
          {
            "id": 1090,
            "nodeType": "ErrorDefinition",
            "src": "1967:48:3",
            "nodes": [],
            "documentation": {
              "id": 1086,
              "nodeType": "StructuredDocumentation",
              "src": "1906:56:3",
              "text": "@notice Custom error for invalid campaign contracts."
            },
            "errorSelector": "31cfaed1",
            "name": "InvalidCampaignContract",
            "nameLocation": "1973:23:3",
            "parameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1088,
                  "mutability": "mutable",
                  "name": "campaign",
                  "nameLocation": "2005:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "1997:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1996:18:3"
            }
          },
          {
            "id": 1095,
            "nodeType": "ErrorDefinition",
            "src": "2078:49:3",
            "nodes": [],
            "documentation": {
              "id": 1091,
              "nodeType": "StructuredDocumentation",
              "src": "2020:53:3",
              "text": "@notice Custom error when a campaign setup fails."
            },
            "errorSelector": "778fa859",
            "name": "ErrorDuringCampaignSetup",
            "nameLocation": "2084:24:3",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "mutability": "mutable",
                  "name": "campaign",
                  "nameLocation": "2117:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "2109:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:18:3"
            }
          },
          {
            "id": 1098,
            "nodeType": "ErrorDefinition",
            "src": "2203:21:3",
            "nodes": [],
            "documentation": {
              "id": 1096,
              "nodeType": "StructuredDocumentation",
              "src": "2132:66:3",
              "text": "@notice Custom error when an unauthorized action is attempted."
            },
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "2209:12:3",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2221:2:3"
            }
          },
          {
            "id": 1101,
            "nodeType": "ErrorDefinition",
            "src": "2290:21:3",
            "nodes": [],
            "documentation": {
              "id": 1099,
              "nodeType": "StructuredDocumentation",
              "src": "2229:56:3",
              "text": "@notice Custom error when invalid input is provided."
            },
            "errorSelector": "b4fa3fb3",
            "name": "InvalidInput",
            "nameLocation": "2296:12:3",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2308:2:3"
            }
          },
          {
            "id": 1119,
            "nodeType": "ModifierDefinition",
            "src": "2398:191:3",
            "nodes": [],
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "2444:145:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2458:47:3",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1108,
                          "name": "INTERFACE_CAMPAIGN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "2486:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1106,
                          "name": "campaign",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "2459:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2468:17:3",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41370,
                        "src": "2459:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2459:46:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1116,
                  "nodeType": "IfStatement",
                  "src": "2454:118:3",
                  "trueBody": {
                    "id": 1115,
                    "nodeType": "Block",
                    "src": "2507:65:3",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 1112,
                              "name": "campaign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1104,
                              "src": "2552:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1111,
                            "name": "InvalidCampaignContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "2528:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                              "typeString": "function (address) pure returns (error)"
                            }
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2528:33:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_error",
                            "typeString": "error"
                          }
                        },
                        "id": 1114,
                        "nodeType": "RevertStatement",
                        "src": "2521:40:3"
                      }
                    ]
                  }
                },
                {
                  "id": 1117,
                  "nodeType": "PlaceholderStatement",
                  "src": "2581:1:3"
                }
              ]
            },
            "documentation": {
              "id": 1102,
              "nodeType": "StructuredDocumentation",
              "src": "2317:76:3",
              "text": "@dev Modifier to ensure only valid campaign contracts can be registered."
            },
            "name": "onlyValidCampaigns",
            "nameLocation": "2407:18:3",
            "parameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "campaign",
                  "nameLocation": "2434:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "2426:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2426:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2425:18:3"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1135,
            "nodeType": "FunctionDefinition",
            "src": "2832:151:3",
            "nodes": [],
            "body": {
              "id": 1134,
              "nodeType": "Block",
              "src": "2894:89:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1127,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38302,
                      "src": "2904:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2904:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "2904:24:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1131,
                        "name": "accessManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "2962:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1130,
                      "name": "__AccessControlled_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46858,
                      "src": "2938:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:38:3"
                }
              ]
            },
            "documentation": {
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "2595:232:3",
              "text": "@notice Initializes the contract with access control.\n @dev Sets up initial roles and dependencies for upgradeability and access management.\n @param accessManager The address of the access control manager contract."
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1124,
                  "name": "initializer",
                  "nameLocations": ["2882:11:3"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38102,
                  "src": "2882:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2882:11:3"
              }
            ],
            "name": "initialize",
            "nameLocation": "2841:10:3",
            "parameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "accessManager",
                  "nameLocation": "2860:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "2852:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2851:23:3"
            },
            "returnParameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2894:0:3"
            },
            "scope": 1344,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1153,
            "nodeType": "FunctionDefinition",
            "src": "3566:225:3",
            "nodes": [],
            "body": {
              "id": 1152,
              "nodeType": "Block",
              "src": "3652:139:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1145,
                      "name": "_scopes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1070,
                      "src": "3739:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 1150,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1147,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "3767:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1148,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1140,
                          "src": "3776:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1146,
                        "name": "_computeComposedKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "3747:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
                          "typeString": "function (address,address) pure returns (bytes32)"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3747:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3739:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1144,
                  "id": 1151,
                  "nodeType": "Return",
                  "src": "3732:52:3"
                }
              ]
            },
            "documentation": {
              "id": 1136,
              "nodeType": "StructuredDocumentation",
              "src": "2989:572:3",
              "text": "@notice Retrieves the campaign associated with a given account and policy.\n @dev Computes a unique identifier (`scopeId`) based on the account and policy address.\n      If a campaign is registered under this identifier, it returns the campaign address;\n      otherwise, it returns `address(0)`.\n @param account The address of the account (holder) making the query.\n @param policy The address of the policy contract associated with the campaign.\n @return The address of the associated campaign if found, otherwise `address(0)`."
            },
            "functionSelector": "fd72f76d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCampaign",
            "nameLocation": "3575:11:3",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3595:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "3587:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "3612:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "3604:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3586:33:3"
            },
            "returnParameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "3643:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3643:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3642:9:3"
            },
            "scope": 1344,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1221,
            "nodeType": "FunctionDefinition",
            "src": "4279:814:3",
            "nodes": [],
            "body": {
              "id": 1220,
              "nodeType": "Block",
              "src": "4480:613:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1170,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1160,
                      "src": "4540:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1171,
                      "name": "MIN_EXPIRE_AT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1058,
                      "src": "4553:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4540:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1177,
                  "nodeType": "IfStatement",
                  "src": "4536:78:3",
                  "trueBody": {
                    "id": 1176,
                    "nodeType": "Block",
                    "src": "4568:46:3",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1173,
                            "name": "InvalidInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1101,
                            "src": "4589:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                              "typeString": "function () pure returns (error)"
                            }
                          },
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4589:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_error",
                            "typeString": "error"
                          }
                        },
                        "id": 1175,
                        "nodeType": "RevertStatement",
                        "src": "4582:21:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [1179],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "expireAt",
                      "nameLocation": "4629:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "4624:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4624:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1180,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4640:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4646:9:3",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4640:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1182,
                      "name": "expiration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1160,
                      "src": "4658:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4640:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4624:44:3"
                },
                {
                  "assignments": [1186],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "clone",
                      "nameLocation": "4686:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "4678:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4678:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1191,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1188,
                        "name": "template",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1156,
                        "src": "4701:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1189,
                        "name": "expireAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "4711:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1187,
                      "name": "_clone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "4694:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) returns (address)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4694:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4678:42:3"
                },
                {
                  "assignments": [1193],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1193,
                      "mutability": "mutable",
                      "name": "campaign",
                      "nameLocation": "4738:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "4730:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1192,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4730:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1198,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1195,
                        "name": "clone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "4756:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1196,
                        "name": "expireAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "4763:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1194,
                      "name": "_setup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1268,
                      "src": "4749:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) returns (address)"
                      }
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4749:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4730:42:3"
                },
                {
                  "assignments": [1200],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1200,
                      "mutability": "mutable",
                      "name": "scopeId",
                      "nameLocation": "4912:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "4904:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1199,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4904:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1207,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1202,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4937:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4941:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4937:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1204,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "4949:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1205,
                        "name": "campaign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "4957:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1201,
                      "name": "_addScopeAssoc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1296,
                      "src": "4922:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (address,address,address) returns (bytes32)"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4922:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4904:62:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1209,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5000:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5004:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5000:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1211,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "5012:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1212,
                        "name": "expireAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "5020:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1213,
                        "name": "campaign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "5030:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1214,
                        "name": "scopeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "5040:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1215,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "5049:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 1208,
                      "name": "CampaignRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "4981:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,address,bytes32,string memory)"
                      }
                    },
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4981:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1217,
                  "nodeType": "EmitStatement",
                  "src": "4976:85:3"
                },
                {
                  "expression": {
                    "id": 1218,
                    "name": "campaign",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
                    "src": "5078:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1219,
                  "nodeType": "Return",
                  "src": "5071:15:3"
                }
              ]
            },
            "documentation": {
              "id": 1154,
              "nodeType": "StructuredDocumentation",
              "src": "3797:477:3",
              "text": "@notice Creates and registers a new campaign by cloning a given template contract.\n @dev The provided template must be a valid campaign contract.\n @param template The address of the campaign contract to clone.\n @param policy The policy the campaign is linked to.\n @param expiration The timestamp when the campaign expires.\n @param description A brief description of the campaign.\n @return The address of the newly created campaign."
            },
            "functionSelector": "401e1738",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1165,
                    "name": "template",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1156,
                    "src": "4452:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1166,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1164,
                  "name": "onlyValidCampaigns",
                  "nameLocations": ["4433:18:3"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1119,
                  "src": "4433:18:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4433:28:3"
              }
            ],
            "name": "createCampaign",
            "nameLocation": "4288:14:3",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "template",
                  "nameLocation": "4320:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1221,
                  "src": "4312:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4312:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "4346:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1221,
                  "src": "4338:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4338:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1160,
                  "mutability": "mutable",
                  "name": "expiration",
                  "nameLocation": "4370:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1221,
                  "src": "4362:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "4406:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1221,
                  "src": "4390:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4390:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4302:121:3"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1221,
                  "src": "4471:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4471:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4470:9:3"
            },
            "scope": 1344,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1231,
            "nodeType": "FunctionDefinition",
            "src": "5214:84:3",
            "nodes": [],
            "body": {
              "id": 1230,
              "nodeType": "Block",
              "src": "5296:2:3",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [38384],
            "documentation": {
              "id": 1222,
              "nodeType": "StructuredDocumentation",
              "src": "5099:110:3",
              "text": "@notice Authorizes upgrades to the contract.\n @dev Ensures that only an admin can perform upgrades."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1227,
                  "name": "onlyAdmin",
                  "nameLocations": ["5286:9:3"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46841,
                  "src": "5286:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5286:9:3"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "5223:17:3",
            "overrides": {
              "id": 1226,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5277:8:3"
            },
            "parameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1224,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "5249:17:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1231,
                  "src": "5241:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5241:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5240:27:3"
            },
            "returnParameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5296:0:3"
            },
            "scope": 1344,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1268,
            "nodeType": "FunctionDefinition",
            "src": "5549:344:3",
            "nodes": [],
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "5627:266:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [1242],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1242,
                      "mutability": "mutable",
                      "name": "callData",
                      "nameLocation": "5650:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1267,
                      "src": "5637:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1241,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5637:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1250,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "696e697469616c697a6528616464726573732c737472696e672c75696e7432353629",
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5685:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dac9bbc4c5fc85431dcbdb2b87aaa93878befc9e57fa2f5812859823ec9c694",
                          "typeString": "literal_string \"initialize(address,string,uint256)\""
                        },
                        "value": "initialize(address,string,uint256)"
                      },
                      {
                        "expression": {
                          "id": 1246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5723:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5727:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5723:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1248,
                        "name": "expireAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "5735:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8dac9bbc4c5fc85431dcbdb2b87aaa93878befc9e57fa2f5812859823ec9c694",
                          "typeString": "literal_string \"initialize(address,string,uint256)\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1243,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5661:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5665:19:3",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "5661:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5661:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5637:107:3"
                },
                {
                  "assignments": [1252, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1252,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5760:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1267,
                      "src": "5755:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1251,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5755:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1257,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1255,
                        "name": "callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "5787:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1253,
                        "name": "campaign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "5773:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5782:4:3",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "5773:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5754:42:3"
                },
                {
                  "condition": {
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5810:8:3",
                    "subExpression": {
                      "id": 1258,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1252,
                      "src": "5811:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1264,
                  "nodeType": "IfStatement",
                  "src": "5806:55:3",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 1261,
                          "name": "campaign",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "5852:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1260,
                        "name": "ErrorDuringCampaignSetup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1095,
                        "src": "5827:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                          "typeString": "function (address) pure returns (error)"
                        }
                      },
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5827:34:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_error",
                        "typeString": "error"
                      }
                    },
                    "id": 1263,
                    "nodeType": "RevertStatement",
                    "src": "5820:41:3"
                  }
                },
                {
                  "expression": {
                    "id": 1265,
                    "name": "campaign",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1234,
                    "src": "5878:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1240,
                  "id": 1266,
                  "nodeType": "Return",
                  "src": "5871:15:3"
                }
              ]
            },
            "documentation": {
              "id": 1232,
              "nodeType": "StructuredDocumentation",
              "src": "5304:240:3",
              "text": "@dev Internal function to initialize a cloned campaign.\n @param campaign The address of the newly cloned campaign.\n @param expireAt The timestamp when the campaign expires.\n @return The initialized campaign address."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setup",
            "nameLocation": "5558:6:3",
            "parameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1234,
                  "mutability": "mutable",
                  "name": "campaign",
                  "nameLocation": "5573:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "5565:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5565:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "expireAt",
                  "nameLocation": "5591:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "5583:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5583:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5564:36:3"
            },
            "returnParameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "5618:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5618:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5617:9:3"
            },
            "scope": 1344,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1296,
            "nodeType": "FunctionDefinition",
            "src": "6399:273:3",
            "nodes": [],
            "body": {
              "id": 1295,
              "nodeType": "Block",
              "src": "6498:174:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [1281],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "scopeId",
                      "nameLocation": "6516:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1295,
                      "src": "6508:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6508:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1286,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1283,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1271,
                        "src": "6546:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1284,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "6553:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1282,
                      "name": "_computeComposedKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "6526:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (address,address) pure returns (bytes32)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6526:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6508:52:3"
                },
                {
                  "expression": {
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1287,
                        "name": "_scopes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "6570:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 1289,
                      "indexExpression": {
                        "id": 1288,
                        "name": "scopeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "6578:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6570:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1290,
                      "name": "campaign",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "6589:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6570:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "6570:27:3"
                },
                {
                  "expression": {
                    "id": 1293,
                    "name": "scopeId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1281,
                    "src": "6658:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1279,
                  "id": 1294,
                  "nodeType": "Return",
                  "src": "6651:14:3"
                }
              ]
            },
            "documentation": {
              "id": 1269,
              "nodeType": "StructuredDocumentation",
              "src": "5899:495:3",
              "text": "@dev Creates a unique identifier for the scope based on the owner's address\n      and the scope address. The generated scope ID is mapped to the campaign\n      in the `_scopes` mapping, allowing efficient retrieval.\n @param owner The address of the owner managing the scope.\n @param policy The address representing the policy.\n @param campaign The address of the associated campaign.\n @return scopeId The unique identifier for the scope association."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addScopeAssoc",
            "nameLocation": "6408:14:3",
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6431:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "6423:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6423:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "6446:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "6438:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6438:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "campaign",
                  "nameLocation": "6462:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "6454:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6454:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6422:49:3"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1296,
                  "src": "6489:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6489:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6488:9:3"
            },
            "scope": 1344,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1324,
            "nodeType": "FunctionDefinition",
            "src": "6771:219:3",
            "nodes": [],
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "6849:141:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [1307],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1307,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "6867:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1323,
                      "src": "6859:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1306,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6859:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1317,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6901:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6905:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6901:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1313,
                            "name": "template",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1299,
                            "src": "6913:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1314,
                            "name": "expireAt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "6923:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1309,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6884:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6888:12:3",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6884:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6884:48:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1308,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6874:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6874:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6859:74:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1320,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1307,
                        "src": "6978:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1318,
                        "name": "template",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1299,
                        "src": "6950:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6959:18:3",
                      "memberName": "cloneDeterministic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39424,
                      "src": "6950:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes32) returns (address)"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6950:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1305,
                  "id": 1322,
                  "nodeType": "Return",
                  "src": "6943:40:3"
                }
              ]
            },
            "documentation": {
              "id": 1297,
              "nodeType": "StructuredDocumentation",
              "src": "6678:88:3",
              "text": "@dev Deploy a new minimal-proxy (EIP-1167) based on the specified campaign template."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_clone",
            "nameLocation": "6780:6:3",
            "parameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "template",
                  "nameLocation": "6795:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "6787:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6787:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "expireAt",
                  "nameLocation": "6813:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "6805:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6805:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6786:36:3"
            },
            "returnParameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "6840:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6840:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6839:9:3"
            },
            "scope": 1344,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1343,
            "nodeType": "FunctionDefinition",
            "src": "7304:159:3",
            "nodes": [],
            "body": {
              "id": 1342,
              "nodeType": "Block",
              "src": "7396:67:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1337,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1327,
                            "src": "7440:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1338,
                            "name": "scope",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1329,
                            "src": "7449:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1335,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7423:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7427:12:3",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7423:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7423:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1334,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7413:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7413:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1333,
                  "id": 1341,
                  "nodeType": "Return",
                  "src": "7406:50:3"
                }
              ]
            },
            "documentation": {
              "id": 1325,
              "nodeType": "StructuredDocumentation",
              "src": "6996:303:3",
              "text": "@notice Computes a unique key by combining a scope and an account address.\n @param account The address of the user for whom the key is being generated.\n @param scope The address representing the scope.\n @return A `bytes32` hash that uniquely identifies the context-account pair."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeComposedKey",
            "nameLocation": "7313:19:3",
            "parameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1327,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7341:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "7333:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7333:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "scope",
                  "nameLocation": "7358:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "7350:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7350:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7332:32:3"
            },
            "returnParameters": {
              "id": 1333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "7387:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7387:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7386:9:3"
            },
            "scope": 1344,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1040,
              "name": "Initializable",
              "nameLocations": ["1024:13:3"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38248,
              "src": "1024:13:3"
            },
            "id": 1041,
            "nodeType": "InheritanceSpecifier",
            "src": "1024:13:3"
          },
          {
            "baseName": {
              "id": 1042,
              "name": "UUPSUpgradeable",
              "nameLocations": ["1039:15:3"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38430,
              "src": "1039:15:3"
            },
            "id": 1043,
            "nodeType": "InheritanceSpecifier",
            "src": "1039:15:3"
          },
          {
            "baseName": {
              "id": 1044,
              "name": "AccessControlledUpgradeable",
              "nameLocations": ["1056:27:3"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46942,
              "src": "1056:27:3"
            },
            "id": 1045,
            "nodeType": "InheritanceSpecifier",
            "src": "1056:27:3"
          }
        ],
        "canonicalName": "CampaignRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1039,
          "nodeType": "StructuredDocumentation",
          "src": "691:304:3",
          "text": "@title CampaignRegistry\n @notice Manages campaign contract registrations, allowing users to deploy and track campaigns.\n @dev Supports upgradeability via UUPS and integrates with an access control system.\n      Uses ERC165 to verify that contracts implement the required campaign interface."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1344, 46942, 37994, 38774, 38476, 38430, 39343, 38248
        ],
        "name": "CampaignRegistry",
        "nameLocation": "1004:16:3",
        "scope": 1345,
        "usedErrors": [
          1090, 1095, 1098, 1101, 38011, 38014, 38275, 38280, 38745, 38751,
          38755, 39564, 39577, 40528, 40787, 40790, 40793, 46823
        ],
        "usedEvents": [1085, 38019, 38741, 39316]
      }
    ],
    "license": "MIT"
  },
  "id": 3
}
