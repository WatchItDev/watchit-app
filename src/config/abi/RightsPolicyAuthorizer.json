{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "policyAudit", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "POLICY_AUDIT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPolicyAuditorVerifiable"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "authority",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "authorizePolicy",
      "inputs": [
        { "name": "policy", "type": "address", "internalType": "address" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAuthorizedPolicies",
      "inputs": [
        { "name": "holder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "", "type": "address[]", "internalType": "address[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "accessManager",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isConsumingScheduledOp",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPolicyAuthorized",
      "inputs": [
        { "name": "policy", "type": "address", "internalType": "address" },
        { "name": "holder", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "revokePolicy",
      "inputs": [
        { "name": "policy", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAuthority",
      "inputs": [
        { "name": "newAuthority", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "AuthorityUpdated",
      "inputs": [
        {
          "name": "authority",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RightsGranted",
      "inputs": [
        {
          "name": "policy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "holder",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "timestamp",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RightsRevoked",
      "inputs": [
        {
          "name": "policy",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "holder",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "timestamp",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessManagedInvalidAuthority",
      "inputs": [
        { "name": "authority", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AccessManagedRequiredDelay",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "delay", "type": "uint32", "internalType": "uint32" }
      ]
    },
    {
      "type": "error",
      "name": "AccessManagedUnauthorized",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidNotAuditedPolicy",
      "inputs": [
        { "name": "policy", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidPolicyInitialization",
      "inputs": [
        { "name": "reason", "type": "string", "internalType": "string" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidUnauthorizedOperation",
      "inputs": [{ "name": "", "type": "string", "internalType": "string" }]
    },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60c03461014657601f61179e38819003918201601f19168301916001600160401b0383118484101761014a5780849260209460405283398101031261014657516001600160a01b0381169081900361014657306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16610137576002600160401b03196001600160401b038216016100ce575b5060a05260405161163f908161015f82396080518181816108b201526109b3015260a0518181816105e801526111dc0152f35b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f61009b565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80632f6cc10214610da05780634f1ef2861461092a57806352d1902d1461088b578063591b43c5146106e35780637a9e5e4b1461060c57806382e2b7c8146105bc5780638fb36037146105295780639fda230a146104b4578063ad3cb1cc14610420578063bf7e214f146103ce578063c4d66de8146101305763ca89d8b21461009d575f80fd5b3461012c57604060031936011261012c576100b6610fd0565b6024359073ffffffffffffffffffffffffffffffffffffffff821680920361012c575f9182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff841685526001018252909220541515908161011c575b506040519015158152f35b610126915061116e565b5f610111565b5f80fd5b3461012c57602060031936011261012c57610149610fd0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16159167ffffffffffffffff8216801590816103c6575b60011490816103bc575b1590816103b3575b5061038b57818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055610336575b5061020c611519565b610214611519565b61021c611519565b610224611519565b61022d81611246565b610235611519565b167fffffffffffffffffffffffff00000000000000000000000000000000000000007fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005416177fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa00556102a357005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005583610203565b7ff92ee8a9000000000000000000000000000000000000000000000000000000005f5260045ffd5b9050158461019a565b303b159150610192565b849150610188565b3461012c575f60031936011261012c57602073ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416604051908152f35b3461012c575f60031936011261012c57604080519061043f8183610ff3565b6005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b3461012c57602060031936011261012c576104cd610fd0565b335f525f6020526104f973ffffffffffffffffffffffffffffffffffffffff60405f2092168092611393565b50604051904282527f18147b94ec466a20610ebd8716adbb2e35876dbfc0f54295dd2fe1d750d7eff060203393a3005b3461012c575f60031936011261012c577ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005460a01c60ff16156105b45760207f8fb36037000000000000000000000000000000000000000000000000000000005b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b60205f61058a565b3461012c575f60031936011261012c57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461012c57602060031936011261012c57610625610fd0565b73ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00541633036106b757803b156106755761067390611246565b005b73ffffffffffffffffffffffffffffffffffffffff907fc2f31e5e000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b7f068ca9d8000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b3461012c57602060031936011261012c5773ffffffffffffffffffffffffffffffffffffffff610711610fd0565b165f525f60205260405f20604051808260208294549384815201905f5260205f20925f5b81811061087257505061074a92500382610ff3565b80519061076f61075983611108565b926107676040519485610ff3565b808452611108565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06020840192013683378051905f805b838210610801578486604051918291602083019060208452518091526040830191905f5b8181106107d2575050500390f35b825173ffffffffffffffffffffffffffffffffffffffff168452859450602093840193909201916001016107c4565b61082a73ffffffffffffffffffffffffffffffffffffffff6108238486611120565b511661116e565b15610869576001809173ffffffffffffffffffffffffffffffffffffffff6108528587611120565b511661085e828a611120565b5201915b01906107a0565b90600190610862565b8454835260019485019486945060209093019201610735565b3461012c575f60031936011261012c5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036109025760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b7fe07c8dba000000000000000000000000000000000000000000000000000000005f5260045ffd5b604060031936011261012c5761093e610fd0565b6024359067ffffffffffffffff821161012c573660238301121561012c5781600401359061096b82611061565b916109796040519384610ff3565b8083526020830193366024838301011161012c57815f9260246020930187378401015273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803014908115610d5e575b50610902576044604073ffffffffffffffffffffffffffffffffffffffff7fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa0054168151928380927fd1f856ee0000000000000000000000000000000000000000000000000000000082525f60048301523360248301525afa908115610d53575f91610d08575b5015610c845773ffffffffffffffffffffffffffffffffffffffff8116926040517f52d1902d000000000000000000000000000000000000000000000000000000008152602081600481885afa5f9181610c50575b50610aea57847f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc869203610c255750823b15610bfa57807fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610bc8575f8091610673945190845af4610bc26110d9565b91611570565b50505034610bd257005b7fb398979f000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faa1d49a4000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091506020813d602011610c7c575b81610c6c60209383610ff3565b8101031261012c57519086610ab9565b3d9150610c5f565b60846040517f6317e35f00000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201527f6f6e2e00000000000000000000000000000000000000000000000000000000006064820152fd5b90506040813d604011610d4b575b81610d2360409383610ff3565b8101031261012c576020610d3682611161565b91015163ffffffff81160361012c5784610a64565b3d9150610d16565b6040513d5f823e3d90fd5b905073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415846109de565b3461012c57604060031936011261012c57610db9610fd0565b6024359067ffffffffffffffff821161012c573660238301121561012c5781600401359167ffffffffffffffff831161012c576024810190602484369201011161012c57610e068261116e565b15610f8e575f8060405160208101907fd1f5789400000000000000000000000000000000000000000000000000000000825233602482015260406044820152610e8381610e57606482018a8961109b565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610ff3565b519082865af1610e916110d9565b5015610f0a57610f057f6ba225fe6c79a8c5ddd429f9aa7654c4dbebe2cc98a02209616ac200ceba5c5691335f525f602052610ee873ffffffffffffffffffffffffffffffffffffffff60405f2095168095611306565b50604051918291428352604060208401523396604084019161109b565b0390a3005b60846040517f47fc3bab00000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4572726f7220647572696e6720706f6c69637920696e697469616c697a61746960448201527f6f6e2063616c6c000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff827fe63549fa000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012c57565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761103457604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161103457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b3d15611103573d906110ea82611061565b916110f86040519384610ff3565b82523d5f602084013e565b606090565b67ffffffffffffffff81116110345760051b60200190565b80518210156111345760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5190811515820361012c57565b73ffffffffffffffffffffffffffffffffffffffff168015159081611191575090565b9050604051907f9d260809000000000000000000000000000000000000000000000000000000008252600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa908115610d53575f9161120f575090565b90506020813d60201161123e575b8161122a60209383610ff3565b8101031261012c5761123b90611161565b90565b3d915061121d565b602073ffffffffffffffffffffffffffffffffffffffff7f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9216807fffffffffffffffffffffffff00000000000000000000000000000000000000007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416177ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a0055604051908152a1565b8054821015611134575f5260205f2001905f90565b5f82815260018201602052604090205461138d578054906801000000000000000082101561103457826113786113438460018096018555846112f1565b81939154907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060031b92831b921b19161790565b90558054925f520160205260405f2055600190565b50505f90565b906001820191815f528260205260405f20548015155f14611511577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018181116114e4578254907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019182116114e4578181036114af575b50505080548015611482577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019061144582826112f1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82549160031b1b19169055555f526020525f6040812055600190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b6114cf6114bf61134393866112f1565b90549060031b1c928392866112f1565b90555f528360205260405f20555f808061140d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b505050505f90565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561154857565b7fd7e6bcf8000000000000000000000000000000000000000000000000000000005f5260045ffd5b906115ad575080511561158557805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f5260045ffd5b81511580611600575b6115be575090565b73ffffffffffffffffffffffffffffffffffffffff907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b156115b656fea2646970667358221220f04516abb02e23da87e22651b1c0d81363e6708d1c9f66231c67f146ce80129964736f6c634300081a0033",
    "sourceMap": "904:6770:38:-:0;;;;;;;;;;;;;-1:-1:-1;;904:6770:38;;;;-1:-1:-1;;;;;904:6770:38;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;904:6770:38;;;;;;;;1171:4:62;1163:13;;8837:64:61;904:6770:38;;;;;;7896:76:61;;-1:-1:-1;;;;;;;;;;;904:6770:38;;7985:34:61;7981:146;;-1:-1:-1;3371:52:38;;;904:6770;;;;;;;;1163:13:62;904:6770:38;;;;;;;;;;3371:52;904:6770;;;;;;;;;;;7981:146:61;-1:-1:-1;;;;;;904:6770:38;-1:-1:-1;;;;;904:6770:38;;;8837:64:61;904:6770:38;;;;;;8087:29:61;;904:6770:38;;8087:29:61;7981:146;;;7896:76;7938:23;;;-1:-1:-1;7938:23:61;;-1:-1:-1;7938:23:61;904:6770:38;-1:-1:-1;904:6770:38;;;;;;-1:-1:-1;904:6770:38;;;;;-1:-1:-1;904:6770:38",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "904:6770:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;904:6770:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:14:106;;904:6770:38;;;;;;4360:26:106;;5313:70:38;;;;904:6770;;;;;;;;;;5313:70;5361:22;;;;:::i;:::-;5313:70;;;904:6770;;;;;;;;;-1:-1:-1;;904:6770:38;;;;;;;:::i;:::-;8837:64:61;904:6770:38;;;;;;4301:16:61;904:6770:38;;;;4726:16:61;;:34;;;;904:6770:38;4805:1:61;4790:16;:50;;;;904:6770:38;4855:13:61;:30;;;;904:6770:38;4851:91:61;;;904:6770:38;;4805:1:61;904:6770:38;;;;;8837:64:61;904:6770:38;4979:67:61;;904:6770:38;6893:76:61;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;2222:16:60;;;:::i;:::-;6893:76:61;;:::i;:::-;904:6770:38;;3298:62:32;904:6770:38;;;3298:62:32;904:6770:38;5066:101:61;;904:6770:38;5066:101:61;904:6770:38;8837:64:61;904:6770:38;;8837:64:61;904:6770:38;5142:14:61;904:6770:38;;;4805:1:61;904:6770:38;;5142:14:61;904:6770:38;4979:67:61;904:6770:38;;;;8837:64:61;904:6770:38;4979:67:61;;;4851:91;4908:23;904:6770:38;4908:23:61;904:6770:38;;4908:23:61;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:61;;4726:34;;;-1:-1:-1;4726:34:61;;904:6770:38;;;;;-1:-1:-1;;904:6770:38;;;;;;;1782:71:60;904:6770:38;;;;;;;;;;;;;-1:-1:-1;;904:6770:38;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;904:6770:38;;;;;;;:::i;:::-;4846:10;904:6770;;;;;8703:53:106;904:6770:38;;;;;;8703:53:106;;;:::i;:::-;;904:6770:38;;4921:15;;904:6770;;4887:50;904:6770;4846:10;4887:50;;904:6770;;;;;;-1:-1:-1;;904:6770:38;;;;;1782:71:60;904:6770:38;;;;;4698:71:60;;;904:6770:38;;4698:71:60;904:6770:38;;;;;;;;4698:71:60;904:6770:38;;4698:71:60;;904:6770:38;;;;;-1:-1:-1;;904:6770:38;;;;;;;;;1521:54;904:6770;;;;;;;;;-1:-1:-1;;904:6770:38;;;;;;;:::i;:::-;;1782:71:60;904:6770:38;;966:10:65;4258:21:60;4254:92;;4359:24;;:29;4355:110;;4488:12;;;:::i;:::-;904:6770:38;4355:110:60;904:6770:38;4411:43:60;;904:6770:38;4411:43:60;904:6770:38;;;;;4411:43:60;4254:92;4302:33;904:6770:38;4302:33:60;966:10:65;904:6770:38;;;;4302:33:60;904:6770:38;;;;;-1:-1:-1;;904:6770:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;6589:13;904:6770;;6652:15;;;;;;904:6770;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;904:6770:38;;;;;;;;;;;;;6669:20;6710:27;904:6770;6725:11;;;;:::i;:::-;904:6770;;6710:27;:::i;:::-;6709:28;6705:42;;904:6770;6775:11;;904:6770;6775:11;;;;:::i;:::-;904:6770;;6761:25;;;;:::i;:::-;904:6770;;6669:20;6637:13;904:6770;6637:13;;;6705:42;6739:8;904:6770;6739:8;;;904:6770;;;;;;;;;;;;-1:-1:-1;904:6770:38;;;;;;;;;;;;;-1:-1:-1;;904:6770:38;;;;;;5115:6:62;904:6770:38;5106:4:62;5098:23;5094:145;;904:6770:38;;;811:66:80;904:6770:38;;;5094:145:62;5199:29;904:6770:38;5199:29:62;904:6770:38;;5199:29:62;904:6770:38;;-1:-1:-1;;904:6770:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4692:6:62;904:6770:38;4683:4:62;;4675:23;:120;;;;;904:6770:38;4658:251:62;;;3061:30:32;904:6770:38;;3298:62:32;904:6770:38;;;;3061:30:32;;;;904:6770:38;3061:30:32;;904:6770:38;;3061:30:32;;904:6770:38;1896:10:32;904:6770:38;;;;3061:30:32;;;;;;;904:6770:38;3061:30:32;;;904:6770:38;1872:35:32;;1868:140;;904:6770:38;;;;;;;6156:52:62;;904:6770:38;6156:52:62;904:6770:38;6156:52:62;;;;904:6770:38;;6156:52:62;;;904:6770:38;-1:-1:-1;6152:437:62;;6518:60;;904:6770:38;6518:60:62;904:6770:38;;;;6518:60:62;6152:437;6250:40;811:66:80;6250:40:62;;;6246:120;;1748:29:80;;;:34;1744:119;;904:6770:38;;811:66:80;904:6770:38;;;811:66:80;904:6770:38;2407:36:80;904:6770:38;2407:36:80;;904:6770:38;;2458:15:80;:11;;904:6770:38;4049:25:92;;4091:55;4049:25;;;;;;;;:::i;:::-;4091:55;;:::i;2454:148:80:-;6163:9;;;;6159:70;;904:6770:38;6159:70:80;6199:19;904:6770:38;6199:19:80;904:6770:38;;6199:19:80;1744:119;1805:47;904:6770:38;1805:47:80;904:6770:38;;;;1805:47:80;6246:120:62;6317:34;904:6770:38;6317:34:62;904:6770:38;;;;6317:34:62;6156:52;;;;904:6770:38;6156:52:62;;904:6770:38;6156:52:62;;;;;;904:6770:38;6156:52:62;;;:::i;:::-;;;904:6770:38;;;;;6156:52:62;;;;;;;-1:-1:-1;6156:52:62;;1868:140:32;1930:67;904:6770:38;;1930:67:32;;;904:6770:38;;1930:67:32;;520:1:30;904:6770:38;;520:1:30;;904:6770:38;520:1:30;3061:30:32;904:6770:38;;520:1:30;;;;;;1930:67:32;3061:30;;;904:6770:38;3061:30:32;;904:6770:38;3061:30:32;;;;;;904:6770:38;3061:30:32;;;:::i;:::-;;;904:6770:38;;;;;;;;:::i;:::-;;;;;;;;;;3061:30:32;;;;;;-1:-1:-1;3061:30:32;;;904:6770:38;;;;;;;;;4675:120:62;904:6770:38;;;811:66:80;904:6770:38;;4753:42:62;;4675:120;;;904:6770:38;;;;;-1:-1:-1;;904:6770:38;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4046:22;;;:::i;:::-;4045:23;4041:67;;904:6770;;;;;4254:54;;;;;;4290:10;904:6770;4254:54;;904:6770;;;;;;4254:54;904:6770;;;;;;;;:::i;:::-;4254:54;;;;;;;;:::i;:::-;4242:67;;;;;;;;:::i;:::-;;4323:8;4319:91;;904:6770;4530:56;4290:10;;904:6770;;;;;8382:50:106;904:6770:38;;;;;;8382:50:106;;;:::i;:::-;;904:6770:38;;4564:15;;;;904:6770;;;;;;;4290:10;904:6770;;;;;;:::i;:::-;4530:56;;;904:6770;4319:91;4340:70;904:6770;;4340:70;;;904:6770;;4340:70;;904:6770;;;;;;;;;;;;;;;;4340:70;4041:67;904:6770;4077:31;;904:6770;4077:31;904:6770;;;;;4077:31;904:6770;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;904:6770:38;;;;;-1:-1:-1;904:6770:38;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;904:6770:38;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;904:6770:38;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;7524:148::-;904:6770;;7610:20;;;:54;;;;7602:63;7524:148;:::o;7610:54::-;904:6770;;;;7634:30;904:6770;7634:30;;;;;904:6770;;7634:12;:30;:12;904:6770;7634:12;904:6770;7634:30;;;;;;;7628:1;7634:30;;;7610:54;7524:148;:::o;7634:30::-;;;904:6770;7634:30;;904:6770;7634:30;;;;;;904:6770;7634:30;;;:::i;:::-;;;904:6770;;;;;;;:::i;:::-;7524:148;:::o;7634:30::-;;;-1:-1:-1;7634:30:38;;4964:220:60;904:6770:38;;5147:30:60;4964:220;904:6770:38;;;1782:71:60;904:6770:38;;;1782:71:60;904:6770:38;;;;;;5147:30:60;4964:220::o;904:6770:38:-;;;;;;;;-1:-1:-1;904:6770:38;;-1:-1:-1;904:6770:38;;;-1:-1:-1;904:6770:38;:::o;2241:406:106:-;-1:-1:-1;904:6770:38;;;4360:14:106;;;904:6770:38;;;;;;2325:21:106;;904:6770:38;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:14:106;904:6770:38;;;;;;;2576:11:106;:::o;2320:321::-;2618:12;;904:6770:38;2618:12:106;:::o;2815:1368::-;;3010:14;;;904:6770:38;;;;;;;;;;;3046:13:106;;;3042:1135;3046:13;;;904:6770:38;;;;;;;;;;;;;;;;;;;3521:23:106;;;3517:378;;3042:1135;904:6770:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3010:14:106;4112:11;:::o;904:6770:38:-;;;;;;;;;;3517:378:106;904:6770:38;3584:22:106;3705:23;3584:22;;;:::i;:::-;904:6770:38;;;;;;3705:23:106;;;;;:::i;904:6770:38:-;;;;;;;;;;;;3517:378:106;;;;;904:6770:38;;;;;;;;;;3042:1135:106;4154:12;;;;904:6770:38;4154:12:106;:::o;7084:141:61:-;904:6770:38;8837:64:61;904:6770:38;;;;7150:18:61;7146:73;;7084:141::o;7146:73::-;7191:17;-1:-1:-1;7191:17:61;;-1:-1:-1;7191:17:61;4421:582:92;;4593:8;;-1:-1:-1;904:6770:38;;5674:21:92;:17;;5799:158;;;;;;5670:354;5994:19;5694:1;5994:19;;5694:1;5994:19;4589:408;904:6770:38;;4841:22:92;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;904:6770:38;4917:24:92;;4862:1;4917:24;904:6770:38;4917:24:92;904:6770:38;;4862:1:92;4917:24;4841:49;4867:18;;;:23;4841:49;",
    "linkReferences": {},
    "immutableReferences": {
      "3622": [
        { "start": 1512, "length": 32 },
        { "start": 4572, "length": 32 }
      ],
      "40807": [
        { "start": 2226, "length": 32 },
        { "start": 2483, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "POLICY_AUDIT()": "82e2b7c8",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "authority()": "bf7e214f",
    "authorizePolicy(address,bytes)": "2f6cc102",
    "getAuthorizedPolicies(address)": "591b43c5",
    "initialize(address)": "c4d66de8",
    "isConsumingScheduledOp()": "8fb36037",
    "isPolicyAuthorized(address,address)": "ca89d8b2",
    "proxiableUUID()": "52d1902d",
    "revokePolicy(address)": "9fda230a",
    "setAuthority(address)": "7a9e5e4b",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policyAudit\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"}],\"name\":\"InvalidNotAuditedPolicy\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidPolicyInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"InvalidUnauthorizedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"RightsGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RightsRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"POLICY_AUDIT\",\"outputs\":[{\"internalType\":\"contract IPolicyAuditorVerifiable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"authorizePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getAuthorizedPolicies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accessManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"isPolicyAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"}],\"name\":\"revokePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidNotAuditedPolicy(address)\":[{\"details\":\"Error thrown when a policy has not been audited or approved for operation.\",\"params\":{\"policy\":\"The address of the unaudited policy.\"}}],\"InvalidPolicyInitialization(string)\":[{\"details\":\"Error thrown when there is an issue with the policy setup.\",\"params\":{\"reason\":\"A string explaining the reason for the invalid policy setup.\"}}],\"InvalidUnauthorizedOperation(string)\":[{\"details\":\"Error thrown when an unauthorized operation is attempted.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RightsGranted(address,address,uint256,bytes)\":{\"params\":{\"data\":\"The data used to initialize the policy.\",\"holder\":\"The address of the asset rights holder.\",\"policy\":\"The policy contract address granted rights.\",\"timestamp\":\"The timestamp indicating when the rights were granted.\"}},\"RightsRevoked(address,address,uint256)\":{\"params\":{\"holder\":\"The address of the asset rights holder.\",\"policy\":\"The policy contract address whose rights are being revoked.\",\"timestamp\":\"The timestamp indicating when the rights were revoked.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"authority()\":{\"details\":\"Returns the current authority.\"},\"authorizePolicy(address,bytes)\":{\"params\":{\"data\":\"The data to initialize policy.\",\"policy\":\"The address of the policy contract to be initialized and authorized.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getAuthorizedPolicies(address)\":{\"details\":\"This function returns an array of policy addresses that have been granted rights by the holder.\",\"params\":{\"holder\":\"The address of the asset rights holder whose authorized policies are being queried.\"}},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"isPolicyAuthorized(address,address)\":{\"details\":\"Verify if the specified policy contract has been delegated the rights by the asset holder.\",\"params\":{\"holder\":\"the asset rights holder to check for delegation.\",\"policy\":\"The address of the policy contract to check for delegation.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"revokePolicy(address)\":{\"params\":{\"policy\":\"The address of the policy contract whose rights delegation is being revoked.\"}},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"POLICY_AUDIT\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"_authorizedPolicies\":{\"details\":\"Mapping to store the delegated rights for each policy contract (address)\"}},\"version\":1},\"userdoc\":{\"events\":{\"RightsGranted(address,address,uint256,bytes)\":{\"notice\":\"Emitted when rights are granted to a policy for content.\"},\"RightsRevoked(address,address,uint256)\":{\"notice\":\"Emitted when rights are revoked from a policy for content.\"}},\"kind\":\"user\",\"methods\":{\"authorizePolicy(address,bytes)\":{\"notice\":\"Initializes and authorizes a policy contract for content held by the holder.\"},\"getAuthorizedPolicies(address)\":{\"notice\":\"Retrieves all policies authorized by a specific content holder.\"},\"initialize(address)\":{\"notice\":\"Initializes the proxy state.\"},\"revokePolicy(address)\":{\"notice\":\"Revokes the delegation of rights to a policy contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rights/RightsPolicyAuthorizer.sol\":\"RightsPolicyAuthorizer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@ethereum-attestation-service/=node_modules/@ethereum-attestation-service/\",\":@ethsign/=node_modules/@ethsign/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@synaps3/=contracts/\",\":ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solady/=lib/solady/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"],\"viaIR\":true},\"sources\":{\"contracts/core/interfaces/access/IAccessManager.sol\":{\"keccak256\":\"0x839438bf1e2e7432db801b4734831297e075cb120cf91864fb9c52c3ddccbf0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8008d58c268d046c9bcd9ac5cd4244a666688604bf6be9b243610e041a3c285e\",\"dweb:/ipfs/QmXGXhm8YhdNToMzmAq7aLXQv2vXPkhrTFTwaAYhnhrJkJ\"]},\"contracts/core/interfaces/policies/IPolicy.sol\":{\"keccak256\":\"0x6bb2e4f5f93d957e5fc351e98155c0c038da3a31dd125e22e06f8cca0d0aa332\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cb7da10029a309b52c9df25d9d59c3e0404faa156716d0805d540d0a3518915\",\"dweb:/ipfs/QmXgxHWuaQXRnBgAPiPA4hkWcHpcwLgg4d672gTkP793fd\"]},\"contracts/core/interfaces/policies/IPolicyAuditorVerifiable.sol\":{\"keccak256\":\"0xa16f215a70bb82ebf310086ddd0e3356c8b889146e8c3f64342574cc5d111afa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd46a58675c87225968a17ccf79339f64585310fb3a845e3b4b127222a23d2c9\",\"dweb:/ipfs/QmQEsBEZKJX4h84uqTCAGXQqm81fAtjE1oCGiJ6fm9qLi4\"]},\"contracts/core/interfaces/rights/IRightsPolicyAuthorizer.sol\":{\"keccak256\":\"0x7788d64a9d12536ad06115d72faef14dfc131def88bc15e8901d64d67f231419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecb519a42d82d23498f17644216cd4041b87ee126c2b471f05418af2bb6ae130\",\"dweb:/ipfs/QmTLZw15MB1aXZCvbXfvDozqPm29c3CqiSsgSdMpXEM3o4\"]},\"contracts/core/libraries/LoopOps.sol\":{\"keccak256\":\"0x7e0219ea94f0f4ff1577385dd8407ec4081c54c75b8cb8e82e2ff64904a7c411\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607a06ba07bb2d337ed23582d6ee902457adc27164fdf1560bd23d0f68cbceb2\",\"dweb:/ipfs/QmZENM1tBNEeMBpjdRUPkprZ2Qmnu2cG1StLMrSQxcuJQL\"]},\"contracts/core/primitives/Constants.sol\":{\"keccak256\":\"0xd3dac9b10f88534046b904f281588f0293fa603ec5c68ffeeaf64eec88ebe65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9dddce59781d9a41c012aeff533cca898b1553924f09edf192d0f534f4cc4a1\",\"dweb:/ipfs/QmdKPss1KNAneMGaTXqQSWraN1s6MDCHkMgetn5BVxzXn3\"]},\"contracts/core/primitives/Types.sol\":{\"keccak256\":\"0x9c0dbb09ad90b98817849666e45a70c371676cbe187709f76021bfd6f7d0bb57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb5dafd14005606dd486c8ea5aea374160a59224c03b9687a504360f1c5d190a\",\"dweb:/ipfs/QmVvn3SLREtxwehgxkGg1QE1eMw5QRk5R6kG8qyGujbCTf\"]},\"contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol\":{\"keccak256\":\"0x5d99ec9405886a20eeff6ea243c1d94b5994a474338b866d74ffa9bbfa9473f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1de4b84ddb631eee3d1eb0f921f0d0d20be3f6e808b8b2a21082436816884095\",\"dweb:/ipfs/QmaKZ938AabVXewdFBVtV8SFD4eWJq59AsdoV3aBMY7cmB\"]},\"contracts/rights/RightsPolicyAuthorizer.sol\":{\"keccak256\":\"0x5900b8c61b469e7c849401dd5f6e6df1282da123431348cbcad08dd50fb6ede9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59d356e7a693538b23b5bb0daa0fc933a1dd4377320f1d3918b2a163424392fe\",\"dweb:/ipfs/QmNqHW1MoHEhRpH6jCbhfFHUek9xPFPGpDo5c2movaGHTm\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\":{\"keccak256\":\"0x89017bb026363fdc9fdc4b7c995aaf83e4c5af5c022eafa2e96352f843297373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dff6e61ba53c87ad06cbdddb9ff36dec215a41beff91746a80f4a9a32d37f447\",\"dweb:/ipfs/QmUm6hznJTihCTaRx7TXHXKbgyuDEEgehyRzi7TAs8GLvB\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0x9be2d08a326515805bc9cf6315b7953f8d1ebe88abf48c2d645fb1fa8211a0e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e750d656e37efaefbb2300051ec2c4c725db266c5ff89bc985f7ecb8d214c4f4\",\"dweb:/ipfs/QmT51FsZes2n2nrLLh3d8YkBYKY43CtwScZxixcLGzL9r6\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f\",\"dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz\"]},\"node_modules/@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "policyAudit",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authority",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AccessManagedInvalidAuthority"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "uint32", "name": "delay", "type": "uint32" }
          ],
          "type": "error",
          "name": "AccessManagedRequiredDelay"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "AccessManagedUnauthorized"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "address", "name": "policy", "type": "address" }
          ],
          "type": "error",
          "name": "InvalidNotAuditedPolicy"
        },
        {
          "inputs": [
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "type": "error",
          "name": "InvalidPolicyInitialization"
        },
        {
          "inputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ],
          "type": "error",
          "name": "InvalidUnauthorizedOperation"
        },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authority",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "policy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "holder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RightsGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "policy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "holder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RightsRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POLICY_AUDIT",
          "outputs": [
            {
              "internalType": "contract IPolicyAuditorVerifiable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "policy", "type": "address" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizePolicy"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "holder", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAuthorizedPolicies",
          "outputs": [
            { "internalType": "address[]", "name": "", "type": "address[]" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "accessManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isConsumingScheduledOp",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "policy", "type": "address" },
            { "internalType": "address", "name": "holder", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPolicyAuthorized",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "policy", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokePolicy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authority()": { "details": "Returns the current authority." },
          "authorizePolicy(address,bytes)": {
            "params": {
              "data": "The data to initialize policy.",
              "policy": "The address of the policy contract to be initialized and authorized."
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "getAuthorizedPolicies(address)": {
            "details": "This function returns an array of policy addresses that have been granted rights by the holder.",
            "params": {
              "holder": "The address of the asset rights holder whose authorized policies are being queried."
            }
          },
          "isConsumingScheduledOp()": {
            "details": "Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls."
          },
          "isPolicyAuthorized(address,address)": {
            "details": "Verify if the specified policy contract has been delegated the rights by the asset holder.",
            "params": {
              "holder": "the asset rights holder to check for delegation.",
              "policy": "The address of the policy contract to check for delegation."
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "revokePolicy(address)": {
            "params": {
              "policy": "The address of the policy contract whose rights delegation is being revoked."
            }
          },
          "setAuthority(address)": {
            "details": "Transfers control to a new authority. The caller must be the current authority."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizePolicy(address,bytes)": {
            "notice": "Initializes and authorizes a policy contract for content held by the holder."
          },
          "getAuthorizedPolicies(address)": {
            "notice": "Retrieves all policies authorized by a specific content holder."
          },
          "initialize(address)": { "notice": "Initializes the proxy state." },
          "revokePolicy(address)": {
            "notice": "Revokes the delegation of rights to a policy contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ethereum-attestation-service/=node_modules/@ethereum-attestation-service/",
        "@ethsign/=node_modules/@ethsign/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@synaps3/=contracts/",
        "ds-test/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solady/=lib/solady/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": { "enabled": true, "runs": 20000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "contracts/rights/RightsPolicyAuthorizer.sol": "RightsPolicyAuthorizer"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/core/interfaces/access/IAccessManager.sol": {
        "keccak256": "0x839438bf1e2e7432db801b4734831297e075cb120cf91864fb9c52c3ddccbf0f",
        "urls": [
          "bzz-raw://8008d58c268d046c9bcd9ac5cd4244a666688604bf6be9b243610e041a3c285e",
          "dweb:/ipfs/QmXGXhm8YhdNToMzmAq7aLXQv2vXPkhrTFTwaAYhnhrJkJ"
        ],
        "license": "MIT"
      },
      "contracts/core/interfaces/policies/IPolicy.sol": {
        "keccak256": "0x6bb2e4f5f93d957e5fc351e98155c0c038da3a31dd125e22e06f8cca0d0aa332",
        "urls": [
          "bzz-raw://0cb7da10029a309b52c9df25d9d59c3e0404faa156716d0805d540d0a3518915",
          "dweb:/ipfs/QmXgxHWuaQXRnBgAPiPA4hkWcHpcwLgg4d672gTkP793fd"
        ],
        "license": "MIT"
      },
      "contracts/core/interfaces/policies/IPolicyAuditorVerifiable.sol": {
        "keccak256": "0xa16f215a70bb82ebf310086ddd0e3356c8b889146e8c3f64342574cc5d111afa",
        "urls": [
          "bzz-raw://dd46a58675c87225968a17ccf79339f64585310fb3a845e3b4b127222a23d2c9",
          "dweb:/ipfs/QmQEsBEZKJX4h84uqTCAGXQqm81fAtjE1oCGiJ6fm9qLi4"
        ],
        "license": "MIT"
      },
      "contracts/core/interfaces/rights/IRightsPolicyAuthorizer.sol": {
        "keccak256": "0x7788d64a9d12536ad06115d72faef14dfc131def88bc15e8901d64d67f231419",
        "urls": [
          "bzz-raw://ecb519a42d82d23498f17644216cd4041b87ee126c2b471f05418af2bb6ae130",
          "dweb:/ipfs/QmTLZw15MB1aXZCvbXfvDozqPm29c3CqiSsgSdMpXEM3o4"
        ],
        "license": "MIT"
      },
      "contracts/core/libraries/LoopOps.sol": {
        "keccak256": "0x7e0219ea94f0f4ff1577385dd8407ec4081c54c75b8cb8e82e2ff64904a7c411",
        "urls": [
          "bzz-raw://607a06ba07bb2d337ed23582d6ee902457adc27164fdf1560bd23d0f68cbceb2",
          "dweb:/ipfs/QmZENM1tBNEeMBpjdRUPkprZ2Qmnu2cG1StLMrSQxcuJQL"
        ],
        "license": "MIT"
      },
      "contracts/core/primitives/Constants.sol": {
        "keccak256": "0xd3dac9b10f88534046b904f281588f0293fa603ec5c68ffeeaf64eec88ebe65e",
        "urls": [
          "bzz-raw://d9dddce59781d9a41c012aeff533cca898b1553924f09edf192d0f534f4cc4a1",
          "dweb:/ipfs/QmdKPss1KNAneMGaTXqQSWraN1s6MDCHkMgetn5BVxzXn3"
        ],
        "license": "MIT"
      },
      "contracts/core/primitives/Types.sol": {
        "keccak256": "0x9c0dbb09ad90b98817849666e45a70c371676cbe187709f76021bfd6f7d0bb57",
        "urls": [
          "bzz-raw://fb5dafd14005606dd486c8ea5aea374160a59224c03b9687a504360f1c5d190a",
          "dweb:/ipfs/QmVvn3SLREtxwehgxkGg1QE1eMw5QRk5R6kG8qyGujbCTf"
        ],
        "license": "MIT"
      },
      "contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol": {
        "keccak256": "0x5d99ec9405886a20eeff6ea243c1d94b5994a474338b866d74ffa9bbfa9473f0",
        "urls": [
          "bzz-raw://1de4b84ddb631eee3d1eb0f921f0d0d20be3f6e808b8b2a21082436816884095",
          "dweb:/ipfs/QmaKZ938AabVXewdFBVtV8SFD4eWJq59AsdoV3aBMY7cmB"
        ],
        "license": "MIT"
      },
      "contracts/rights/RightsPolicyAuthorizer.sol": {
        "keccak256": "0x5900b8c61b469e7c849401dd5f6e6df1282da123431348cbcad08dd50fb6ede9",
        "urls": [
          "bzz-raw://59d356e7a693538b23b5bb0daa0fc933a1dd4377320f1d3918b2a163424392fe",
          "dweb:/ipfs/QmNqHW1MoHEhRpH6jCbhfFHUek9xPFPGpDo5c2movaGHTm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol": {
        "keccak256": "0x89017bb026363fdc9fdc4b7c995aaf83e4c5af5c022eafa2e96352f843297373",
        "urls": [
          "bzz-raw://dff6e61ba53c87ad06cbdddb9ff36dec215a41beff91746a80f4a9a32d37f447",
          "dweb:/ipfs/QmUm6hznJTihCTaRx7TXHXKbgyuDEEgehyRzi7TAs8GLvB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27",
        "urls": [
          "bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e",
          "dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/AuthorityUtils.sol": {
        "keccak256": "0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4",
        "urls": [
          "bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e",
          "dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol": {
        "keccak256": "0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6",
        "urls": [
          "bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694",
          "dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol": {
        "keccak256": "0x9be2d08a326515805bc9cf6315b7953f8d1ebe88abf48c2d645fb1fa8211a0e2",
        "urls": [
          "bzz-raw://e750d656e37efaefbb2300051ec2c4c725db266c5ff89bc985f7ecb8d214c4f4",
          "dweb:/ipfs/QmT51FsZes2n2nrLLh3d8YkBYKY43CtwScZxixcLGzL9r6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAuthority.sol": {
        "keccak256": "0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030",
        "urls": [
          "bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c",
          "dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06",
        "urls": [
          "bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c",
          "dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
        "urls": [
          "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
          "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
        "urls": [
          "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
          "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212",
        "urls": [
          "bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f",
          "dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/types/Time.sol": {
        "keccak256": "0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc",
        "urls": [
          "bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6",
          "dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3628,
        "contract": "contracts/rights/RightsPolicyAuthorizer.sol:RightsPolicyAuthorizer",
        "label": "_authorizedPolicies",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(AddressSet)50160_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(AddressSet)50160_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)50160_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)50160_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 50159,
            "contract": "contracts/rights/RightsPolicyAuthorizer.sol:RightsPolicyAuthorizer",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)49845_storage"
          }
        ]
      },
      "t_struct(Set)49845_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 49840,
            "contract": "contracts/rights/RightsPolicyAuthorizer.sol:RightsPolicyAuthorizer",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 49844,
            "contract": "contracts/rights/RightsPolicyAuthorizer.sol:RightsPolicyAuthorizer",
            "label": "_positions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "ast": {
    "absolutePath": "contracts/rights/RightsPolicyAuthorizer.sol",
    "id": 3905,
    "exportedSymbols": {
      "AccessControlledUpgradeable": [1943],
      "EnumerableSet": [50447],
      "IPolicy": [762],
      "IPolicyAuditorVerifiable": [774],
      "IRightsPolicyAuthorizer": [857],
      "Initializable": [40787],
      "LoopOps": [1327],
      "RightsPolicyAuthorizer": [3904],
      "UUPSUpgradeable": [40969]
    },
    "nodeType": "SourceUnit",
    "src": "124:7551:38",
    "nodes": [
      {
        "id": 3587,
        "nodeType": "PragmaDirective",
        "src": "124:23:38",
        "nodes": [],
        "literals": ["solidity", "0.8", ".26"]
      },
      {
        "id": 3589,
        "nodeType": "ImportDirective",
        "src": "149:98:38",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 40788,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3588,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40787,
              "src": "158:13:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3591,
        "nodeType": "ImportDirective",
        "src": "248:88:38",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 50448,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3590,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50447,
              "src": "257:13:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3593,
        "nodeType": "ImportDirective",
        "src": "337:102:38",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 40970,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3592,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40969,
              "src": "346:15:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3595,
        "nodeType": "ImportDirective",
        "src": "440:115:38",
        "nodes": [],
        "absolutePath": "contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol",
        "file": "@synaps3/core/primitives/upgradeable/AccessControlledUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 1944,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3594,
              "name": "AccessControlledUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1943,
              "src": "449:27:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3597,
        "nodeType": "ImportDirective",
        "src": "557:72:38",
        "nodes": [],
        "absolutePath": "contracts/core/interfaces/policies/IPolicy.sol",
        "file": "@synaps3/core/interfaces/policies/IPolicy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 763,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3596,
              "name": "IPolicy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 762,
              "src": "566:7:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3599,
        "nodeType": "ImportDirective",
        "src": "630:102:38",
        "nodes": [],
        "absolutePath": "contracts/core/interfaces/rights/IRightsPolicyAuthorizer.sol",
        "file": "@synaps3/core/interfaces/rights/IRightsPolicyAuthorizer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 858,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3598,
              "name": "IRightsPolicyAuthorizer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 857,
              "src": "639:23:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3601,
        "nodeType": "ImportDirective",
        "src": "733:106:38",
        "nodes": [],
        "absolutePath": "contracts/core/interfaces/policies/IPolicyAuditorVerifiable.sol",
        "file": "@synaps3/core/interfaces/policies/IPolicyAuditorVerifiable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 775,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3600,
              "name": "IPolicyAuditorVerifiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 774,
              "src": "742:24:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3603,
        "nodeType": "ImportDirective",
        "src": "840:62:38",
        "nodes": [],
        "absolutePath": "contracts/core/libraries/LoopOps.sol",
        "file": "@synaps3/core/libraries/LoopOps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3905,
        "sourceUnit": 1328,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3602,
              "name": "LoopOps",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1327,
              "src": "849:7:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3904,
        "nodeType": "ContractDefinition",
        "src": "904:6770:38",
        "nodes": [
          {
            "id": 3614,
            "nodeType": "UsingForDirective",
            "src": "1046:26:38",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3612,
              "name": "LoopOps",
              "nameLocations": ["1052:7:38"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1327,
              "src": "1052:7:38"
            },
            "typeName": {
              "id": 3613,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1064:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3618,
            "nodeType": "UsingForDirective",
            "src": "1077:49:38",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3615,
              "name": "EnumerableSet",
              "nameLocations": ["1083:13:38"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50447,
              "src": "1083:13:38"
            },
            "typeName": {
              "id": 3617,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3616,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": ["1101:13:38", "1115:10:38"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50160,
                "src": "1101:24:38"
              },
              "referencedDeclaration": 50160,
              "src": "1101:24:38",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$50160_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 3622,
            "nodeType": "VariableDeclaration",
            "src": "1521:54:38",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3619,
              "nodeType": "StructuredDocumentation",
              "src": "1455:61:38",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
            },
            "functionSelector": "82e2b7c8",
            "mutability": "immutable",
            "name": "POLICY_AUDIT",
            "nameLocation": "1563:12:38",
            "scope": 3904,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPolicyAuditorVerifiable_$774",
              "typeString": "contract IPolicyAuditorVerifiable"
            },
            "typeName": {
              "id": 3621,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3620,
                "name": "IPolicyAuditorVerifiable",
                "nameLocations": ["1521:24:38"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 774,
                "src": "1521:24:38"
              },
              "referencedDeclaration": 774,
              "src": "1521:24:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPolicyAuditorVerifiable_$774",
                "typeString": "contract IPolicyAuditorVerifiable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3628,
            "nodeType": "VariableDeclaration",
            "src": "1668:72:38",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3623,
              "nodeType": "StructuredDocumentation",
              "src": "1582:81:38",
              "text": "@dev Mapping to store the delegated rights for each policy contract (address)"
            },
            "mutability": "mutable",
            "name": "_authorizedPolicies",
            "nameLocation": "1721:19:38",
            "scope": 3904,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$50160_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
            },
            "typeName": {
              "id": 3627,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3624,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1676:7:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1668:44:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$50160_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.AddressSet)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3626,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3625,
                  "name": "EnumerableSet.AddressSet",
                  "nameLocations": ["1687:13:38", "1701:10:38"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50160,
                  "src": "1687:24:38"
                },
                "referencedDeclaration": 50160,
                "src": "1687:24:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressSet_$50160_storage_ptr",
                  "typeString": "struct EnumerableSet.AddressSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 3639,
            "nodeType": "EventDefinition",
            "src": "2087:99:38",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3629,
              "nodeType": "StructuredDocumentation",
              "src": "1746:336:38",
              "text": "@notice Emitted when rights are granted to a policy for content.\n @param policy The policy contract address granted rights.\n @param holder The address of the asset rights holder.\n @param data The data used to initialize the policy.\n @param timestamp The timestamp indicating when the rights were granted."
            },
            "eventSelector": "6ba225fe6c79a8c5ddd429f9aa7654c4dbebe2cc98a02209616ac200ceba5c56",
            "name": "RightsGranted",
            "nameLocation": "2093:13:38",
            "parameters": {
              "id": 3638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3631,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "2123:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "2107:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3633,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "2147:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "2131:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3635,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2163:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "2155:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3637,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2180:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3639,
                  "src": "2174:10:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3636,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2106:79:38"
            }
          },
          {
            "id": 3648,
            "nodeType": "EventDefinition",
            "src": "2491:87:38",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3640,
              "nodeType": "StructuredDocumentation",
              "src": "2192:294:38",
              "text": "@notice Emitted when rights are revoked from a policy for content.\n @param policy The policy contract address whose rights are being revoked.\n @param holder The address of the asset rights holder.\n @param timestamp The timestamp indicating when the rights were revoked."
            },
            "eventSelector": "18147b94ec466a20610ebd8716adbb2e35876dbfc0f54295dd2fe1d750d7eff0",
            "name": "RightsRevoked",
            "nameLocation": "2497:13:38",
            "parameters": {
              "id": 3647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "2527:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3648,
                  "src": "2511:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2511:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3644,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "2551:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3648,
                  "src": "2535:22:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3646,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2567:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3648,
                  "src": "2559:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2510:67:38"
            }
          },
          {
            "id": 3653,
            "nodeType": "ErrorDefinition",
            "src": "2731:46:38",
            "nodes": [],
            "documentation": {
              "id": 3649,
              "nodeType": "StructuredDocumentation",
              "src": "2584:142:38",
              "text": "@dev Error thrown when a policy has not been audited or approved for operation.\n @param policy The address of the unaudited policy."
            },
            "errorSelector": "e63549fa",
            "name": "InvalidNotAuditedPolicy",
            "nameLocation": "2737:23:38",
            "parameters": {
              "id": 3652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3651,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "2769:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "2761:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:16:38"
            }
          },
          {
            "id": 3658,
            "nodeType": "ErrorDefinition",
            "src": "2937:49:38",
            "nodes": [],
            "documentation": {
              "id": 3654,
              "nodeType": "StructuredDocumentation",
              "src": "2782:150:38",
              "text": "@dev Error thrown when there is an issue with the policy setup.\n @param reason A string explaining the reason for the invalid policy setup."
            },
            "errorSelector": "47fc3bab",
            "name": "InvalidPolicyInitialization",
            "nameLocation": "2943:27:38",
            "parameters": {
              "id": 3657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "2978:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3658,
                  "src": "2971:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2971:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2970:15:38"
            }
          },
          {
            "id": 3674,
            "nodeType": "FunctionDefinition",
            "src": "3045:385:38",
            "nodes": [],
            "body": {
              "id": 3673,
              "nodeType": "Block",
              "src": "3078:352:38",
              "nodes": [],
              "statements": [
                {
                  "documentation": "https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680\n https://forum.openzeppelin.com/t/what-does-disableinitializers-function-mean/28730/5",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3664,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40755,
                      "src": "3278:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:22:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3666,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:22:38"
                },
                {
                  "expression": {
                    "id": 3671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3667,
                      "name": "POLICY_AUDIT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3622,
                      "src": "3371:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPolicyAuditorVerifiable_$774",
                        "typeString": "contract IPolicyAuditorVerifiable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3669,
                          "name": "policyAudit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3661,
                          "src": "3411:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3668,
                        "name": "IPolicyAuditorVerifiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "3386:24:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPolicyAuditorVerifiable_$774_$",
                          "typeString": "type(contract IPolicyAuditorVerifiable)"
                        }
                      },
                      "id": 3670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3386:37:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPolicyAuditorVerifiable_$774",
                        "typeString": "contract IPolicyAuditorVerifiable"
                      }
                    },
                    "src": "3371:52:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPolicyAuditorVerifiable_$774",
                      "typeString": "contract IPolicyAuditorVerifiable"
                    }
                  },
                  "id": 3672,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:52:38"
                }
              ]
            },
            "documentation": {
              "id": 3659,
              "nodeType": "StructuredDocumentation",
              "src": "2992:48:38",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3661,
                  "mutability": "mutable",
                  "name": "policyAudit",
                  "nameLocation": "3065:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "3057:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3056:21:38"
            },
            "returnParameters": {
              "id": 3663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3078:0:38"
            },
            "scope": 3904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3690,
            "nodeType": "FunctionDefinition",
            "src": "3481:151:38",
            "nodes": [],
            "body": {
              "id": 3689,
              "nodeType": "Block",
              "src": "3543:89:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3682,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40841,
                      "src": "3553:22:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3553:24:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3684,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:24:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3686,
                        "name": "accessManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3677,
                        "src": "3611:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3685,
                      "name": "__AccessControlled_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1878,
                      "src": "3587:23:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3587:38:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3688,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:38:38"
                }
              ]
            },
            "documentation": {
              "id": 3675,
              "nodeType": "StructuredDocumentation",
              "src": "3436:40:38",
              "text": "@notice Initializes the proxy state."
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3680,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3679,
                  "name": "initializer",
                  "nameLocations": ["3531:11:38"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40641,
                  "src": "3531:11:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3531:11:38"
              }
            ],
            "name": "initialize",
            "nameLocation": "3490:10:38",
            "parameters": {
              "id": 3678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3677,
                  "mutability": "mutable",
                  "name": "accessManager",
                  "nameLocation": "3509:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3690,
                  "src": "3501:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3501:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3500:23:38"
            },
            "returnParameters": {
              "id": 3681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3543:0:38"
            },
            "scope": 3904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3747,
            "nodeType": "FunctionDefinition",
            "src": "3873:720:38",
            "nodes": [],
            "body": {
              "id": 3746,
              "nodeType": "Block",
              "src": "3944:649:38",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 3701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4045:23:38",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 3699,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3693,
                          "src": "4061:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3698,
                        "name": "_isValidPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3903,
                        "src": "4046:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 3700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4046:22:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3706,
                  "nodeType": "IfStatement",
                  "src": "4041:67:38",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 3703,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3693,
                          "src": "4101:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3702,
                        "name": "InvalidNotAuditedPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3653,
                        "src": "4077:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                          "typeString": "function (address) pure returns (error)"
                        }
                      },
                      "id": 3704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4077:31:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_error",
                        "typeString": "error"
                      }
                    },
                    "id": 3705,
                    "nodeType": "RevertStatement",
                    "src": "4070:38:38"
                  }
                },
                {
                  "assignments": [3708, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3708,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4229:7:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3746,
                      "src": "4224:12:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3707,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4224:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3721,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3713,
                              "name": "IPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 762,
                              "src": "4269:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPolicy_$762_$",
                                "typeString": "type(contract IPolicy)"
                              }
                            },
                            "id": 3714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4277:10:38",
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 714,
                            "src": "4269:18:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function IPolicy.initialize(address,bytes calldata)"
                            }
                          },
                          {
                            "components": [
                              {
                                "expression": {
                                  "id": 3715,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4290:3:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4294:6:38",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4290:10:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3717,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3695,
                                "src": "4302:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "id": 3718,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4289:18:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_bytes_calldata_ptr_$",
                              "typeString": "tuple(address,bytes calldata)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function IPolicy.initialize(address,bytes calldata)"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_address_$_t_bytes_calldata_ptr_$",
                              "typeString": "tuple(address,bytes calldata)"
                            }
                          ],
                          "expression": {
                            "id": 3711,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4254:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4258:10:38",
                          "memberName": "encodeCall",
                          "nodeType": "MemberAccess",
                          "src": "4254:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4254:54:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3709,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3693,
                        "src": "4242:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4249:4:38",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "4242:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4242:67:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4223:86:38"
                },
                {
                  "condition": {
                    "id": 3723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4323:8:38",
                    "subExpression": {
                      "id": 3722,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3708,
                      "src": "4324:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3728,
                  "nodeType": "IfStatement",
                  "src": "4319:91:38",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "hexValue": "4572726f7220647572696e6720706f6c69637920696e697469616c697a6174696f6e2063616c6c",
                          "id": 3725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4368:41:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_466ff33af544a3258ce48b30829c401c1b82fc1a667216dc12b6fb6a650ffe3f",
                            "typeString": "literal_string \"Error during policy initialization call\""
                          },
                          "value": "Error during policy initialization call"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_466ff33af544a3258ce48b30829c401c1b82fc1a667216dc12b6fb6a650ffe3f",
                            "typeString": "literal_string \"Error during policy initialization call\""
                          }
                        ],
                        "id": 3724,
                        "name": "InvalidPolicyInitialization",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "4340:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
                          "typeString": "function (string memory) pure returns (error)"
                        }
                      },
                      "id": 3726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4340:70:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_error",
                        "typeString": "error"
                      }
                    },
                    "id": 3727,
                    "nodeType": "RevertStatement",
                    "src": "4333:77:38"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3734,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3693,
                        "src": "4456:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3729,
                          "name": "_authorizedPolicies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3628,
                          "src": "4420:19:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$50160_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 3732,
                        "indexExpression": {
                          "expression": {
                            "id": 3730,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4440:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4444:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4440:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4420:31:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$50160_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 3733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4452:3:38",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "4420:35:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$50160_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$50160_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 3735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4420:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3736,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:43:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3738,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3693,
                        "src": "4544:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4552:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4556:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4552:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3741,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4564:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4570:9:38",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4564:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3743,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3695,
                        "src": "4581:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 3737,
                      "name": "RightsGranted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3639,
                      "src": "4530:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4530:56:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3745,
                  "nodeType": "EmitStatement",
                  "src": "4525:61:38"
                }
              ]
            },
            "baseFunctions": [850],
            "documentation": {
              "id": 3691,
              "nodeType": "StructuredDocumentation",
              "src": "3638:230:38",
              "text": "@notice Initializes and authorizes a policy contract for content held by the holder.\n @param policy The address of the policy contract to be initialized and authorized.\n @param data The data to initialize policy."
            },
            "functionSelector": "2f6cc102",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizePolicy",
            "nameLocation": "3882:15:38",
            "parameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3693,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "3906:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3747,
                  "src": "3898:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3898:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3695,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3929:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3747,
                  "src": "3914:19:38",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3694,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3897:37:38"
            },
            "returnParameters": {
              "id": 3697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3944:0:38"
            },
            "scope": 3904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3770,
            "nodeType": "FunctionDefinition",
            "src": "4769:175:38",
            "nodes": [],
            "body": {
              "id": 3769,
              "nodeType": "Block",
              "src": "4816:128:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3758,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3750,
                        "src": "4865:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3753,
                          "name": "_authorizedPolicies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3628,
                          "src": "4826:19:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$50160_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 3756,
                        "indexExpression": {
                          "expression": {
                            "id": 3754,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4846:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4850:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4846:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4826:31:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$50160_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 3757,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4858:6:38",
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50214,
                      "src": "4826:38:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$50160_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$50160_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 3759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4826:46:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3760,
                  "nodeType": "ExpressionStatement",
                  "src": "4826:46:38"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3762,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3750,
                        "src": "4901:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3763,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4909:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4913:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4909:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3765,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4921:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4927:9:38",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4921:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3761,
                      "name": "RightsRevoked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3648,
                      "src": "4887:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:50:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3768,
                  "nodeType": "EmitStatement",
                  "src": "4882:55:38"
                }
              ]
            },
            "baseFunctions": [856],
            "documentation": {
              "id": 3748,
              "nodeType": "StructuredDocumentation",
              "src": "4599:165:38",
              "text": "@notice Revokes the delegation of rights to a policy contract.\n @param policy The address of the policy contract whose rights delegation is being revoked."
            },
            "functionSelector": "9fda230a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokePolicy",
            "nameLocation": "4778:12:38",
            "parameters": {
              "id": 3751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3750,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "4799:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3770,
                  "src": "4791:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4791:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4790:16:38"
            },
            "returnParameters": {
              "id": 3752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4816:0:38"
            },
            "scope": 3904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3792,
            "nodeType": "FunctionDefinition",
            "src": "5207:183:38",
            "nodes": [],
            "body": {
              "id": 3791,
              "nodeType": "Block",
              "src": "5296:94:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3784,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3773,
                          "src": "5350:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3780,
                            "name": "_authorizedPolicies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3628,
                            "src": "5313:19:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$50160_storage_$",
                              "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                            }
                          },
                          "id": 3782,
                          "indexExpression": {
                            "id": 3781,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3775,
                            "src": "5333:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5313:27:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$50160_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        },
                        "id": 3783,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5341:8:38",
                        "memberName": "contains",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50241,
                        "src": "5313:36:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$50160_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$50160_storage_ptr_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                        }
                      },
                      "id": 3785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5313:44:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3787,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3773,
                          "src": "5376:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3786,
                        "name": "_isValidPolicy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3903,
                        "src": "5361:14:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 3788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5361:22:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5313:70:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3779,
                  "id": 3790,
                  "nodeType": "Return",
                  "src": "5306:77:38"
                }
              ]
            },
            "baseFunctions": [842],
            "documentation": {
              "id": 3771,
              "nodeType": "StructuredDocumentation",
              "src": "4950:252:38",
              "text": "@dev Verify if the specified policy contract has been delegated the rights by the asset holder.\n @param policy The address of the policy contract to check for delegation.\n @param holder the asset rights holder to check for delegation."
            },
            "functionSelector": "ca89d8b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPolicyAuthorized",
            "nameLocation": "5216:18:38",
            "parameters": {
              "id": 3776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3773,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "5243:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3792,
                  "src": "5235:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5235:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3775,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "5259:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3792,
                  "src": "5251:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5251:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5234:32:38"
            },
            "returnParameters": {
              "id": 3779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3792,
                  "src": "5290:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5289:6:38"
            },
            "scope": 3904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3871,
            "nodeType": "FunctionDefinition",
            "src": "5691:1286:38",
            "nodes": [],
            "body": {
              "id": 3870,
              "nodeType": "Block",
              "src": "5779:1198:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [3805],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3805,
                      "mutability": "mutable",
                      "name": "policies",
                      "nameLocation": "6417:8:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3870,
                      "src": "6400:25:38",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3803,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6400:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3804,
                        "nodeType": "ArrayTypeName",
                        "src": "6400:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3811,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 3806,
                          "name": "_authorizedPolicies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3628,
                          "src": "6428:19:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$50160_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
                          }
                        },
                        "id": 3808,
                        "indexExpression": {
                          "id": 3807,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3795,
                          "src": "6448:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6428:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$50160_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 3809,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6456:6:38",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50313,
                      "src": "6428:34:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$50160_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$50160_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 3810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6428:36:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6400:64:38"
                },
                {
                  "assignments": [3816],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3816,
                      "mutability": "mutable",
                      "name": "filtered",
                      "nameLocation": "6491:8:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3870,
                      "src": "6474:25:38",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6474:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3815,
                        "nodeType": "ArrayTypeName",
                        "src": "6474:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3823,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3820,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3805,
                          "src": "6516:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 3821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6525:6:38",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6516:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6502:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3817,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6506:7:38",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3818,
                        "nodeType": "ArrayTypeName",
                        "src": "6506:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6502:30:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6474:58:38"
                },
                {
                  "assignments": [3825],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3825,
                      "mutability": "mutable",
                      "name": "policiesLen",
                      "nameLocation": "6550:11:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3870,
                      "src": "6542:19:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3824,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6542:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3828,
                  "initialValue": {
                    "expression": {
                      "id": 3826,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3805,
                      "src": "6564:8:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 3827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6573:6:38",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6564:15:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6542:37:38"
                },
                {
                  "assignments": [3830],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3830,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "6597:1:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3870,
                      "src": "6589:9:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3829,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6589:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3832,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6601:1:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6589:13:38"
                },
                {
                  "body": {
                    "id": 3866,
                    "nodeType": "Block",
                    "src": "6691:254:38",
                    "statements": [
                      {
                        "condition": {
                          "id": 3851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6709:28:38",
                          "subExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3847,
                                  "name": "policies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3805,
                                  "src": "6725:8:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 3849,
                                "indexExpression": {
                                  "id": 3848,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3834,
                                  "src": "6734:1:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6725:11:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3846,
                              "name": "_isValidPolicy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3903,
                              "src": "6710:14:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 3850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6710:27:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3853,
                        "nodeType": "IfStatement",
                        "src": "6705:42:38",
                        "trueBody": {
                          "id": 3852,
                          "nodeType": "Continue",
                          "src": "6739:8:38"
                        }
                      },
                      {
                        "expression": {
                          "id": 3860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3854,
                              "name": "filtered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3816,
                              "src": "6761:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3856,
                            "indexExpression": {
                              "id": 3855,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3830,
                              "src": "6770:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6761:11:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 3857,
                              "name": "policies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3805,
                              "src": "6775:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3859,
                            "indexExpression": {
                              "id": 3858,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3834,
                              "src": "6784:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6775:11:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6761:25:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3861,
                        "nodeType": "ExpressionStatement",
                        "src": "6761:25:38"
                      },
                      {
                        "id": 3865,
                        "nodeType": "UncheckedBlock",
                        "src": "6889:46:38",
                        "statements": [
                          {
                            "expression": {
                              "id": 3863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6917:3:38",
                              "subExpression": {
                                "id": 3862,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3830,
                                "src": "6919:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3864,
                            "nodeType": "ExpressionStatement",
                            "src": "6917:3:38"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3837,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3834,
                      "src": "6652:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3838,
                      "name": "policiesLen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3825,
                      "src": "6656:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6652:15:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3867,
                  "initializationExpression": {
                    "assignments": [3834],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3834,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6645:1:38",
                        "nodeType": "VariableDeclaration",
                        "scope": 3867,
                        "src": "6637:9:38",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3833,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6637:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3836,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6649:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6637:13:38"
                  },
                  "isSimpleCounterLoop": false,
                  "loopExpression": {
                    "expression": {
                      "id": 3844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 3840,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3834,
                        "src": "6669:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 3841,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3834,
                            "src": "6673:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6675:12:38",
                          "memberName": "uncheckedInc",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1326,
                          "src": "6673:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6673:16:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6669:20:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3845,
                    "nodeType": "ExpressionStatement",
                    "src": "6669:20:38"
                  },
                  "nodeType": "ForStatement",
                  "src": "6632:313:38"
                },
                {
                  "expression": {
                    "id": 3868,
                    "name": "filtered",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3816,
                    "src": "6962:8:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 3800,
                  "id": 3869,
                  "nodeType": "Return",
                  "src": "6955:15:38"
                }
              ]
            },
            "baseFunctions": [832],
            "documentation": {
              "id": 3793,
              "nodeType": "StructuredDocumentation",
              "src": "5396:290:38",
              "text": "@notice Retrieves all policies authorized by a specific content holder.\n @dev This function returns an array of policy addresses that have been granted rights by the holder.\n @param holder The address of the asset rights holder whose authorized policies are being queried."
            },
            "functionSelector": "591b43c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthorizedPolicies",
            "nameLocation": "5700:21:38",
            "parameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3795,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "5730:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3871,
                  "src": "5722:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5722:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5721:16:38"
            },
            "returnParameters": {
              "id": 3800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3871,
                  "src": "5761:16:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3797,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5761:7:38",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3798,
                    "nodeType": "ArrayTypeName",
                    "src": "5761:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5760:18:38"
            },
            "scope": 3904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3881,
            "nodeType": "FunctionDefinition",
            "src": "7175:84:38",
            "nodes": [],
            "body": {
              "id": 3880,
              "nodeType": "Block",
              "src": "7257:2:38",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [40923],
            "documentation": {
              "id": 3872,
              "nodeType": "StructuredDocumentation",
              "src": "6983:187:38",
              "text": "@dev Authorizes the upgrade of the contract.\n @notice Only the owner can authorize the upgrade.\n @param newImplementation The address of the new implementation contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3878,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3877,
                  "name": "onlyAdmin",
                  "nameLocations": ["7247:9:38"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1861,
                  "src": "7247:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "7247:9:38"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "7184:17:38",
            "overrides": {
              "id": 3876,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7238:8:38"
            },
            "parameters": {
              "id": 3875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3874,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "7210:17:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3881,
                  "src": "7202:25:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7202:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7201:27:38"
            },
            "returnParameters": {
              "id": 3879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7257:0:38"
            },
            "scope": 3904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3903,
            "nodeType": "FunctionDefinition",
            "src": "7524:148:38",
            "nodes": [],
            "body": {
              "id": 3902,
              "nodeType": "Block",
              "src": "7592:80:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3889,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3884,
                            "src": "7610:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7628:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7620:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3890,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7620:7:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7620:10:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7610:20:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3897,
                              "name": "policy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3884,
                              "src": "7657:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3895,
                              "name": "POLICY_AUDIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3622,
                              "src": "7634:12:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPolicyAuditorVerifiable_$774",
                                "typeString": "contract IPolicyAuditorVerifiable"
                              }
                            },
                            "id": 3896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7647:9:38",
                            "memberName": "isAudited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 773,
                            "src": "7634:22:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 3898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7634:30:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7610:54:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 3900,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7609:56:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3888,
                  "id": 3901,
                  "nodeType": "Return",
                  "src": "7602:63:38"
                }
              ]
            },
            "documentation": {
              "id": 3882,
              "nodeType": "StructuredDocumentation",
              "src": "7265:254:38",
              "text": "@notice Verifies whether a given policy is valid.\n @dev The function ensures that the policy address is not the zero address\n      and that the policy has been audited.\n @param policy The address of the policy contract to verify."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isValidPolicy",
            "nameLocation": "7533:14:38",
            "parameters": {
              "id": 3885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3884,
                  "mutability": "mutable",
                  "name": "policy",
                  "nameLocation": "7556:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3903,
                  "src": "7548:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7548:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7547:16:38"
            },
            "returnParameters": {
              "id": 3888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3887,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3903,
                  "src": "7586:4:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3886,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7586:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7585:6:38"
            },
            "scope": 3904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3604,
              "name": "Initializable",
              "nameLocations": ["943:13:38"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40787,
              "src": "943:13:38"
            },
            "id": 3605,
            "nodeType": "InheritanceSpecifier",
            "src": "943:13:38"
          },
          {
            "baseName": {
              "id": 3606,
              "name": "UUPSUpgradeable",
              "nameLocations": ["962:15:38"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40969,
              "src": "962:15:38"
            },
            "id": 3607,
            "nodeType": "InheritanceSpecifier",
            "src": "962:15:38"
          },
          {
            "baseName": {
              "id": 3608,
              "name": "AccessControlledUpgradeable",
              "nameLocations": ["983:27:38"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1943,
              "src": "983:27:38"
            },
            "id": 3609,
            "nodeType": "InheritanceSpecifier",
            "src": "983:27:38"
          },
          {
            "baseName": {
              "id": 3610,
              "name": "IRightsPolicyAuthorizer",
              "nameLocations": ["1016:23:38"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 857,
              "src": "1016:23:38"
            },
            "id": 3611,
            "nodeType": "InheritanceSpecifier",
            "src": "1016:23:38"
          }
        ],
        "canonicalName": "RightsPolicyAuthorizer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3904, 857, 1943, 40533, 42974, 42579, 40969, 43543, 40787
        ],
        "name": "RightsPolicyAuthorizer",
        "nameLocation": "913:22:38",
        "scope": 3905,
        "usedErrors": [
          1843, 3653, 3658, 40550, 40553, 40814, 40819, 42945, 42951, 42955,
          43738, 43751, 44975, 45267
        ],
        "usedEvents": [3639, 3648, 40558, 42941, 43516]
      }
    ],
    "license": "MIT"
  },
  "id": 38
}
