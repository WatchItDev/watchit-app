{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "rightsPolicyAuthorizer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "assetOwnership",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ASSET_OWNERSHIP",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAssetOwnership"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "RIGHTS_POLICY_AUTHORIZER",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IRightsPolicyAuthorizer"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "authority",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAvailablePoliciesTerms",
      "inputs": [
        { "name": "holder", "type": "address", "internalType": "address" },
        { "name": "criteria", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct PoliciesAgg.PolicyTerms[]",
          "components": [
            { "name": "policy", "type": "address", "internalType": "address" },
            {
              "name": "terms",
              "type": "tuple",
              "internalType": "struct T.Terms",
              "components": [
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "currency",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "rateBasis",
                  "type": "uint8",
                  "internalType": "enum T.RateBasis"
                },
                { "name": "uri", "type": "string", "internalType": "string" }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoliciesTerms",
      "inputs": [
        { "name": "assetId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct PoliciesAgg.PolicyTerms[]",
          "components": [
            { "name": "policy", "type": "address", "internalType": "address" },
            {
              "name": "terms",
              "type": "tuple",
              "internalType": "struct T.Terms",
              "components": [
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "currency",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "rateBasis",
                  "type": "uint8",
                  "internalType": "enum T.RateBasis"
                },
                { "name": "uri", "type": "string", "internalType": "string" }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoliciesTerms",
      "inputs": [
        { "name": "holder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct PoliciesAgg.PolicyTerms[]",
          "components": [
            { "name": "policy", "type": "address", "internalType": "address" },
            {
              "name": "terms",
              "type": "tuple",
              "internalType": "struct T.Terms",
              "components": [
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "currency",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "rateBasis",
                  "type": "uint8",
                  "internalType": "enum T.RateBasis"
                },
                { "name": "uri", "type": "string", "internalType": "string" }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "accessManager",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isConsumingScheduledOp",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setAuthority",
      "inputs": [
        { "name": "newAuthority", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "AuthorityUpdated",
      "inputs": [
        {
          "name": "authority",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessManagedInvalidAuthority",
      "inputs": [
        { "name": "authority", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AccessManagedRequiredDelay",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "delay", "type": "uint32", "internalType": "uint32" }
      ]
    },
    {
      "type": "error",
      "name": "AccessManagedUnauthorized",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidUnauthorizedOperation",
      "inputs": [{ "name": "", "type": "string", "internalType": "string" }]
    },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60e03461016657601f61169838819003918201601f19168301916001600160401b0383118484101761016a57808492604094855283398101031261016657610052602061004b8361017e565b920161017e565b90306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16610157576002600160401b03196001600160401b038216016100ee575b506001600160a01b0390811660a0521660c052604051611505908161019382396080518181816106a10152610739015260a0518181816104990152611010015260c05181818160cc0152610b9c0152f35b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f61009d565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036101665756fe6080806040526004361015610012575f80fd5b5f3560e01c90816343e1da3314610b2a575080634f1ef2861461071957806352d1902d1461067a5780637a9e5e4b146105a35780637d155528146105505780638fb36037146104bd578063968e48cf1461046d5780639f30b60f14610447578063ad3cb1cc146103e4578063bf7e214f14610392578063c4d66de8146100f45763f520d4eb146100a0575f80fd5b346100f0575f6003193601126100f057602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5f80fd5b346100f05760206003193601126100f05761010d610d7b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16159167ffffffffffffffff82168015908161038a575b6001149081610380575b159081610377575b5061034f57818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00556102fa575b506101d06113df565b6101d86113df565b6101e06113df565b6101e86113df565b6101f181611334565b6101f96113df565b167fffffffffffffffffffffffff00000000000000000000000000000000000000007fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005416177fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005561026757005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055836101c7565b7ff92ee8a9000000000000000000000000000000000000000000000000000000005f5260045ffd5b9050158461015e565b303b159150610156565b84915061014c565b346100f0575f6003193601126100f057602073ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416604051908152f35b346100f0575f6003193601126100f057610443604051610405604082610e03565b600581527f352e302e300000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610c1c565b0390f35b346100f05761044361046161045b36610e7e565b90610fb1565b60405191829182610c5f565b346100f0575f6003193601126100f057602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100f0575f6003193601126100f0577ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005460a01c60ff16156105485760207f8fb36037000000000000000000000000000000000000000000000000000000005b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b60205f61051e565b346100f05760206003193601126100f05761044361046161056f610d7b565b6040519073ffffffffffffffffffffffffffffffffffffffff811660208301526020825261059e604083610e03565b610fb1565b346100f05760206003193601126100f0576105bc610d7b565b73ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416330361064e57803b1561060c5761060a90611334565b005b73ffffffffffffffffffffffffffffffffffffffff907fc2f31e5e000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b7f068ca9d8000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b346100f0575f6003193601126100f05773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036106f15760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b7fe07c8dba000000000000000000000000000000000000000000000000000000005f5260045ffd5b61072236610e7e565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803014908115610ae8575b506106f1576044604073ffffffffffffffffffffffffffffffffffffffff7fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa0054168151928380927fd1f856ee0000000000000000000000000000000000000000000000000000000082525f60048301523360248301525afa908115610add575f91610a90575b5015610a0c5773ffffffffffffffffffffffffffffffffffffffff8216916040517f52d1902d000000000000000000000000000000000000000000000000000000008152602081600481875afa5f91816109d8575b5061087057837f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8592036109ad5750813b1561098257807fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2815115610951575f8083602061060a95519101845af461094b610f82565b91611436565b50503461095a57005b7fb398979f000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faa1d49a4000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091506020813d602011610a04575b816109f460209383610e03565b810103126100f05751908561083f565b3d91506109e7565b60846040517f6317e35f00000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201527f6f6e2e00000000000000000000000000000000000000000000000000000000006064820152fd5b90506040813d604011610ad5575b81610aab60409383610e03565b810103126100f05780519081151582036100f0576020015163ffffffff8116036100f057836107ea565b3d9150610a9e565b6040513d5f823e3d90fd5b905073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141583610764565b346100f05760206003193601126100f05760043580602083015260208252610b53604083610e03565b604051907f6352211e000000000000000000000000000000000000000000000000000000008252600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa908115610add575f91610bd9575b6104436104618484610fb1565b90506020813d602011610c14575b81610bf460209383610e03565b810103126100f05761044391610c0c61046192610f08565b915091610bcc565b3d9150610be7565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080948051918291828752018686015e5f8582860101520116010190565b602081016020825282518091526040820190602060408260051b8501019401925f905b828210610c9157505050505090565b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08282030185526020865173ffffffffffffffffffffffffffffffffffffffff8151168352015190604060208201528151604082015273ffffffffffffffffffffffffffffffffffffffff60208301511660608201526040820151916004831015610d4e57610d418260c0606060209594600197608088970152015191608060a08201520190610c1c565b9701950193920190610c82565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100f057565b6040810190811067ffffffffffffffff821117610dba57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6080810190811067ffffffffffffffff821117610dba57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610dba57604052565b67ffffffffffffffff8111610dba57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9060406003198301126100f05760043573ffffffffffffffffffffffffffffffffffffffff811681036100f0579160243567ffffffffffffffff81116100f057816023820112156100f057806004013590610ed882610e44565b92610ee66040519485610e03565b828452602483830101116100f057815f92602460209301838601378301015290565b519073ffffffffffffffffffffffffffffffffffffffff821682036100f057565b67ffffffffffffffff8111610dba5760051b60200190565b8051821015610f555760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b3d15610fac573d90610f9382610e44565b91610fa16040519384610e03565b82523d5f602084013e565b606090565b9073ffffffffffffffffffffffffffffffffffffffff604051927f591b43c50000000000000000000000000000000000000000000000000000000084521660048301525f8260248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215610add575f92611299575b508151917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061108761107185610f29565b9461107f6040519687610e03565b808652610f29565b015f5b8181106112575750508051905f5b8281106110a6575050505090565b73ffffffffffffffffffffffffffffffffffffffff6110c58284610f41565b5116905f8060405160208101907fa3937111000000000000000000000000000000000000000000000000000000008252602060248201526111398161110d604482018c610c1c565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610e03565b5190855afa91611147610f82565b921561124d578251830160208101936020818303126100f057602081015167ffffffffffffffff81116100f0570190608090829003126100f0576040519061118e82610de7565b602081015182526111a160408201610f08565b6020830152606081015160048110156100f0576040830152608081015167ffffffffffffffff81116100f05760209101019380601f860112156100f05784516111e981610e44565b916111f76040519384610e03565b818352602082880101116100f0576020815f9282600199018386015e8301015260608201526040519161122983610d9e565b8252602082015261123a8288610f41565b526112458187610f41565b505b01611098565b5060019150611247565b60209060405161126681610d9e565b5f815260405161127581610de7565b5f81525f848201525f6040820152606080820152838201528282880101520161108a565b9091503d805f833e6112ab8183610e03565b8101906020818303126100f05780519067ffffffffffffffff82116100f057019080601f830112156100f05781516112e281610f29565b926112f06040519485610e03565b81845260208085019260051b8201019283116100f057602001905b82821061131c57505050905f611040565b6020809161132984610f08565b81520191019061130b565b602073ffffffffffffffffffffffffffffffffffffffff7f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9216807fffffffffffffffffffffffff00000000000000000000000000000000000000007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416177ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a0055604051908152a1565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561140e57565b7fd7e6bcf8000000000000000000000000000000000000000000000000000000005f5260045ffd5b90611473575080511561144b57805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f5260045ffd5b815115806114c6575b611484575090565b73ffffffffffffffffffffffffffffffffffffffff907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b1561147c56fea2646970667358221220d01642bd5465c48d5275e079340316ddce23810aa58aff30674f480b8a89cc7d64736f6c634300081a0033",
    "sourceMap": "760:3753:1:-:0;;;;;;;;;;;;;-1:-1:-1;;760:3753:1;;;;-1:-1:-1;;;;;760:3753:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1171:4:43;;1163:13;;8837:64:42;760:3753:1;;;;;;7896:76:42;;-1:-1:-1;;;;;;;;;;;760:3753:1;;7985:34:42;7981:146;;-1:-1:-1;;;;;;;760:3753:1;;;;1652:74;760:3753;1736:49;;760:3753;;;;;;;;1163:13:43;760:3753:1;;;;;;;;;;1652:74;760:3753;;;;;;;;;;1736:49;760:3753;;;;;;;;;;;7981:146:42;-1:-1:-1;;;;;;760:3753:1;-1:-1:-1;;;;;760:3753:1;;;8837:64:42;760:3753:1;;;;;;8087:29:42;;760:3753:1;;8087:29:42;7981:146;;;7896:76;7938:23;;;-1:-1:-1;7938:23:42;;-1:-1:-1;7938:23:42;760:3753:1;-1:-1:-1;760:3753:1;;;;;;-1:-1:-1;760:3753:1;;;;;-1:-1:-1;760:3753:1;;;;-1:-1:-1;;;;;760:3753:1;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816343e1da3314610b2a575080634f1ef2861461071957806352d1902d1461067a5780637a9e5e4b146105a35780637d155528146105505780638fb36037146104bd578063968e48cf1461046d5780639f30b60f14610447578063ad3cb1cc146103e4578063bf7e214f14610392578063c4d66de8146100f45763f520d4eb146100a0575f80fd5b346100f0575f6003193601126100f057602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5f80fd5b346100f05760206003193601126100f05761010d610d7b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16159167ffffffffffffffff82168015908161038a575b6001149081610380575b159081610377575b5061034f57818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00556102fa575b506101d06113df565b6101d86113df565b6101e06113df565b6101e86113df565b6101f181611334565b6101f96113df565b167fffffffffffffffffffffffff00000000000000000000000000000000000000007fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005416177fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa005561026757005b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055836101c7565b7ff92ee8a9000000000000000000000000000000000000000000000000000000005f5260045ffd5b9050158461015e565b303b159150610156565b84915061014c565b346100f0575f6003193601126100f057602073ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416604051908152f35b346100f0575f6003193601126100f057610443604051610405604082610e03565b600581527f352e302e300000000000000000000000000000000000000000000000000000006020820152604051918291602083526020830190610c1c565b0390f35b346100f05761044361046161045b36610e7e565b90610fb1565b60405191829182610c5f565b346100f0575f6003193601126100f057602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100f0575f6003193601126100f0577ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005460a01c60ff16156105485760207f8fb36037000000000000000000000000000000000000000000000000000000005b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b60205f61051e565b346100f05760206003193601126100f05761044361046161056f610d7b565b6040519073ffffffffffffffffffffffffffffffffffffffff811660208301526020825261059e604083610e03565b610fb1565b346100f05760206003193601126100f0576105bc610d7b565b73ffffffffffffffffffffffffffffffffffffffff7ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416330361064e57803b1561060c5761060a90611334565b005b73ffffffffffffffffffffffffffffffffffffffff907fc2f31e5e000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b7f068ca9d8000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b346100f0575f6003193601126100f05773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036106f15760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b7fe07c8dba000000000000000000000000000000000000000000000000000000005f5260045ffd5b61072236610e7e565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803014908115610ae8575b506106f1576044604073ffffffffffffffffffffffffffffffffffffffff7fb8e950798a2a06a6f5727a94041b193569f4f67d69a0de3cf866d93822e7fa0054168151928380927fd1f856ee0000000000000000000000000000000000000000000000000000000082525f60048301523360248301525afa908115610add575f91610a90575b5015610a0c5773ffffffffffffffffffffffffffffffffffffffff8216916040517f52d1902d000000000000000000000000000000000000000000000000000000008152602081600481875afa5f91816109d8575b5061087057837f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8592036109ad5750813b1561098257807fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2815115610951575f8083602061060a95519101845af461094b610f82565b91611436565b50503461095a57005b7fb398979f000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f4c9c8ce3000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7faa1d49a4000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091506020813d602011610a04575b816109f460209383610e03565b810103126100f05751908561083f565b3d91506109e7565b60846040517f6317e35f00000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201527f6f6e2e00000000000000000000000000000000000000000000000000000000006064820152fd5b90506040813d604011610ad5575b81610aab60409383610e03565b810103126100f05780519081151582036100f0576020015163ffffffff8116036100f057836107ea565b3d9150610a9e565b6040513d5f823e3d90fd5b905073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141583610764565b346100f05760206003193601126100f05760043580602083015260208252610b53604083610e03565b604051907f6352211e000000000000000000000000000000000000000000000000000000008252600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa908115610add575f91610bd9575b6104436104618484610fb1565b90506020813d602011610c14575b81610bf460209383610e03565b810103126100f05761044391610c0c61046192610f08565b915091610bcc565b3d9150610be7565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080948051918291828752018686015e5f8582860101520116010190565b602081016020825282518091526040820190602060408260051b8501019401925f905b828210610c9157505050505090565b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08282030185526020865173ffffffffffffffffffffffffffffffffffffffff8151168352015190604060208201528151604082015273ffffffffffffffffffffffffffffffffffffffff60208301511660608201526040820151916004831015610d4e57610d418260c0606060209594600197608088970152015191608060a08201520190610c1c565b9701950193920190610c82565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100f057565b6040810190811067ffffffffffffffff821117610dba57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6080810190811067ffffffffffffffff821117610dba57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610dba57604052565b67ffffffffffffffff8111610dba57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9060406003198301126100f05760043573ffffffffffffffffffffffffffffffffffffffff811681036100f0579160243567ffffffffffffffff81116100f057816023820112156100f057806004013590610ed882610e44565b92610ee66040519485610e03565b828452602483830101116100f057815f92602460209301838601378301015290565b519073ffffffffffffffffffffffffffffffffffffffff821682036100f057565b67ffffffffffffffff8111610dba5760051b60200190565b8051821015610f555760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b3d15610fac573d90610f9382610e44565b91610fa16040519384610e03565b82523d5f602084013e565b606090565b9073ffffffffffffffffffffffffffffffffffffffff604051927f591b43c50000000000000000000000000000000000000000000000000000000084521660048301525f8260248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215610add575f92611299575b508151917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061108761107185610f29565b9461107f6040519687610e03565b808652610f29565b015f5b8181106112575750508051905f5b8281106110a6575050505090565b73ffffffffffffffffffffffffffffffffffffffff6110c58284610f41565b5116905f8060405160208101907fa3937111000000000000000000000000000000000000000000000000000000008252602060248201526111398161110d604482018c610c1c565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610e03565b5190855afa91611147610f82565b921561124d578251830160208101936020818303126100f057602081015167ffffffffffffffff81116100f0570190608090829003126100f0576040519061118e82610de7565b602081015182526111a160408201610f08565b6020830152606081015160048110156100f0576040830152608081015167ffffffffffffffff81116100f05760209101019380601f860112156100f05784516111e981610e44565b916111f76040519384610e03565b818352602082880101116100f0576020815f9282600199018386015e8301015260608201526040519161122983610d9e565b8252602082015261123a8288610f41565b526112458187610f41565b505b01611098565b5060019150611247565b60209060405161126681610d9e565b5f815260405161127581610de7565b5f81525f848201525f6040820152606080820152838201528282880101520161108a565b9091503d805f833e6112ab8183610e03565b8101906020818303126100f05780519067ffffffffffffffff82116100f057019080601f830112156100f05781516112e281610f29565b926112f06040519485610e03565b81845260208085019260051b8201019283116100f057602001905b82821061131c57505050905f611040565b6020809161132984610f08565b81520191019061130b565b602073ffffffffffffffffffffffffffffffffffffffff7f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9216807fffffffffffffffffffffffff00000000000000000000000000000000000000007ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a005416177ff3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a0055604051908152a1565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561140e57565b7fd7e6bcf8000000000000000000000000000000000000000000000000000000005f5260045ffd5b90611473575080511561144b57805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f5260045ffd5b815115806114c6575b611484575090565b73ffffffffffffffffffffffffffffffffffffffff907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b1561147c56fea2646970667358221220d01642bd5465c48d5275e079340316ddce23810aa58aff30674f480b8a89cc7d64736f6c634300081a0033",
    "sourceMap": "760:3753:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;760:3753:1;;;;;;;;;1085:48;760:3753;;;;;;;;;;;;;-1:-1:-1;;760:3753:1;;;;;;;:::i;:::-;8837:64:42;760:3753:1;;;;;;4301:16:42;760:3753:1;;;;4726:16:42;;:34;;;;760:3753:1;4805:1:42;4790:16;:50;;;;760:3753:1;4855:13:42;:30;;;;760:3753:1;4851:91:42;;;760:3753:1;;4805:1:42;760:3753:1;;;;;8837:64:42;760:3753:1;4979:67:42;;760:3753:1;6893:76:42;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;2222:16:41;;;:::i;:::-;6893:76:42;;:::i;:::-;760:3753:1;;3298:62:95;760:3753:1;;;3298:62:95;760:3753:1;5066:101:42;;760:3753:1;5066:101:42;760:3753:1;8837:64:42;760:3753:1;;8837:64:42;760:3753:1;5142:14:42;760:3753:1;;;4805:1:42;760:3753:1;;5142:14:42;760:3753:1;4979:67:42;760:3753:1;;;;8837:64:42;760:3753:1;4979:67:42;;;4851:91;4908:23;760:3753:1;4908:23:42;760:3753:1;;4908:23:42;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:42;;4726:34;;;-1:-1:-1;4726:34:42;;760:3753:1;;;;;-1:-1:-1;;760:3753:1;;;;;;;1782:71:41;760:3753:1;;;;;;;;;;;;;-1:-1:-1;;760:3753:1;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;760:3753:1;;;;;;;;;948:65;760:3753;;;;;;;;;-1:-1:-1;;760:3753:1;;;;;1782:71:41;760:3753:1;;;;;4698:71:41;;;760:3753:1;;4698:71:41;760:3753:1;;;;;;;;4698:71:41;760:3753:1;;4698:71:41;;760:3753:1;;;;;-1:-1:-1;;760:3753:1;;;;;;2477:43;760:3753;;:::i;:::-;;;;;;;;2442:18;;760:3753;;2442:18;;;760:3753;2442:18;;:::i;:::-;2477:43;:::i;760:3753::-;;;;;-1:-1:-1;;760:3753:1;;;;;;;:::i;:::-;;1782:71:41;760:3753:1;;966:10:44;4258:21:41;4254:92;;4359:24;;:29;4355:110;;4488:12;;;:::i;:::-;760:3753:1;4355:110:41;760:3753:1;4411:43:41;;760:3753:1;4411:43:41;760:3753:1;;;;;4411:43:41;4254:92;4302:33;760:3753:1;4302:33:41;966:10:44;760:3753:1;;;;4302:33:41;760:3753:1;;;;;-1:-1:-1;;760:3753:1;;;;;;5115:6:43;760:3753:1;5106:4:43;5098:23;5094:145;;760:3753:1;;;811:66:56;760:3753:1;;;5094:145:43;5199:29;760:3753:1;5199:29:43;760:3753:1;;5199:29:43;760:3753:1;;;;:::i;:::-;;4692:6:43;760:3753:1;4683:4:43;;4675:23;:120;;;;;760:3753:1;4658:251:43;;;3061:30:95;760:3753:1;;3298:62:95;760:3753:1;;;;3061:30:95;;;;760:3753:1;3061:30:95;;760:3753:1;;3061:30:95;;760:3753:1;1896:10:95;760:3753:1;;;;3061:30:95;;;;;;;760:3753:1;3061:30:95;;;760:3753:1;1872:35:95;;1868:140;;760:3753:1;;;;;;;6156:52:43;;760:3753:1;6156:52:43;760:3753:1;6156:52:43;;;;760:3753:1;;6156:52:43;;;760:3753:1;-1:-1:-1;6152:437:43;;6518:60;;760:3753:1;6518:60:43;760:3753:1;;;;6518:60:43;6152:437;6250:40;811:66:56;6250:40:43;;;6246:120;;1748:29:56;;;:34;1744:119;;760:3753:1;;811:66:56;760:3753:1;;;811:66:56;760:3753:1;2407:36:56;760:3753:1;2407:36:56;;760:3753:1;;2458:15:56;:11;;760:3753:1;4049:25:63;;760:3753:1;4091:55:63;4049:25;;;;;;;;;:::i;:::-;4091:55;;:::i;2454:148:56:-;6163:9;;;6159:70;;760:3753:1;6159:70:56;6199:19;760:3753:1;6199:19:56;760:3753:1;;6199:19:56;1744:119;1805:47;760:3753:1;1805:47:56;760:3753:1;;;;1805:47:56;6246:120:43;6317:34;760:3753:1;6317:34:43;760:3753:1;;;;6317:34:43;6156:52;;;;760:3753:1;6156:52:43;;760:3753:1;6156:52:43;;;;;;760:3753:1;6156:52:43;;;:::i;:::-;;;760:3753:1;;;;;6156:52:43;;;;;;;-1:-1:-1;6156:52:43;;1868:140:95;1930:67;760:3753:1;;1930:67:95;;;760:3753:1;;1930:67:95;;520:1:93;;760:3753:1;520:1:93;;760:3753:1;520:1:93;3061:30:95;760:3753:1;;520:1:93;;;;;;1930:67:95;3061:30;;;760:3753:1;3061:30:95;;760:3753:1;3061:30:95;;;;;;760:3753:1;3061:30:95;;;:::i;:::-;;;760:3753:1;;;;;;;;;;;;;;;;;;;;;;;3061:30:95;;;;;;-1:-1:-1;3061:30:95;;;760:3753:1;;;;;;;;;4675:120:43;760:3753:1;;;811:66:56;760:3753:1;;4753:42:43;;4675:120;;;760:3753:1;;;;;-1:-1:-1;;760:3753:1;;;;;;;2830:19;760:3753;2830:19;;760:3753;;2830:19;;;760:3753;2830:19;;:::i;:::-;760:3753;;2876:32;760:3753;2876:32;;760:3753;2876:32;;760:3753;;2876:15;:32;:15;760:3753;2876:15;760:3753;2876:32;;;;;;;760:3753;2876:32;;;760:3753;;2925:43;;;;:::i;2876:32::-;;;760:3753;2876:32;;760:3753;2876:32;;;;;;760:3753;2876:32;;;:::i;:::-;;;760:3753;;;;;;;2925:43;760:3753;;:::i;:::-;2876:32;;;;;;;;-1:-1:-1;2876:32:1;;760:3753;;;;;;;;;;;;;;;;;;;;-1:-1:-1;760:3753:1;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;760:3753:1;;;;;-1:-1:-1;760:3753:1;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;760:3753:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;760:3753:1;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;760:3753:1;;;;:::o;:::-;;;:::o;3183:940::-;;760:3753;;;3360:54;760:3753;3360:54;;760:3753;3360:54;;;760:3753;-1:-1:-1;3360:24:1;:54;:24;760:3753;3360:24;760:3753;3360:54;;;;;;;-1:-1:-1;3360:54:1;;;3183:940;760:3753;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;-1:-1:-1;760:3753:1;;;;;;;;;;3559:13;-1:-1:-1;3574:24:1;;;;;;4104:12;;;;3183:940;:::o;3600:20::-;760:3753;3660:11;;;;:::i;:::-;760:3753;;;-1:-1:-1;760:3753:1;;;;3753:48;;;;;;760:3753;3360:54;3753:48;;760:3753;3753:48;760:3753;;;;;;;:::i;:::-;3753:48;760:3753;3753:48;;;;;;:::i;:::-;3853:34;;;;;;;;:::i;:::-;3905:8;;3901:22;;760:3753;;3978:29;;760:3753;3978:29;;760:3753;;;;;;;;;3978:29;;760:3753;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;3360:54;760:3753;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;760:3753:1;;884:1:90;760:3753:1;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4032:51;;760:3753;4021:62;;;;:::i;:::-;;;;;;:::i;:::-;;3559:13;760:3753;3559:13;;3901:22;3915:8;884:1:90;3915:8:1;;;;760:3753;;;;;;;;:::i;:::-;-1:-1:-1;760:3753:1;;;;;;;:::i;:::-;-1:-1:-1;760:3753:1;;-1:-1:-1;760:3753:1;;;;-1:-1:-1;760:3753:1;;;;;;;;;;;;;;;;;;;;;;3360:54;;;;;;-1:-1:-1;3360:54:1;;;;;;:::i;:::-;;;760:3753;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:54;;;;;;;760:3753;;;;;;;:::i;:::-;;;;;;;;;4964:220:41;760:3753:1;;5147:30:41;4964:220;760:3753:1;;;1782:71:41;760:3753:1;;;1782:71:41;760:3753:1;;;;;;5147:30:41;4964:220::o;7084:141:42:-;760:3753:1;8837:64:42;760:3753:1;;;;7150:18:42;7146:73;;7084:141::o;7146:73::-;7191:17;-1:-1:-1;7191:17:42;;-1:-1:-1;7191:17:42;4421:582:63;;4593:8;;-1:-1:-1;760:3753:1;;5674:21:63;:17;;5799:158;;;;;;5670:354;5994:19;5694:1;5994:19;;5694:1;5994:19;4589:408;760:3753:1;;4841:22:63;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;760:3753:1;4917:24:63;;4862:1;4917:24;760:3753:1;4917:24:63;760:3753:1;;4862:1:63;4917:24;4841:49;4867:18;;;:23;4841:49;",
    "linkReferences": {},
    "immutableReferences": {
      "316": [
        { "start": 1177, "length": 32 },
        { "start": 4112, "length": 32 }
      ],
      "320": [
        { "start": 204, "length": 32 },
        { "start": 2972, "length": 32 }
      ],
      "40433": [
        { "start": 1697, "length": 32 },
        { "start": 1849, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "ASSET_OWNERSHIP()": "f520d4eb",
    "RIGHTS_POLICY_AUTHORIZER()": "968e48cf",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "authority()": "bf7e214f",
    "getAvailablePoliciesTerms(address,bytes)": "9f30b60f",
    "getPoliciesTerms(address)": "7d155528",
    "getPoliciesTerms(uint256)": "43e1da33",
    "initialize(address)": "c4d66de8",
    "isConsumingScheduledOp()": "8fb36037",
    "proxiableUUID()": "52d1902d",
    "setAuthority(address)": "7a9e5e4b",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rightsPolicyAuthorizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetOwnership\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AccessManagedInvalidAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"AccessManagedRequiredDelay\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"AccessManagedUnauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"InvalidUnauthorizedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSET_OWNERSHIP\",\"outputs\":[{\"internalType\":\"contract IAssetOwnership\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RIGHTS_POLICY_AUTHORIZER\",\"outputs\":[{\"internalType\":\"contract IRightsPolicyAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"criteria\",\"type\":\"bytes\"}],\"name\":\"getAvailablePoliciesTerms\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"enum T.RateBasis\",\"name\":\"rateBasis\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct T.Terms\",\"name\":\"terms\",\"type\":\"tuple\"}],\"internalType\":\"struct PoliciesAgg.PolicyTerms[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getPoliciesTerms\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"enum T.RateBasis\",\"name\":\"rateBasis\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct T.Terms\",\"name\":\"terms\",\"type\":\"tuple\"}],\"internalType\":\"struct PoliciesAgg.PolicyTerms[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getPoliciesTerms\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"policy\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"enum T.RateBasis\",\"name\":\"rateBasis\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct T.Terms\",\"name\":\"terms\",\"type\":\"tuple\"}],\"internalType\":\"struct PoliciesAgg.PolicyTerms[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accessManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isConsumingScheduledOp\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidUnauthorizedOperation(string)\":[{\"details\":\"Error thrown when an unauthorized operation is attempted.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"AuthorityUpdated(address)\":{\"details\":\"Authority that manages this contract was updated.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"authority()\":{\"details\":\"Returns the current authority.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getAvailablePoliciesTerms(address,bytes)\":{\"params\":{\"criteria\":\"Encoded data for policy evaluation.\",\"holder\":\"Address of the rights holder.\"}},\"getPoliciesTerms(address)\":{\"params\":{\"holder\":\"The address of the rights holder whose policies are being queried.\"}},\"getPoliciesTerms(uint256)\":{\"params\":{\"assetId\":\"The unique identifier of the asset whose policies are being queried.\"}},\"initialize(address)\":{\"details\":\"Sets up the contract for usage.\",\"params\":{\"accessManager\":\"Address of the Access Manager contract used for permission handling.\"}},\"isConsumingScheduledOp()\":{\"details\":\"Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"setAuthority(address)\":{\"details\":\"Transfers control to a new authority. The caller must be the current authority.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"ASSET_OWNERSHIP\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"RIGHTS_POLICY_AUTHORIZER\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAvailablePoliciesTerms(address,bytes)\":{\"notice\":\"Retrieves all available policies for a holder matching specific criteria.\"},\"getPoliciesTerms(address)\":{\"notice\":\"Retrieves all policies that apply to the entirety of a holder's content.\"},\"getPoliciesTerms(uint256)\":{\"notice\":\"Retrieves all policies that govern operations on a specific asset.\"},\"initialize(address)\":{\"notice\":\"Initializes the proxy state.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aggregation/PoliciesAgg.sol\":\"PoliciesAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@account-abstraction/=node_modules/@account-abstraction/\",\":@ethereum-attestation-service/=node_modules/@ethereum-attestation-service/\",\":@ethsign/=node_modules/@ethsign/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@synaps3/=node_modules/@synaps3/types/contracts/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"contracts/aggregation/PoliciesAgg.sol\":{\"keccak256\":\"0xfea1e271fc8e2a5d17be8f00de5fe301829e0bfb6c09d032a968e75b1ee5e737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61ff4b2a0ab158276a428a2cc496c93d63ad99c72095b0c97eecbfeaecab3243\",\"dweb:/ipfs/QmfAZJE4tpdjK37bWmA1Ji9XPEuHkd5rykFBt4CbQjwYcP\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol\":{\"keccak256\":\"0x89017bb026363fdc9fdc4b7c995aaf83e4c5af5c022eafa2e96352f843297373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dff6e61ba53c87ad06cbdddb9ff36dec215a41beff91746a80f4a9a32d37f447\",\"dweb:/ipfs/QmUm6hznJTihCTaRx7TXHXKbgyuDEEgehyRzi7TAs8GLvB\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts/access/manager/AuthorityUtils.sol\":{\"keccak256\":\"0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e\",\"dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol\":{\"keccak256\":\"0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694\",\"dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol\":{\"keccak256\":\"0x9be2d08a326515805bc9cf6315b7953f8d1ebe88abf48c2d645fb1fa8211a0e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e750d656e37efaefbb2300051ec2c4c725db266c5ff89bc985f7ecb8d214c4f4\",\"dweb:/ipfs/QmT51FsZes2n2nrLLh3d8YkBYKY43CtwScZxixcLGzL9r6\"]},\"node_modules/@openzeppelin/contracts/access/manager/IAuthority.sol\":{\"keccak256\":\"0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c\",\"dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"node_modules/@synaps3/types/contracts/core/interfaces/access/IAccessManager.sol\":{\"keccak256\":\"0x839438bf1e2e7432db801b4734831297e075cb120cf91864fb9c52c3ddccbf0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8008d58c268d046c9bcd9ac5cd4244a666688604bf6be9b243610e041a3c285e\",\"dweb:/ipfs/QmXGXhm8YhdNToMzmAq7aLXQv2vXPkhrTFTwaAYhnhrJkJ\"]},\"node_modules/@synaps3/types/contracts/core/interfaces/assets/IAssetOwnership.sol\":{\"keccak256\":\"0x266376c23b74506b9b8d9ed90f1bc310cc7330b8d3e6ca6e6eb4021b3668aa18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3614788ae9f18a9b472baaf6bb6dc1abe3d78a397f791e30efbe4f1965b3e025\",\"dweb:/ipfs/QmPhLLbi88yH9NxhV18xutazHAYm2HSaEpSoTwR6v5BiDB\"]},\"node_modules/@synaps3/types/contracts/core/interfaces/policies/IPolicy.sol\":{\"keccak256\":\"0x6bb2e4f5f93d957e5fc351e98155c0c038da3a31dd125e22e06f8cca0d0aa332\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cb7da10029a309b52c9df25d9d59c3e0404faa156716d0805d540d0a3518915\",\"dweb:/ipfs/QmXgxHWuaQXRnBgAPiPA4hkWcHpcwLgg4d672gTkP793fd\"]},\"node_modules/@synaps3/types/contracts/core/interfaces/rights/IRightsPolicyAuthorizer.sol\":{\"keccak256\":\"0x7788d64a9d12536ad06115d72faef14dfc131def88bc15e8901d64d67f231419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecb519a42d82d23498f17644216cd4041b87ee126c2b471f05418af2bb6ae130\",\"dweb:/ipfs/QmTLZw15MB1aXZCvbXfvDozqPm29c3CqiSsgSdMpXEM3o4\"]},\"node_modules/@synaps3/types/contracts/core/libraries/LoopOps.sol\":{\"keccak256\":\"0x882f7c8f53621d83eaa7e8277379add8f40f8fb0352e6c5c5b8fae4f39c21cf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8638cb48fb32ea42b167b909b3d5fecd2ba14c7affdda956d9d5f547636789\",\"dweb:/ipfs/Qmdc5wXqQVCN91ussACQwCi2k6nZaCfsFC6g2nvL7hnKNv\"]},\"node_modules/@synaps3/types/contracts/core/primitives/Constants.sol\":{\"keccak256\":\"0xd3dac9b10f88534046b904f281588f0293fa603ec5c68ffeeaf64eec88ebe65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9dddce59781d9a41c012aeff533cca898b1553924f09edf192d0f534f4cc4a1\",\"dweb:/ipfs/QmdKPss1KNAneMGaTXqQSWraN1s6MDCHkMgetn5BVxzXn3\"]},\"node_modules/@synaps3/types/contracts/core/primitives/Types.sol\":{\"keccak256\":\"0x9c0dbb09ad90b98817849666e45a70c371676cbe187709f76021bfd6f7d0bb57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb5dafd14005606dd486c8ea5aea374160a59224c03b9687a504360f1c5d190a\",\"dweb:/ipfs/QmVvn3SLREtxwehgxkGg1QE1eMw5QRk5R6kG8qyGujbCTf\"]},\"node_modules/@synaps3/types/contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol\":{\"keccak256\":\"0x5d99ec9405886a20eeff6ea243c1d94b5994a474338b866d74ffa9bbfa9473f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1de4b84ddb631eee3d1eb0f921f0d0d20be3f6e808b8b2a21082436816884095\",\"dweb:/ipfs/QmaKZ938AabVXewdFBVtV8SFD4eWJq59AsdoV3aBMY7cmB\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rightsPolicyAuthorizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "assetOwnership",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authority",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AccessManagedInvalidAuthority"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "uint32", "name": "delay", "type": "uint32" }
          ],
          "type": "error",
          "name": "AccessManagedRequiredDelay"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "AccessManagedUnauthorized"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ],
          "type": "error",
          "name": "InvalidUnauthorizedOperation"
        },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "authority",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ASSET_OWNERSHIP",
          "outputs": [
            {
              "internalType": "contract IAssetOwnership",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RIGHTS_POLICY_AUTHORIZER",
          "outputs": [
            {
              "internalType": "contract IRightsPolicyAuthorizer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "holder", "type": "address" },
            { "internalType": "bytes", "name": "criteria", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAvailablePoliciesTerms",
          "outputs": [
            {
              "internalType": "struct PoliciesAgg.PolicyTerms[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "policy",
                  "type": "address"
                },
                {
                  "internalType": "struct T.Terms",
                  "name": "terms",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "enum T.RateBasis",
                      "name": "rateBasis",
                      "type": "uint8"
                    },
                    {
                      "internalType": "string",
                      "name": "uri",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assetId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoliciesTerms",
          "outputs": [
            {
              "internalType": "struct PoliciesAgg.PolicyTerms[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "policy",
                  "type": "address"
                },
                {
                  "internalType": "struct T.Terms",
                  "name": "terms",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "enum T.RateBasis",
                      "name": "rateBasis",
                      "type": "uint8"
                    },
                    {
                      "internalType": "string",
                      "name": "uri",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "holder", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoliciesTerms",
          "outputs": [
            {
              "internalType": "struct PoliciesAgg.PolicyTerms[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "policy",
                  "type": "address"
                },
                {
                  "internalType": "struct T.Terms",
                  "name": "terms",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "enum T.RateBasis",
                      "name": "rateBasis",
                      "type": "uint8"
                    },
                    {
                      "internalType": "string",
                      "name": "uri",
                      "type": "string"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "accessManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isConsumingScheduledOp",
          "outputs": [
            { "internalType": "bytes4", "name": "", "type": "bytes4" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authority()": { "details": "Returns the current authority." },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "getAvailablePoliciesTerms(address,bytes)": {
            "params": {
              "criteria": "Encoded data for policy evaluation.",
              "holder": "Address of the rights holder."
            }
          },
          "getPoliciesTerms(address)": {
            "params": {
              "holder": "The address of the rights holder whose policies are being queried."
            }
          },
          "getPoliciesTerms(uint256)": {
            "params": {
              "assetId": "The unique identifier of the asset whose policies are being queried."
            }
          },
          "initialize(address)": {
            "details": "Sets up the contract for usage.",
            "params": {
              "accessManager": "Address of the Access Manager contract used for permission handling."
            }
          },
          "isConsumingScheduledOp()": {
            "details": "Returns true only in the context of a delayed restricted call, at the moment that the scheduled operation is being consumed. Prevents denial of service for delayed restricted calls in the case that the contract performs attacker controlled calls."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "setAuthority(address)": {
            "details": "Transfers control to a new authority. The caller must be the current authority."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getAvailablePoliciesTerms(address,bytes)": {
            "notice": "Retrieves all available policies for a holder matching specific criteria."
          },
          "getPoliciesTerms(address)": {
            "notice": "Retrieves all policies that apply to the entirety of a holder's content."
          },
          "getPoliciesTerms(uint256)": {
            "notice": "Retrieves all policies that govern operations on a specific asset."
          },
          "initialize(address)": { "notice": "Initializes the proxy state." }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@account-abstraction/=node_modules/@account-abstraction/",
        "@ethereum-attestation-service/=node_modules/@ethereum-attestation-service/",
        "@ethsign/=node_modules/@ethsign/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@synaps3/=node_modules/@synaps3/types/contracts/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "solady/=lib/solady/src/"
      ],
      "optimizer": { "enabled": true, "runs": 20000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "contracts/aggregation/PoliciesAgg.sol": "PoliciesAgg"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/aggregation/PoliciesAgg.sol": {
        "keccak256": "0xfea1e271fc8e2a5d17be8f00de5fe301829e0bfb6c09d032a968e75b1ee5e737",
        "urls": [
          "bzz-raw://61ff4b2a0ab158276a428a2cc496c93d63ad99c72095b0c97eecbfeaecab3243",
          "dweb:/ipfs/QmfAZJE4tpdjK37bWmA1Ji9XPEuHkd5rykFBt4CbQjwYcP"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol": {
        "keccak256": "0x89017bb026363fdc9fdc4b7c995aaf83e4c5af5c022eafa2e96352f843297373",
        "urls": [
          "bzz-raw://dff6e61ba53c87ad06cbdddb9ff36dec215a41beff91746a80f4a9a32d37f447",
          "dweb:/ipfs/QmUm6hznJTihCTaRx7TXHXKbgyuDEEgehyRzi7TAs8GLvB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27",
        "urls": [
          "bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e",
          "dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/AuthorityUtils.sol": {
        "keccak256": "0xb3875997b0d8705e29aa20fee88e1dfef93df438794ae1ad8ba2eb016a4dd4e4",
        "urls": [
          "bzz-raw://f9e50192f7c7a22829cacfbd14221c3a3d869da64a2333f330d527777f275d9e",
          "dweb:/ipfs/QmaxMQb26ggDmW3SDwJ8y6hRC8dbWbLMpUZBVzZtXqzycJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAccessManaged.sol": {
        "keccak256": "0xaba93d42cd70e1418782951132d97b31ddce5f50ad81090884b6d0e41caac9d6",
        "urls": [
          "bzz-raw://b110886f83e3e98a11255a3b56790322e8d83e513304dde71299406685fc6694",
          "dweb:/ipfs/QmPwroS7MUUk1EmsvaJqU6aarhQ8ewJtJMg7xxmTsaxZEv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAccessManager.sol": {
        "keccak256": "0x9be2d08a326515805bc9cf6315b7953f8d1ebe88abf48c2d645fb1fa8211a0e2",
        "urls": [
          "bzz-raw://e750d656e37efaefbb2300051ec2c4c725db266c5ff89bc985f7ecb8d214c4f4",
          "dweb:/ipfs/QmT51FsZes2n2nrLLh3d8YkBYKY43CtwScZxixcLGzL9r6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/manager/IAuthority.sol": {
        "keccak256": "0x4cc0766bd7fb7b3bafb70afa2a93b6e313a0baec7a35ad1b57505be7861c1030",
        "urls": [
          "bzz-raw://85871c47ac00d10664b858ef71ecd8b9787c1d313e544ab2c57210c520a3c06c",
          "dweb:/ipfs/QmUMTwojLzURuHftQLzAVuDmib9roj4KwcHCkg3LhZ2AdH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06",
        "urls": [
          "bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c",
          "dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
        "urls": [
          "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
          "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
        "urls": [
          "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
          "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
        "urls": [
          "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
          "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/types/Time.sol": {
        "keccak256": "0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc",
        "urls": [
          "bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6",
          "dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/interfaces/access/IAccessManager.sol": {
        "keccak256": "0x839438bf1e2e7432db801b4734831297e075cb120cf91864fb9c52c3ddccbf0f",
        "urls": [
          "bzz-raw://8008d58c268d046c9bcd9ac5cd4244a666688604bf6be9b243610e041a3c285e",
          "dweb:/ipfs/QmXGXhm8YhdNToMzmAq7aLXQv2vXPkhrTFTwaAYhnhrJkJ"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/interfaces/assets/IAssetOwnership.sol": {
        "keccak256": "0x266376c23b74506b9b8d9ed90f1bc310cc7330b8d3e6ca6e6eb4021b3668aa18",
        "urls": [
          "bzz-raw://3614788ae9f18a9b472baaf6bb6dc1abe3d78a397f791e30efbe4f1965b3e025",
          "dweb:/ipfs/QmPhLLbi88yH9NxhV18xutazHAYm2HSaEpSoTwR6v5BiDB"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/interfaces/policies/IPolicy.sol": {
        "keccak256": "0x6bb2e4f5f93d957e5fc351e98155c0c038da3a31dd125e22e06f8cca0d0aa332",
        "urls": [
          "bzz-raw://0cb7da10029a309b52c9df25d9d59c3e0404faa156716d0805d540d0a3518915",
          "dweb:/ipfs/QmXgxHWuaQXRnBgAPiPA4hkWcHpcwLgg4d672gTkP793fd"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/interfaces/rights/IRightsPolicyAuthorizer.sol": {
        "keccak256": "0x7788d64a9d12536ad06115d72faef14dfc131def88bc15e8901d64d67f231419",
        "urls": [
          "bzz-raw://ecb519a42d82d23498f17644216cd4041b87ee126c2b471f05418af2bb6ae130",
          "dweb:/ipfs/QmTLZw15MB1aXZCvbXfvDozqPm29c3CqiSsgSdMpXEM3o4"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/libraries/LoopOps.sol": {
        "keccak256": "0x882f7c8f53621d83eaa7e8277379add8f40f8fb0352e6c5c5b8fae4f39c21cf4",
        "urls": [
          "bzz-raw://1f8638cb48fb32ea42b167b909b3d5fecd2ba14c7affdda956d9d5f547636789",
          "dweb:/ipfs/Qmdc5wXqQVCN91ussACQwCi2k6nZaCfsFC6g2nvL7hnKNv"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/primitives/Constants.sol": {
        "keccak256": "0xd3dac9b10f88534046b904f281588f0293fa603ec5c68ffeeaf64eec88ebe65e",
        "urls": [
          "bzz-raw://d9dddce59781d9a41c012aeff533cca898b1553924f09edf192d0f534f4cc4a1",
          "dweb:/ipfs/QmdKPss1KNAneMGaTXqQSWraN1s6MDCHkMgetn5BVxzXn3"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/primitives/Types.sol": {
        "keccak256": "0x9c0dbb09ad90b98817849666e45a70c371676cbe187709f76021bfd6f7d0bb57",
        "urls": [
          "bzz-raw://fb5dafd14005606dd486c8ea5aea374160a59224c03b9687a504360f1c5d190a",
          "dweb:/ipfs/QmVvn3SLREtxwehgxkGg1QE1eMw5QRk5R6kG8qyGujbCTf"
        ],
        "license": "MIT"
      },
      "node_modules/@synaps3/types/contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol": {
        "keccak256": "0x5d99ec9405886a20eeff6ea243c1d94b5994a474338b866d74ffa9bbfa9473f0",
        "urls": [
          "bzz-raw://1de4b84ddb631eee3d1eb0f921f0d0d20be3f6e808b8b2a21082436816884095",
          "dweb:/ipfs/QmaKZ938AabVXewdFBVtV8SFD4eWJq59AsdoV3aBMY7cmB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": { "storage": [], "types": {} },
  "ast": {
    "absolutePath": "contracts/aggregation/PoliciesAgg.sol",
    "id": 541,
    "exportedSymbols": {
      "AccessControlledUpgradeable": [48582],
      "IAssetOwnership": [47145],
      "IPolicy": [47548],
      "IRightsPolicyAuthorizer": [47585],
      "Initializable": [40413],
      "LoopOps": [47966],
      "PoliciesAgg": [540],
      "T": [48454],
      "UUPSUpgradeable": [40595]
    },
    "nodeType": "SourceUnit",
    "src": "32:4482:1",
    "nodes": [
      {
        "id": 287,
        "nodeType": "PragmaDirective",
        "src": "32:23:1",
        "nodes": [],
        "literals": ["solidity", "0.8", ".26"]
      },
      {
        "id": 289,
        "nodeType": "ImportDirective",
        "src": "57:98:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 40414,
        "symbolAliases": [
          {
            "foreign": {
              "id": 288,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40413,
              "src": "66:13:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 291,
        "nodeType": "ImportDirective",
        "src": "156:102:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 40596,
        "symbolAliases": [
          {
            "foreign": {
              "id": 290,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40595,
              "src": "165:15:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 293,
        "nodeType": "ImportDirective",
        "src": "260:86:1",
        "nodes": [],
        "absolutePath": "node_modules/@synaps3/types/contracts/core/interfaces/assets/IAssetOwnership.sol",
        "file": "@synaps3/core/interfaces/assets/IAssetOwnership.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 47146,
        "symbolAliases": [
          {
            "foreign": {
              "id": 292,
              "name": "IAssetOwnership",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47145,
              "src": "269:15:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 295,
        "nodeType": "ImportDirective",
        "src": "347:115:1",
        "nodes": [],
        "absolutePath": "node_modules/@synaps3/types/contracts/core/primitives/upgradeable/AccessControlledUpgradeable.sol",
        "file": "@synaps3/core/primitives/upgradeable/AccessControlledUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 48583,
        "symbolAliases": [
          {
            "foreign": {
              "id": 294,
              "name": "AccessControlledUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48582,
              "src": "356:27:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 297,
        "nodeType": "ImportDirective",
        "src": "463:102:1",
        "nodes": [],
        "absolutePath": "node_modules/@synaps3/types/contracts/core/interfaces/rights/IRightsPolicyAuthorizer.sol",
        "file": "@synaps3/core/interfaces/rights/IRightsPolicyAuthorizer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 47586,
        "symbolAliases": [
          {
            "foreign": {
              "id": 296,
              "name": "IRightsPolicyAuthorizer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47585,
              "src": "472:23:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 299,
        "nodeType": "ImportDirective",
        "src": "567:72:1",
        "nodes": [],
        "absolutePath": "node_modules/@synaps3/types/contracts/core/interfaces/policies/IPolicy.sol",
        "file": "@synaps3/core/interfaces/policies/IPolicy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 47549,
        "symbolAliases": [
          {
            "foreign": {
              "id": 298,
              "name": "IPolicy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47548,
              "src": "576:7:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 301,
        "nodeType": "ImportDirective",
        "src": "640:62:1",
        "nodes": [],
        "absolutePath": "node_modules/@synaps3/types/contracts/core/libraries/LoopOps.sol",
        "file": "@synaps3/core/libraries/LoopOps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 47967,
        "symbolAliases": [
          {
            "foreign": {
              "id": 300,
              "name": "LoopOps",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47966,
              "src": "649:7:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 303,
        "nodeType": "ImportDirective",
        "src": "703:55:1",
        "nodes": [],
        "absolutePath": "node_modules/@synaps3/types/contracts/core/primitives/Types.sol",
        "file": "@synaps3/core/primitives/Types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 541,
        "sourceUnit": 48455,
        "symbolAliases": [
          {
            "foreign": {
              "id": 302,
              "name": "T",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48454,
              "src": "712:1:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 540,
        "nodeType": "ContractDefinition",
        "src": "760:3753:1",
        "nodes": [
          {
            "id": 312,
            "nodeType": "UsingForDirective",
            "src": "850:26:1",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 310,
              "name": "LoopOps",
              "nameLocations": ["856:7:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47966,
              "src": "856:7:1"
            },
            "typeName": {
              "id": 311,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "868:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 316,
            "nodeType": "VariableDeclaration",
            "src": "948:65:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 313,
              "nodeType": "StructuredDocumentation",
              "src": "882:61:1",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
            },
            "functionSelector": "968e48cf",
            "mutability": "immutable",
            "name": "RIGHTS_POLICY_AUTHORIZER",
            "nameLocation": "989:24:1",
            "scope": 540,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRightsPolicyAuthorizer_$47585",
              "typeString": "contract IRightsPolicyAuthorizer"
            },
            "typeName": {
              "id": 315,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 314,
                "name": "IRightsPolicyAuthorizer",
                "nameLocations": ["948:23:1"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47585,
                "src": "948:23:1"
              },
              "referencedDeclaration": 47585,
              "src": "948:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRightsPolicyAuthorizer_$47585",
                "typeString": "contract IRightsPolicyAuthorizer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 320,
            "nodeType": "VariableDeclaration",
            "src": "1085:48:1",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 317,
              "nodeType": "StructuredDocumentation",
              "src": "1019:61:1",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
            },
            "functionSelector": "f520d4eb",
            "mutability": "immutable",
            "name": "ASSET_OWNERSHIP",
            "nameLocation": "1118:15:1",
            "scope": 540,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAssetOwnership_$47145",
              "typeString": "contract IAssetOwnership"
            },
            "typeName": {
              "id": 319,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 318,
                "name": "IAssetOwnership",
                "nameLocations": ["1085:15:1"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47145,
                "src": "1085:15:1"
              },
              "referencedDeclaration": 47145,
              "src": "1085:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAssetOwnership_$47145",
                "typeString": "contract IAssetOwnership"
              }
            },
            "visibility": "public"
          },
          {
            "id": 327,
            "nodeType": "StructDefinition",
            "src": "1220:73:1",
            "nodes": [],
            "canonicalName": "PoliciesAgg.PolicyTerms",
            "documentation": {
              "id": 321,
              "nodeType": "StructuredDocumentation",
              "src": "1144:71:1",
              "text": "@notice structure to hold the relationship between policy and terms"
            },
            "members": [
              {
                "constant": false,
                "id": 323,
                "mutability": "mutable",
                "name": "policy",
                "nameLocation": "1257:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 327,
                "src": "1249:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 322,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1249:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 326,
                "mutability": "mutable",
                "name": "terms",
                "nameLocation": "1281:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 327,
                "src": "1273:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Terms_$48443_storage_ptr",
                  "typeString": "struct T.Terms"
                },
                "typeName": {
                  "id": 325,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 324,
                    "name": "T.Terms",
                    "nameLocations": ["1273:1:1", "1275:5:1"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 48443,
                    "src": "1273:7:1"
                  },
                  "referencedDeclaration": 48443,
                  "src": "1273:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Terms_$48443_storage_ptr",
                    "typeString": "struct T.Terms"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PolicyTerms",
            "nameLocation": "1227:11:1",
            "scope": 540,
            "visibility": "public"
          },
          {
            "id": 351,
            "nodeType": "FunctionDefinition",
            "src": "1352:440:1",
            "nodes": [],
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "1420:372:1",
              "nodes": [],
              "statements": [
                {
                  "documentation": "https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680\n https://forum.openzeppelin.com/t/what-does-disableinitializers-function-mean/28730/5",
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 335,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40381,
                      "src": "1620:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:22:1"
                },
                {
                  "expression": {
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 338,
                      "name": "RIGHTS_POLICY_AUTHORIZER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "1652:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRightsPolicyAuthorizer_$47585",
                        "typeString": "contract IRightsPolicyAuthorizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 340,
                          "name": "rightsPolicyAuthorizer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "1703:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 339,
                        "name": "IRightsPolicyAuthorizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47585,
                        "src": "1679:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRightsPolicyAuthorizer_$47585_$",
                          "typeString": "type(contract IRightsPolicyAuthorizer)"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1679:47:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRightsPolicyAuthorizer_$47585",
                        "typeString": "contract IRightsPolicyAuthorizer"
                      }
                    },
                    "src": "1652:74:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRightsPolicyAuthorizer_$47585",
                      "typeString": "contract IRightsPolicyAuthorizer"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:74:1"
                },
                {
                  "expression": {
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 344,
                      "name": "ASSET_OWNERSHIP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "1736:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAssetOwnership_$47145",
                        "typeString": "contract IAssetOwnership"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 346,
                          "name": "assetOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "1770:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 345,
                        "name": "IAssetOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47145,
                        "src": "1754:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAssetOwnership_$47145_$",
                          "typeString": "type(contract IAssetOwnership)"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1754:31:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAssetOwnership_$47145",
                        "typeString": "contract IAssetOwnership"
                      }
                    },
                    "src": "1736:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAssetOwnership_$47145",
                      "typeString": "contract IAssetOwnership"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:49:1"
                }
              ]
            },
            "documentation": {
              "id": 328,
              "nodeType": "StructuredDocumentation",
              "src": "1299:48:1",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "rightsPolicyAuthorizer",
                  "nameLocation": "1372:22:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "1364:30:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "assetOwnership",
                  "nameLocation": "1404:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "1396:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:56:1"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:1"
            },
            "scope": 540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 367,
            "nodeType": "FunctionDefinition",
            "src": "1986:151:1",
            "nodes": [],
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "2048:89:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 359,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40467,
                      "src": "2058:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:24:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 363,
                        "name": "accessManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "2116:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 362,
                      "name": "__AccessControlled_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48517,
                      "src": "2092:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2092:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "2092:38:1"
                }
              ]
            },
            "documentation": {
              "id": 352,
              "nodeType": "StructuredDocumentation",
              "src": "1798:183:1",
              "text": "@notice Initializes the proxy state.\n @dev Sets up the contract for usage.\n @param accessManager Address of the Access Manager contract used for permission handling."
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 357,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 356,
                  "name": "initializer",
                  "nameLocations": ["2036:11:1"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40267,
                  "src": "2036:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2036:11:1"
              }
            ],
            "name": "initialize",
            "nameLocation": "1995:10:1",
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "accessManager",
                  "nameLocation": "2014:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "2006:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:23:1"
            },
            "returnParameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2048:0:1"
            },
            "scope": 540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 390,
            "nodeType": "FunctionDefinition",
            "src": "2321:206:1",
            "nodes": [],
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "2408:119:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [378],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 378,
                      "mutability": "mutable",
                      "name": "criteria",
                      "nameLocation": "2431:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "2418:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 377,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2418:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "2453:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 379,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2442:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2446:6:1",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2442:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2418:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 385,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "2503:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 386,
                        "name": "criteria",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "2511:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 384,
                      "name": "getAvailablePoliciesTerms",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "2477:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes memory) view returns (struct PoliciesAgg.PolicyTerms memory[] memory)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PoliciesAgg.PolicyTerms memory[] memory"
                    }
                  },
                  "functionReturnParameters": 376,
                  "id": 388,
                  "nodeType": "Return",
                  "src": "2470:50:1"
                }
              ]
            },
            "documentation": {
              "id": 368,
              "nodeType": "StructuredDocumentation",
              "src": "2143:173:1",
              "text": "@notice Retrieves all policies that apply to the entirety of a holder's content.\n @param holder The address of the rights holder whose policies are being queried."
            },
            "functionSelector": "7d155528",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoliciesTerms",
            "nameLocation": "2330:16:1",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "2355:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "2347:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2346:16:1"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "2386:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PoliciesAgg.PolicyTerms[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 373,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 372,
                        "name": "PolicyTerms",
                        "nameLocations": ["2386:11:1"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 327,
                        "src": "2386:11:1"
                      },
                      "referencedDeclaration": 327,
                      "src": "2386:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyTerms_$327_storage_ptr",
                        "typeString": "struct PoliciesAgg.PolicyTerms"
                      }
                    },
                    "id": 374,
                    "nodeType": "ArrayTypeName",
                    "src": "2386:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_storage_$dyn_storage_ptr",
                      "typeString": "struct PoliciesAgg.PolicyTerms[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:22:1"
            },
            "scope": 540,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 420,
            "nodeType": "FunctionDefinition",
            "src": "2708:267:1",
            "nodes": [],
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "2796:179:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [401],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "mutability": "mutable",
                      "name": "criteria",
                      "nameLocation": "2819:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "2806:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 400,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2806:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 404,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "2841:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 402,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2830:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2834:6:1",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2830:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2830:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2806:43:1"
                },
                {
                  "assignments": [408],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 408,
                      "mutability": "mutable",
                      "name": "holder",
                      "nameLocation": "2867:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "2859:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2859:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 413,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 411,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "2900:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 409,
                        "name": "ASSET_OWNERSHIP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "2876:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAssetOwnership_$47145",
                          "typeString": "contract IAssetOwnership"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2892:7:1",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42425,
                      "src": "2876:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2859:49:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 415,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "2951:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 416,
                        "name": "criteria",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "2959:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 414,
                      "name": "getAvailablePoliciesTerms",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "2925:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address,bytes memory) view returns (struct PoliciesAgg.PolicyTerms memory[] memory)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2925:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PoliciesAgg.PolicyTerms memory[] memory"
                    }
                  },
                  "functionReturnParameters": 399,
                  "id": 418,
                  "nodeType": "Return",
                  "src": "2918:50:1"
                }
              ]
            },
            "documentation": {
              "id": 391,
              "nodeType": "StructuredDocumentation",
              "src": "2533:170:1",
              "text": "@notice Retrieves all policies that govern operations on a specific asset.\n @param assetId The unique identifier of the asset whose policies are being queried."
            },
            "functionSelector": "43e1da33",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoliciesTerms",
            "nameLocation": "2717:16:1",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "assetId",
                  "nameLocation": "2742:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "2734:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:17:1"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "2774:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PoliciesAgg.PolicyTerms[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 396,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 395,
                        "name": "PolicyTerms",
                        "nameLocations": ["2774:11:1"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 327,
                        "src": "2774:11:1"
                      },
                      "referencedDeclaration": 327,
                      "src": "2774:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyTerms_$327_storage_ptr",
                        "typeString": "struct PoliciesAgg.PolicyTerms"
                      }
                    },
                    "id": 397,
                    "nodeType": "ArrayTypeName",
                    "src": "2774:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_storage_$dyn_storage_ptr",
                      "typeString": "struct PoliciesAgg.PolicyTerms[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2773:22:1"
            },
            "scope": 540,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 529,
            "nodeType": "FunctionDefinition",
            "src": "3183:940:1",
            "nodes": [],
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "3322:801:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [436],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 436,
                      "mutability": "mutable",
                      "name": "policies",
                      "nameLocation": "3349:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 528,
                      "src": "3332:25:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3332:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 435,
                        "nodeType": "ArrayTypeName",
                        "src": "3332:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 439,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "3407:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 437,
                        "name": "RIGHTS_POLICY_AUTHORIZER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "3360:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRightsPolicyAuthorizer_$47585",
                          "typeString": "contract IRightsPolicyAuthorizer"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3385:21:1",
                      "memberName": "getAuthorizedPolicies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47560,
                      "src": "3360:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (address[] memory)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3332:82:1"
                },
                {
                  "assignments": [446],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 446,
                      "mutability": "mutable",
                      "name": "terms",
                      "nameLocation": "3445:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 528,
                      "src": "3424:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct PoliciesAgg.PolicyTerms[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 444,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 443,
                            "name": "PolicyTerms",
                            "nameLocations": ["3424:11:1"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 327,
                            "src": "3424:11:1"
                          },
                          "referencedDeclaration": 327,
                          "src": "3424:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyTerms_$327_storage_ptr",
                            "typeString": "struct PoliciesAgg.PolicyTerms"
                          }
                        },
                        "id": 445,
                        "nodeType": "ArrayTypeName",
                        "src": "3424:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_storage_$dyn_storage_ptr",
                          "typeString": "struct PoliciesAgg.PolicyTerms[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 454,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 451,
                          "name": "policies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "3471:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3480:6:1",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3471:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3453:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct PoliciesAgg.PolicyTerms memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 448,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 447,
                            "name": "PolicyTerms",
                            "nameLocations": ["3457:11:1"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 327,
                            "src": "3457:11:1"
                          },
                          "referencedDeclaration": 327,
                          "src": "3457:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyTerms_$327_storage_ptr",
                            "typeString": "struct PoliciesAgg.PolicyTerms"
                          }
                        },
                        "id": 449,
                        "nodeType": "ArrayTypeName",
                        "src": "3457:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_storage_$dyn_storage_ptr",
                          "typeString": "struct PoliciesAgg.PolicyTerms[]"
                        }
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PoliciesAgg.PolicyTerms memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3424:63:1"
                },
                {
                  "assignments": [456],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "availablePoliciesLen",
                      "nameLocation": "3505:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 528,
                      "src": "3497:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3497:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 459,
                  "initialValue": {
                    "expression": {
                      "id": 457,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "3528:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3537:6:1",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3528:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3497:46:1"
                },
                {
                  "body": {
                    "id": 524,
                    "nodeType": "Block",
                    "src": "3622:472:1",
                    "statements": [
                      {
                        "assignments": [474],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 474,
                            "mutability": "mutable",
                            "name": "policyAddress",
                            "nameLocation": "3644:13:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "3636:21:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 473,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3636:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 478,
                        "initialValue": {
                          "baseExpression": {
                            "id": 475,
                            "name": "policies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "3660:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 477,
                          "indexExpression": {
                            "id": 476,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "3669:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3660:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3636:35:1"
                      },
                      {
                        "assignments": [480],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 480,
                            "mutability": "mutable",
                            "name": "callData",
                            "nameLocation": "3742:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "3729:21:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 479,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3729:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 488,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 483,
                                "name": "IPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47548,
                                "src": "3768:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPolicy_$47548_$",
                                  "typeString": "type(contract IPolicy)"
                                }
                              },
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3776:12:1",
                              "memberName": "resolveTerms",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47541,
                              "src": "3768:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes_calldata_ptr_$returns$_t_struct$_Terms_$48443_memory_ptr_$",
                                "typeString": "function IPolicy.resolveTerms(bytes calldata) view returns (struct T.Terms memory)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 485,
                                  "name": "criteria",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 425,
                                  "src": "3791:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "id": 486,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3790:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_declaration_view$_t_bytes_calldata_ptr_$returns$_t_struct$_Terms_$48443_memory_ptr_$",
                                "typeString": "function IPolicy.resolveTerms(bytes calldata) view returns (struct T.Terms memory)"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 481,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3753:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3757:10:1",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "3753:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3753:48:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3729:72:1"
                      },
                      {
                        "assignments": [490, 492],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 490,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3821:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "3816:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 489,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3816:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 492,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "3843:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "3830:19:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 491,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3830:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 497,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 495,
                              "name": "callData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "3878:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 493,
                              "name": "policyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3853:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3867:10:1",
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "3853:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3853:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3815:72:1"
                      },
                      {
                        "condition": {
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3905:8:1",
                          "subExpression": {
                            "id": 498,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "3906:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 501,
                        "nodeType": "IfStatement",
                        "src": "3901:22:1",
                        "trueBody": {
                          "id": 500,
                          "nodeType": "Continue",
                          "src": "3915:8:1"
                        }
                      },
                      {
                        "assignments": [506],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 506,
                            "mutability": "mutable",
                            "name": "term",
                            "nameLocation": "3971:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "3956:19:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Terms_$48443_memory_ptr",
                              "typeString": "struct T.Terms"
                            },
                            "typeName": {
                              "id": 505,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 504,
                                "name": "T.Terms",
                                "nameLocations": ["3956:1:1", "3958:5:1"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 48443,
                                "src": "3956:7:1"
                              },
                              "referencedDeclaration": 48443,
                              "src": "3956:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Terms_$48443_storage_ptr",
                                "typeString": "struct T.Terms"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 514,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 509,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "3989:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "expression": {
                                    "id": 510,
                                    "name": "T",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48454,
                                    "src": "3998:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_T_$48454_$",
                                      "typeString": "type(library T)"
                                    }
                                  },
                                  "id": 511,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4000:5:1",
                                  "memberName": "Terms",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48443,
                                  "src": "3998:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Terms_$48443_storage_ptr_$",
                                    "typeString": "type(struct T.Terms storage pointer)"
                                  }
                                }
                              ],
                              "id": 512,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3997:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Terms_$48443_storage_ptr_$",
                                "typeString": "type(struct T.Terms storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_Terms_$48443_storage_ptr_$",
                                "typeString": "type(struct T.Terms storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 507,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3978:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3982:6:1",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3978:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3978:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Terms_$48443_memory_ptr",
                            "typeString": "struct T.Terms memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3956:51:1"
                      },
                      {
                        "expression": {
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 515,
                              "name": "terms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "4021:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct PoliciesAgg.PolicyTerms memory[] memory"
                              }
                            },
                            "id": 517,
                            "indexExpression": {
                              "id": 516,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "4027:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4021:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PolicyTerms_$327_memory_ptr",
                              "typeString": "struct PoliciesAgg.PolicyTerms memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 519,
                                "name": "policyAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 474,
                                "src": "4054:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 520,
                                "name": "term",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "4076:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Terms_$48443_memory_ptr",
                                  "typeString": "struct T.Terms memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Terms_$48443_memory_ptr",
                                  "typeString": "struct T.Terms memory"
                                }
                              ],
                              "id": 518,
                              "name": "PolicyTerms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 327,
                              "src": "4032:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PolicyTerms_$327_storage_ptr_$",
                                "typeString": "type(struct PoliciesAgg.PolicyTerms storage pointer)"
                              }
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": ["4046:6:1", "4069:5:1"],
                            "names": ["policy", "terms"],
                            "nodeType": "FunctionCall",
                            "src": "4032:51:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PolicyTerms_$327_memory_ptr",
                              "typeString": "struct PoliciesAgg.PolicyTerms memory"
                            }
                          },
                          "src": "4021:62:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyTerms_$327_memory_ptr",
                            "typeString": "struct PoliciesAgg.PolicyTerms memory"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "4021:62:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 464,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 461,
                      "src": "3574:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 465,
                      "name": "availablePoliciesLen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "3578:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3574:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 525,
                  "initializationExpression": {
                    "assignments": [461],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3567:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "3559:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3559:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 463,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3571:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3559:13:1"
                  },
                  "isSimpleCounterLoop": false,
                  "loopExpression": {
                    "expression": {
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 467,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "3600:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 468,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "3604:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3606:12:1",
                          "memberName": "uncheckedInc",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47949,
                          "src": "3604:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3604:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3600:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 472,
                    "nodeType": "ExpressionStatement",
                    "src": "3600:20:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3554:540:1"
                },
                {
                  "expression": {
                    "id": 526,
                    "name": "terms",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "4111:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PoliciesAgg.PolicyTerms memory[] memory"
                    }
                  },
                  "functionReturnParameters": 431,
                  "id": 527,
                  "nodeType": "Return",
                  "src": "4104:12:1"
                }
              ]
            },
            "documentation": {
              "id": 421,
              "nodeType": "StructuredDocumentation",
              "src": "2981:197:1",
              "text": "@notice Retrieves all available policies for a holder matching specific criteria.\n @param holder Address of the rights holder.\n @param criteria Encoded data for policy evaluation."
            },
            "functionSelector": "9f30b60f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailablePoliciesTerms",
            "nameLocation": "3192:25:1",
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "3235:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "3227:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3227:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "criteria",
                  "nameLocation": "3264:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "3251:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3217:61:1"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "3300:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PoliciesAgg.PolicyTerms[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 428,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 427,
                        "name": "PolicyTerms",
                        "nameLocations": ["3300:11:1"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 327,
                        "src": "3300:11:1"
                      },
                      "referencedDeclaration": 327,
                      "src": "3300:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyTerms_$327_storage_ptr",
                        "typeString": "struct PoliciesAgg.PolicyTerms"
                      }
                    },
                    "id": 429,
                    "nodeType": "ArrayTypeName",
                    "src": "3300:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyTerms_$327_storage_$dyn_storage_ptr",
                      "typeString": "struct PoliciesAgg.PolicyTerms[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3299:22:1"
            },
            "scope": 540,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 539,
            "nodeType": "FunctionDefinition",
            "src": "4427:84:1",
            "nodes": [],
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "4509:2:1",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [40549],
            "documentation": {
              "id": 530,
              "nodeType": "StructuredDocumentation",
              "src": "4129:293:1",
              "text": "@notice Function that should revert when msg.sender is not authorized to upgrade the contract.\n @param newImplementation The address of the new implementation contract.\n @dev See https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable-_authorizeUpgrade-address-"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 536,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 535,
                  "name": "onlyAdmin",
                  "nameLocations": ["4499:9:1"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48500,
                  "src": "4499:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4499:9:1"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "4436:17:1",
            "overrides": {
              "id": 534,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4490:8:1"
            },
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4462:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4454:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4454:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4453:27:1"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4509:0:1"
            },
            "scope": 540,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 304,
              "name": "Initializable",
              "nameLocations": ["784:13:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40413,
              "src": "784:13:1"
            },
            "id": 305,
            "nodeType": "InheritanceSpecifier",
            "src": "784:13:1"
          },
          {
            "baseName": {
              "id": 306,
              "name": "UUPSUpgradeable",
              "nameLocations": ["799:15:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40595,
              "src": "799:15:1"
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "799:15:1"
          },
          {
            "baseName": {
              "id": 308,
              "name": "AccessControlledUpgradeable",
              "nameLocations": ["816:27:1"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48582,
              "src": "816:27:1"
            },
            "id": 309,
            "nodeType": "InheritanceSpecifier",
            "src": "816:27:1"
          }
        ],
        "canonicalName": "PoliciesAgg",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          540, 48582, 40159, 40939, 40641, 40595, 41508, 40413
        ],
        "name": "PoliciesAgg",
        "nameLocation": "769:11:1",
        "scope": 541,
        "usedErrors": [
          40176, 40179, 40440, 40445, 40910, 40916, 40920, 41566, 41579, 42530,
          42792, 48482
        ],
        "usedEvents": [40184, 40906, 41481]
      }
    ],
    "license": "MIT"
  },
  "id": 1
}
